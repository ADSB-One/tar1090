{"version":3,"file":"ol-custom.js","sources":["node_modules/ol/util.js","node_modules/ol/AssertionError.js","node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/Object.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/asserts.js","node_modules/ol/Feature.js","node_modules/ol/geom/GeometryLayout.js","node_modules/ol/geom/GeometryType.js","node_modules/ol/proj/Units.js","node_modules/ol/transform.js","node_modules/ol/extent/Corner.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/proj/Projection.js","node_modules/ol/math.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/sphere.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/proj.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/render/EventType.js","node_modules/ol/style/Fill.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/style/Stroke.js","node_modules/ol/ImageState.js","node_modules/ol/size.js","node_modules/ol/style/Image.js","node_modules/ol/color.js","node_modules/ol/colorlike.js","node_modules/ol/has.js","node_modules/ol/dom.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Style.js","node_modules/ol/style/TextPlacement.js","node_modules/ol/style/Text.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/source/State.js","node_modules/ol/layer/Layer.js","node_modules/quickselect/index.js","node_modules/rbush/index.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/Event.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/render/canvas/BuilderType.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/ViewHint.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style/IconAnchorUnits.js","node_modules/ol/style/IconOrigin.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/ImageBase.js","node_modules/ol/Image.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/Icon.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/layer/Vector.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/format/FormatType.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","node_modules/ol/TileState.js","node_modules/ol/easing.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/Kinetic.js","node_modules/ol/renderer/Map.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/ViewProperty.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/View.js","node_modules/ol/tilegrid/common.js","node_modules/ol/PluggableMap.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/ScaleLine.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/KeyCode.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/DragAndDrop.js","node_modules/ol/interaction/DragRotateAndZoom.js","node_modules/ol/geom/Circle.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/flat/center.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/interaction/Draw.js","node_modules/ol/interaction/Extent.js","node_modules/ol/interaction/Modify.js","node_modules/ol/interaction/Select.js","node_modules/ol/interaction/Snap.js","node_modules/ol/interaction/Translate.js","node_modules/ol/interaction.js","node_modules/ol/Map.js","node_modules/ol/control.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/TileRange.js","node_modules/ol/VectorRenderTile.js","node_modules/ol/VectorTile.js","node_modules/ol-layerswitcher/dist/ol-layerswitcher.js","node_modules/ol/format/Feature.js","node_modules/ol/format/JSONFeature.js","node_modules/ol/geom/GeometryCollection.js","node_modules/ol/format/GeoJSON.js","node_modules/ol/xml.js","node_modules/ol/format/XMLFeature.js","node_modules/ol/format/xsd.js","node_modules/ol/format/KML.js","node_modules/ieee754/index.js","node_modules/pbf/index.js","node_modules/ol/render/Feature.js","node_modules/ol/format/MVT.js","node_modules/ol/webgl.js","node_modules/ol/webgl/Buffer.js","node_modules/ol/webgl/ContextEventType.js","node_modules/ol/webgl/PostProcessingPass.js","node_modules/ol/vec/mat4.js","node_modules/ol/webgl/Helper.js","node_modules/ol/renderer/webgl/Layer.js","node_modules/ol/webgl/RenderTarget.js","node_modules/ol/worker/webgl.js","node_modules/ol/renderer/webgl/PointsLayer.js","node_modules/ol/layer/Heatmap.js","node_modules/ol/layer/BaseImage.js","node_modules/ol/renderer/canvas/ImageLayer.js","node_modules/ol/layer/Image.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/VectorTileRenderType.js","node_modules/ol/renderer/canvas/VectorTileLayer.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/VectorTile.js","node_modules/ol/source/TileEventType.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/VectorTile.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/reproj.js","node_modules/ol/layer/Tile.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/source/common.js","node_modules/ol/reproj/Tile.js","node_modules/ol/reproj/common.js","node_modules/ol/source/TileImage.js","node_modules/ol/style/expressions.js","node_modules/ol/webgl/ShaderBuilder.js","node_modules/ol/layer/WebGLPoints.js","node_modules/ol/source/BingMaps.js","node_modules/ol/net.js","node_modules/ol/source/XYZ.js","node_modules/ol/reproj/Image.js","node_modules/ol/source/Image.js","node_modules/ol/uri.js","node_modules/ol/source/WMSServerType.js","node_modules/ol/source/ImageWMS.js","node_modules/ol/source/OSM.js","node_modules/ol/source/TileWMS.js","main.js"],"sourcesContent":["/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.5.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.hasProperties() ? this.getProperties() : null);\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width\n        ? numberString\n        : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                document.body.removeChild(div);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            var renderOptions = this.createRenderOptions();\n            this.createHitDetectionCanvas_(renderOptions);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        if (!this.canvas_[pixelRatio || 1]) {\n            var renderOptions = this.createRenderOptions();\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio || 1, renderOptions.size * pixelRatio || 1);\n            this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n            this.canvas_[pixelRatio || 1] = context.canvas;\n        }\n        return this.canvas_[pixelRatio || 1];\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @returns {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var renderOptions = this.createRenderOptions();\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.draw_(renderOptions, context, 0, 0, 1);\n        this.canvas_ = {};\n        this.canvas_[1] = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        var size = context.canvas.width;\n        var imageSize = size;\n        var displacement = this.getDisplacement();\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y, pixelRatio) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionCanvas_ = this.getImage(1);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding(),\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction, } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder',\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ =\n            options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ =\n            options.renderBuffer !== undefined ? options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ =\n            options.updateWhileAnimating !== undefined\n                ? options.updateWhileAnimating\n                : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ =\n            options.updateWhileInteracting !== undefined\n                ? options.updateWhileInteracting\n                : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    BaseVectorLayer.prototype.renderDeclutter = function (frameState) {\n        if (!frameState.declutterTree) {\n            frameState.declutterTree = new RBush(9);\n        }\n        /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n        this.styleFunction_ =\n            opt_style === null ? undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEndss,\n                geometry,\n                renderer,\n                inflateMultiCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.POLYGON ||\n            type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates =\n                type == GeometryType.POLYGON\n                    ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                    : geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnds,\n                geometry,\n                renderer,\n                inflateCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.LINE_STRING ||\n            type == GeometryType.CIRCLE) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n                inflateCoordinates,\n            ]);\n        }\n        else if (type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (builderEnd > builderBegin) {\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n            }\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n            ]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == GeometryType.LINE_STRING ||\n                geometryType == GeometryType.MULTI_LINE_STRING ||\n                geometryType == GeometryType.POLYGON ||\n                geometryType == GeometryType.MULTI_POLYGON)) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var x1 = 0;\n    var y1 = 0;\n    var segmentLength = 0;\n    var segmentM = 0;\n    function advance() {\n        x1 = x2;\n        y1 = y2;\n        offset += stride;\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        segmentM += segmentLength;\n        segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    do {\n        advance();\n    } while (offset < end - stride && segmentM + segmentLength < startM);\n    var interpolate = (startM - segmentM) / segmentLength;\n    var beginX = lerp(x1, x2, interpolate);\n    var beginY = lerp(y1, y2, interpolate);\n    var startOffset = offset - stride;\n    var startLength = segmentM;\n    var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n    while (offset < end - stride && segmentM + segmentLength < endM) {\n        advance();\n    }\n    interpolate = (endM - segmentM) / segmentLength;\n    var endX = lerp(x1, x2, interpolate);\n    var endY = lerp(y1, y2, interpolate);\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var flat = [beginX, beginY, endX, endY];\n        rotate(flat, 0, 4, 2, rotation, flat, flat);\n        reverse = flat[0] > flat[2];\n    }\n    else {\n        reverse = beginX > endX;\n    }\n    var PI = Math.PI;\n    var result = [];\n    var singleSegment = startOffset + stride === offset;\n    offset = startOffset;\n    segmentLength = 0;\n    segmentM = startLength;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    // All on the same segment\n    if (singleSegment) {\n        advance();\n        var previousAngle_1 = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            previousAngle_1 += previousAngle_1 > 0 ? -PI : PI;\n        }\n        var x = (endX + beginX) / 2;\n        var y = (endY + beginY) / 2;\n        result[0] = [x, y, (endM - startM) / 2, previousAngle_1, text];\n        return result;\n    }\n    var previousAngle;\n    for (var i = 0, ii = text.length; i < ii;) {\n        advance();\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -PI : PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var iStart = i;\n        var charLength = 0;\n        for (; i < ii; ++i) {\n            var index = reverse ? ii - i - 1 : i;\n            var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n            if (offset + stride < end &&\n                segmentM + segmentLength < startM + charLength + len / 2) {\n                break;\n            }\n            charLength += len;\n        }\n        if (i === iStart) {\n            continue;\n        }\n        var chars = reverse\n            ? text.substring(ii - iStart, ii - i)\n            : text.substring(iStart, i);\n        interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result.push([x, y, charLength / 2, angle, chars]);\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextBaseline, drawImageOrLabel, } from '../canvas.js';\nimport { defaultTextAlign, measureAndCacheTextWidth, measureTextHeight, measureTextWidths, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {*} value\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX\n * @property {number} drawImageY\n * @property {number} drawImageW\n * @property {number} drawImageH\n * @property {number} originX\n * @property {number} originY\n * @property {Array<number>} scale\n * @property {BBox} declutterBox\n * @property {import(\"../../transform.js\").Transform} canvasTransform\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        this.renderBuffer_ = renderBuffer;\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var lines = text.split('\\n');\n        var numLines = lines.length;\n        var widths = [];\n        var width = measureTextWidths(textState.font, lines, widths);\n        var lineHeight = measureTextHeight(textState.font);\n        var height = lineHeight * numLines;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        contextInstructions.push('font', textState.font);\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var i;\n        if (strokeKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('strokeText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        if (fillKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('fillText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        var imageArgs = void 0;\n                        var imageDeclutterBox = void 0;\n                        if (opt_declutterTree && declutterImageWithText) {\n                            if (!declutterImageWithText[d]) {\n                                // We now have the image for an image+text combination.\n                                declutterImageWithText[d] = args;\n                                // Don't render anything for now, wait for the text.\n                                continue;\n                            }\n                            imageArgs = declutterImageWithText[d];\n                            delete declutterImageWithText[d];\n                            imageDeclutterBox = getDeclutterBox(imageArgs);\n                            if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                continue;\n                            }\n                        }\n                        if (opt_declutterTree &&\n                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                            continue;\n                        }\n                        if (imageArgs) {\n                            // We now have image and text for an image+text combination.\n                            if (opt_declutterTree) {\n                                opt_declutterTree.insert(imageDeclutterBox);\n                            }\n                            // Render the image before we render the text.\n                            this.replayImageOrLabel_.apply(this, imageArgs);\n                        }\n                        if (opt_declutterTree) {\n                            opt_declutterTree.insert(dimensions.declutterBox);\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            var renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions, renderBuffer);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize)\n                .data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== BuilderType.IMAGE &&\n                            builderType !== BuilderType.TEXT) ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: this.pixelRatio_ *\n                    (strokeStyleWidth !== undefined\n                        ? strokeStyleWidth\n                        : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageSize = imageStyle.getSize();\n            if (!imageSize) {\n                this.image_ = null;\n            }\n            else {\n                var imageAnchor = imageStyle.getAnchor();\n                // FIXME pixel ratio\n                var imageImage = imageStyle.getImage(1);\n                var imageOrigin = imageStyle.getOrigin();\n                var imageScale = imageStyle.getScaleArray();\n                this.imageAnchorX_ = imageAnchor[0];\n                this.imageAnchorY_ = imageAnchor[1];\n                this.imageHeight_ = imageSize[1];\n                this.image_ = imageImage;\n                this.imageOpacity_ = imageStyle.getOpacity();\n                this.imageOriginX_ = imageOrigin[0];\n                this.imageOriginY_ = imageOrigin[1];\n                this.imageRotateWithView_ = imageStyle.getRotateWithView();\n                this.imageRotation_ = imageStyle.getRotation();\n                this.imageScale_ = [\n                    this.pixelRatio_ * imageScale[0],\n                    this.pixelRatio_ * imageScale[1],\n                ];\n                this.imageWidth_ = imageSize[0];\n            }\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ || this.canvas_[pixelRatio]) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ration of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        var displacement = this.getDisplacement();\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        offset[0] += displacement[0];\n        offset[1] += displacement[1];\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] / 2;\n    var height = size[1] / 2;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var canvas_1 = document.createElement('canvas');\n                canvas_1.width = imgSize[0];\n                canvas_1.height = imgSize[1];\n                var imgContext = canvas_1.getContext('2d', { alpha: false });\n                imgContext.fillStyle = color;\n                var img = imgContext.canvas;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                var width_1 = imgSize ? imgSize[0] : img.width;\n                var height_1 = imgSize ? imgSize[1] : img.height;\n                var iconContext = createCanvasContext2D(width_1, height_1);\n                iconContext.drawImage(img, 0, 0);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    size: image.getSize(),\n                    opacity: image.getOpacity(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = Number(style.getZIndex());\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry && intersects(extent, geometry.getExtent())) {\n                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n            }\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.context;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        this.renderWorlds(replayGroup, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : String(opacity);\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.renderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] / 2;\n                var height = size[1] / 2;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml',\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport { VOID } from './functions.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection and success and failure callbacks as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(url, format, extent, resolution, projection, success, failure) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n    if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n    }\n    xhr.withCredentials = withCredentials;\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    xhr.onload = function (event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n            var type = format.getType();\n            /** @type {Document|Node|Object|string|undefined} */\n            var source = void 0;\n            if (type == FormatType.JSON || type == FormatType.TEXT) {\n                source = xhr.responseText;\n            }\n            else if (type == FormatType.XML) {\n                source = xhr.responseXML;\n                if (!source) {\n                    source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                }\n            }\n            else if (type == FormatType.ARRAY_BUFFER) {\n                source = /** @type {ArrayBuffer} */ (xhr.response);\n            }\n            if (source) {\n                success(\n                /** @type {Array<import(\"./Feature.js\").default>} */\n                (format.readFeatures(source, {\n                    extent: extent,\n                    featureProjection: projection,\n                })), format.readProjection(source));\n            }\n            else {\n                failure();\n            }\n        }\n        else {\n            failure();\n        }\n    };\n    /**\n     * @private\n     */\n    xhr.onerror = failure;\n    xhr.send();\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @param {function(): void=} success Success\n     *      Function called when loading succeeded.\n     * @param {function(): void=} failure Failure\n     *      Function called when loading failed.\n     * @this {import(\"./source/Vector\").default}\n     */\n    return function (extent, resolution, projection, success, failure) {\n        var source = /** @type {import(\"./source/Vector\").default} */ (this);\n        loadFeaturesXhr(url, format, extent, resolution, projection, \n        /**\n         * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n         * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n         * projection.\n         */\n        function (features, dataProjection) {\n            if (success !== undefined) {\n                success(features);\n            }\n            source.addFeatures(features);\n        }, \n        /* FIXME handle error */ failure ? failure : VOID);\n    };\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>=} opt_features Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray();\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(layer);\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        this.padding = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        return this.getTargetElement()\n            ? this.getTargetElement().ownerDocument\n            : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = 'host' in rootNode // ShadowRoot\n                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)\n                : /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { METERS_PER_UNIT, getPointResolution } from '../proj.js';\nimport { assert } from '../asserts.js';\nimport { getChangeEventType } from '../Object.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us',\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @const\n * @type {number}\n */\nvar DEFAULT_DPI = 25.4 / 0.28;\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options=} opt_options Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined\n            ? options.className\n            : options.bar\n                ? 'ol-scale-bar'\n                : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        _this.addEventListener(getChangeEventType(UNITS_PROP), _this.handleUnitsChanged_);\n        _this.setUnits(options.units || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.dpi_ = options.dpi || undefined;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {import(\"./ScaleLine.js\").Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * Specify the dpi of output device such as printer.\n     * @param {number|undefined} dpi The dpi of output device.\n     * @api\n     */\n    ScaleLine.prototype.setDpi = function (dpi) {\n        this.dpi_ = dpi;\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var minWidth = (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n        var nominalCount = minWidth * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'nm';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'μm';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            else if (width >= minWidth) {\n                break;\n            }\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @returns {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = '#ffffff';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar\" ' +\n                'style=' +\n                '\"width: ' +\n                stepWidth +\n                'px;' +\n                'background-color: ' +\n                backgroundColor +\n                ';\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2\n                    ? this.createStepText(i, width, false, scale, suffix)\n                    : '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                {\n                    /*render text at the end */\n                }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch colors of steps between black and white\n            if (backgroundColor === '#ffffff') {\n                backgroundColor = '#000000';\n            }\n            else {\n                backgroundColor = '#ffffff';\n            }\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText =\n                '<div ' +\n                    'class=\"ol-scale-text\" ' +\n                    'style=\"width: ' +\n                    width +\n                    'px;\">' +\n                    mapScale +\n                    '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position - The position, absolute or relative\n     * @param {number} i - The iterator\n     * @returns {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return ('<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' +\n            position +\n            ';' +\n            'top: ' +\n            top +\n            'px;\"' +\n            '></div>');\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i - The iterator\n     * @param {number} width - The width the scalebar will currently use\n     * @param {boolean} isLast - Flag indicating if we add the last step text\n     * @param {number} scale - The current scale for the whole scalebar\n     * @param {string} suffix - The suffix for the scale\n     * @returns {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n        var minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n        return ('<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' +\n            margin +\n            'px;' +\n            'text-align: ' +\n            (i === 0 ? 'left' : 'center') +\n            '; ' +\n            'min-width: ' +\n            minWidth +\n            'px;' +\n            'left: ' +\n            (isLast ? width + 'px' : 'unset') +\n            ';\"' +\n            '>' +\n            lengthString +\n            '</div>');\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = getPointResolution(this.viewState_.projection, this.viewState_.resolution, this.viewState_.center);\n        var dpi = this.dpi_ || DEFAULT_DPI;\n        var mpu = this.viewState_.projection.getMetersPerUnit();\n        var inchesPerMeter = 1000 / 25.4;\n        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n    };\n    /**\n     * Update the scale line element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    ScaleLine.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            this.viewState_ = null;\n        }\n        else {\n            this.viewState_ = frameState.viewState;\n        }\n        this.updateElement_();\n    };\n    return ScaleLine;\n}(Control));\nexport default ScaleLine;\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport FormatType from '../format/FormatType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { get as getProjection } from '../proj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n    /**\n     * Triggered when features are added\n     * @event DragAndDropEvent#addfeatures\n     * @api\n     */\n    ADD_FEATURES: 'addfeatures',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */ (function (_super) {\n    __extends(DragAndDropEvent, _super);\n    /**\n     * @param {DragAndDropEventType} type Type.\n     * @param {File} file File.\n     * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     */\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features parsed from dropped data.\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        /**\n         * The dropped file.\n         * @type {File}\n         * @api\n         */\n        _this.file = file;\n        /**\n         * The feature projection.\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         * @api\n         */\n        _this.projection = opt_projection;\n        return _this;\n    }\n    return DragAndDropEvent;\n}(Event));\nexport { DragAndDropEvent };\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\n * combinnation of formats read both text string and ArrayBuffer sources. Older browsers such\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */ (function (_super) {\n    __extends(DragAndDrop, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragAndDrop(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            handleEvent: TRUE,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.readAsBuffer_ = false;\n        /**\n         * @private\n         * @type {Array<import(\"../format/Feature.js\").default>}\n         */\n        _this.formats_ = [];\n        var formatConstructors = options.formatConstructors\n            ? options.formatConstructors\n            : [];\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n            var format = formatConstructors[i];\n            if (typeof format === 'function') {\n                format = new format();\n            }\n            _this.formats_.push(format);\n            _this.readAsBuffer_ =\n                _this.readAsBuffer_ || format.getType() === FormatType.ARRAY_BUFFER;\n        }\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = options.projection\n            ? getProjection(options.projection)\n            : null;\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.dropListenKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../source/Vector.js\").default}\n         */\n        _this.source_ = options.source || null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target = options.target ? options.target : null;\n        return _this;\n    }\n    /**\n     * @param {File} file File.\n     * @param {Event} event Load event.\n     * @private\n     */\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\n        var result = event.target.result;\n        var map = this.getMap();\n        var projection = this.projection_;\n        if (!projection) {\n            var view = map.getView();\n            projection = view.getProjection();\n        }\n        var text;\n        var formats = this.formats_;\n        for (var i = 0, ii = formats.length; i < ii; ++i) {\n            var format = formats[i];\n            var input = result;\n            if (this.readAsBuffer_ && format.getType() !== FormatType.ARRAY_BUFFER) {\n                if (text === undefined) {\n                    text = new TextDecoder().decode(result);\n                }\n                input = text;\n            }\n            var features = this.tryReadFeatures_(format, input, {\n                featureProjection: projection,\n            });\n            if (features && features.length > 0) {\n                if (this.source_) {\n                    this.source_.clear();\n                    this.source_.addFeatures(features);\n                }\n                this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n                break;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.registerListeners_ = function () {\n        var map = this.getMap();\n        if (map) {\n            var dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                listen(dropArea, EventType.DROP, this.handleDrop, this),\n                listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n                listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n                listen(dropArea, EventType.DROP, this.handleStop, this),\n            ];\n        }\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    DragAndDrop.prototype.setActive = function (active) {\n        if (!this.getActive() && active) {\n            this.registerListeners_();\n        }\n        if (this.getActive() && !active) {\n            this.unregisterListeners_();\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    DragAndDrop.prototype.setMap = function (map) {\n        this.unregisterListeners_();\n        _super.prototype.setMap.call(this, map);\n        if (this.getActive()) {\n            this.registerListeners_();\n        }\n    };\n    /**\n     * @param {import(\"../format/Feature.js\").default} format Format.\n     * @param {string} text Text.\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n     * @private\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n        try {\n            return (\n            /** @type {Array<import(\"../Feature.js\").default>} */\n            (format.readFeatures(text, options)));\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.unregisterListeners_ = function () {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach(unlistenByKey);\n            this.dropListenKeys_ = null;\n        }\n    };\n    /**\n     * @param {DragEvent} event Event.\n     */\n    DragAndDrop.prototype.handleDrop = function (event) {\n        var files = event.dataTransfer.files;\n        for (var i = 0, ii = files.length; i < ii; ++i) {\n            var file = files.item(i);\n            var reader = new FileReader();\n            reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n            if (this.readAsBuffer_) {\n                reader.readAsArrayBuffer(file);\n            }\n            else {\n                reader.readAsText(file);\n            }\n        }\n    };\n    /**\n     * @param {DragEvent} event Event.\n     */\n    DragAndDrop.prototype.handleStop = function (event) {\n        event.stopPropagation();\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n    };\n    return DragAndDrop;\n}(Interaction));\nexport default DragAndDrop;\n//# sourceMappingURL=DragAndDrop.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport { mouseOnly, shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /** @class */ (function (_super) {\n    __extends(DragRotateAndZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotateAndZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastMagnitude_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var deltaX = offset[0] - size[0] / 2;\n        var deltaY = size[1] / 2 - offset[1];\n        var theta = Math.atan2(deltaY, deltaX);\n        var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        var view = map.getView();\n        if (this.lastAngle_ !== undefined) {\n            var angleDelta = this.lastAngle_ - theta;\n            view.adjustRotationInternal(angleDelta);\n        }\n        this.lastAngle_ = theta;\n        if (this.lastMagnitude_ !== undefined) {\n            view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n        }\n        if (this.lastMagnitude_ !== undefined) {\n            this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n        }\n        this.lastMagnitude_ = magnitude;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n        view.endInteraction(this.duration_, direction);\n        this.lastScaleDelta_ = 0;\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (this.condition_(mapBrowserEvent)) {\n            mapBrowserEvent.map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            this.lastMagnitude_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotateAndZoom;\n}(PointerInteraction));\nexport default DragRotateAndZoom;\n//# sourceMappingURL=DragRotateAndZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        var circle = new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n        circle.applyProperties(this);\n        return circle;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        multiLineString.applyProperties(this);\n        return multiLineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        multiPoint.applyProperties(this);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n        multiPolygon.applyProperties(this);\n        return multiPolygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { always, noModifierKeys, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../extent.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromUserCoordinate, getUserProjection } from '../proj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle',\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend',\n    /**\n     * Triggered upon feature draw abortion\n     * @event DrawEvent#drawabort\n     * @api\n     */\n    DRAWABORT: 'drawabort',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\nexport { DrawEvent };\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * Pointer type of the last pointermove event\n         * @type {string}\n         * @private\n         */\n        _this.pointerType_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {import(\"../geom/GeometryType.js\").default}\n         * @private\n         */\n        _this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints\n            ? options.minPoints\n            : _this.mode_ === Mode.POLYGON\n                ? 3\n                : 2;\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ =\n            _this.mode_ === Mode.CIRCLE\n                ? 2\n                : options.maxPoints\n                    ? options.maxPoints\n                    : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition\n            ? options.finishCondition\n            : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            var mode_1 = _this.mode_;\n            if (mode_1 === Mode.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, geometry, projection) {\n                    var circle = geometry\n                        ? /** @type {Circle} */ (geometry)\n                        : new Circle([NaN, NaN]);\n                    var center = fromUserCoordinate(coordinates[0], projection);\n                    var squaredLength = squaredCoordinateDistance(center, fromUserCoordinate(coordinates[coordinates.length - 1], projection));\n                    circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n                    var userProjection = getUserProjection();\n                    if (userProjection) {\n                        circle.transform(projection, userProjection);\n                    }\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, geometry, projection) {\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([\n                                    coordinates[0].concat([coordinates[0][0]]),\n                                ]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ =\n            options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature<LineString>}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance\n            ? options.clickTolerance * options.clickTolerance\n            : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false,\n            }),\n            style: options.style ? options.style : getDefaultStyleFunction(),\n            updateWhileInteracting: true,\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition\n                ? options.freehandCondition\n                : shiftKeyOnly;\n        }\n        _this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_);\n        return _this;\n    }\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.originalEvent.preventDefault();\n        }\n        this.freehand_ =\n            this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ &&\n            this.lastDragTime_ &&\n            event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event.coordinate);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move && this.getPointerCount() < 2) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                this.handlePointerMove_(event);\n                if (this.shouldHandle_) {\n                    // Avoid page scrolling when freehand drawing on mobile\n                    event.originalEvent.preventDefault();\n                }\n            }\n            else if (event.originalEvent.pointerType === 'mouse' ||\n                (event.type === MapBrowserEventType.POINTERDRAG &&\n                    this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event.coordinate);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserEvent(MapBrowserEventType.POINTERMOVE, event.map, event.originalEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.getPointerCount() === 0) {\n            if (this.downTimeout_) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n            this.handlePointerMove_(event);\n            if (this.shouldHandle_) {\n                switch (true) {\n                    case !this.finishCoordinate_:\n                        this.startDrawing_(event.coordinate);\n                        if (this.mode_ !== Mode.POINT) {\n                            break;\n                        }\n                    // eslint-disable-next-line no-fallthrough\n                    case this.freehand_ ||\n                        (this.atFinish_(event.pixel) && this.finishCondition_(event)):\n                        this.finishDrawing();\n                        break;\n                    case !this.freehand_:\n                        this.addToDrawing_(event.coordinate);\n                        break;\n                    default:\n                        break;\n                }\n                pass = false;\n            }\n            else if (this.freehand_) {\n                this.abortDrawing();\n            }\n        }\n        if (!pass && this.stopClick_) {\n            event.originalEvent.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        this.pointerType_ = event.originalEvent.pointerType;\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_\n                ? squaredDistance > this.squaredClickTolerance_\n                : squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event.coordinate);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (pixel) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            var mode = this.mode_;\n            if (mode === Mode.POINT) {\n                at = true;\n            }\n            else if (mode === Mode.CIRCLE) {\n                at = this.sketchCoords_.length === 2;\n            }\n            else if (mode === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (mode === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [\n                    sketchCoords[0][0],\n                    sketchCoords[0][sketchCoords[0].length - 2],\n                ];\n            }\n            if (potentiallyDone) {\n                var map = this.getMap();\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n     * @private\n     */\n    Draw.prototype.createOrUpdateCustomSketchLine_ = function (geometry) {\n        if (!this.sketchLine_) {\n            this.sketchLine_ = new Feature();\n        }\n        var ring = geometry.getLinearRing(0);\n        var sketchLineGeom = this.sketchLine_.getGeometry();\n        if (!sketchLineGeom) {\n            sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n            this.sketchLine_.setGeometry(sketchLineGeom);\n        }\n        else {\n            sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n            sketchLineGeom.changed();\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (start) {\n        var projection = this.getMap().getView().getProjection();\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_, undefined, projection);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (coordinate) {\n        var map = this.getMap();\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = map.getView().getProjection();\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(\n        /** @type {!LineCoordType} */ (this.sketchCoords_), geometry, projection);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        if (geometry.getType() === GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n        }\n        else if (this.sketchLineCoords_) {\n            var sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {!PointCoordType} coordinate Coordinate\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (coordinate) {\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var done;\n        var coordinates;\n        var mode = this.mode_;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (mode === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn. Does not do anything when\n     * drawing POINT or MULTI_POINT geometries.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var coordinates;\n        var mode = this.mode_;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n                var finishCoordinate = this.finishCoordinate_.slice();\n                coordinates[coordinates.length - 1] = finishCoordinate;\n                this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n            }\n            this.geometryFunction_(coordinates, geometry, projection);\n            if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n                this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n            }\n        }\n        else if (mode === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            var sketchLineGeom = this.sketchLine_.getGeometry();\n            if (coordinates.length >= 2) {\n                var finishCoordinate = coordinates[coordinates.length - 2].slice();\n                coordinates[coordinates.length - 1] = finishCoordinate;\n                this.sketchPoint_.setGeometry(new Point(finishCoordinate));\n            }\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        if (coordinates.length === 1) {\n            this.abortDrawing();\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = sketchFeature.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        this.sketchFeature_ = null;\n        this.sketchPoint_ = null;\n        this.sketchLine_ = null;\n        this.overlay_.getSource().clear(true);\n        return sketchFeature;\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @api\n     */\n    Draw.prototype.abortDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (sketchFeature) {\n            this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n        }\n    };\n    /**\n     * Append coordinates to the end of the geometry that is currently being drawn.\n     * This can be used when drawing LineStrings or Polygons. Coordinates will\n     * either be appended to the current LineString or the outer ring of the current\n     * Polygon. If no geometry is being drawn, a new one will be created.\n     * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n     * the coordinate array.\n     * @api\n     */\n    Draw.prototype.appendCoordinates = function (coordinates) {\n        var mode = this.mode_;\n        var newDrawing = !this.sketchFeature_;\n        if (newDrawing) {\n            this.startDrawing_(coordinates[0]);\n        }\n        /** @type {LineCoordType} */\n        var sketchCoords;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n        }\n        else if (mode === Mode.POLYGON) {\n            sketchCoords =\n                this.sketchCoords_ && this.sketchCoords_.length\n                    ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n                    : [];\n        }\n        else {\n            return;\n        }\n        if (newDrawing) {\n            sketchCoords.shift();\n        }\n        // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n        sketchCoords.pop();\n        // Append coordinate list\n        for (var i = 0; i < coordinates.length; i++) {\n            this.addToDrawing_(coordinates[i]);\n        }\n        var ending = coordinates[coordinates.length - 1];\n        // Duplicate last coordinate for sketch drawing (cursor position)\n        this.addToDrawing_(ending);\n        this.modifyDrawing_(ending);\n    };\n    /**\n     * Initiate draw mode by starting from an existing geometry which will\n     * receive new additional points. This only works on features with\n     * `LineString` geometries, where the interaction will extend lines by adding\n     * points to the end of the coordinates array.\n     * This will change the original feature, instead of drawing a copy.\n     *\n     * The function will dispatch a `drawstart` event.\n     *\n     * @param {!Feature<LineString>} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = geometry;\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.sketchPoint_ = new Feature(new Point(last));\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number=} opt_angle Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry, projection) {\n        var center = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[0], projection);\n        var end = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1], projection);\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry\n            ? /** @type {Polygon} */ (opt_geometry)\n            : fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle && opt_angle !== 0) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan2(y, x);\n        }\n        makeRegular(geometry, center, radius, angle);\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return function (coordinates, opt_geometry, projection) {\n        var extent = boundingExtent(\n        /** @type {LineCoordType} */ ([\n            coordinates[0],\n            coordinates[coordinates.length - 1],\n        ]).map(function (coordinate) {\n            return fromUserCoordinate(coordinate, projection);\n        }));\n        var boxCoordinates = [\n            [\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent),\n            ],\n        ];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT || type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return /** @type {!Mode} */ (mode);\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEvent#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */ (function (_super) {\n    __extends(ExtentEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentEvent;\n}(Event));\nexport { ExtentEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */ (function (_super) {\n    __extends(Extent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Extent(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * Condition\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.boxStyle\n                ? opt_options.boxStyle\n                : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.pointerStyle\n                ? opt_options.pointerStyle\n                : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    Extent.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n        var sortByDistance = function (a, b) {\n            return (squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b));\n        };\n        var extent = this.getExtentInternal();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n            var vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex =\n                        squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @returns {Feature} extent as featrue\n     * @private\n     */\n    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @returns {Feature} vertex as feature\n     * @private\n     */\n    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Extent.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtentInternal();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n            var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtentInternal();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Extent.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection (or user projection if set)\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtent = function () {\n        return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtentInternal = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    Extent.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentEvent(this.extent_));\n    };\n    return Extent;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POLYGON];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [\n            [extent[0], extent[1]],\n            [extent[0], extent[3]],\n        ],\n        [\n            [extent[0], extent[3]],\n            [extent[2], extent[3]],\n        ],\n        [\n            [extent[2], extent[3]],\n            [extent[2], extent[1]],\n        ],\n        [\n            [extent[2], extent[1]],\n            [extent[0], extent[1]],\n        ],\n    ];\n}\nexport default Extent;\n//# sourceMappingURL=Extent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { altKeyOnly, always, primaryAction, singleClick, } from '../events/condition.js';\nimport { boundingExtent, buffer as bufferExtent, createOrUpdateFromCoordinate as createExtent, } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, equals as coordinatesEqual, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { equals } from '../array.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from '../proj.js';\nimport { getUid } from '../util.js';\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\nvar tempExtent = [0, 0, 0, 0];\nvar tempSegment = [];\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n    /**\n     * Triggered upon feature modification start\n     * @event ModifyEvent#modifystart\n     * @api\n     */\n    MODIFYSTART: 'modifystart',\n    /**\n     * Triggered upon feature modification end\n     * @event ModifyEvent#modifyend\n     * @api\n     */\n    MODIFYEND: 'modifyend',\n};\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nvar ModifyEvent = /** @class */ (function (_super) {\n    __extends(ModifyEvent, _super);\n    /**\n     * @param {ModifyEventType} type Type.\n     * @param {Collection<Feature>} features\n     * The features modified.\n     * @param {import(\"../MapBrowserEvent.js\").default} MapBrowserEvent\n     * Associated {@link module:ol/MapBrowserEvent}.\n     */\n    function ModifyEvent(type, features, MapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being modified.\n         * @type {Collection<Feature>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = MapBrowserEvent;\n        return _this;\n    }\n    return ModifyEvent;\n}(Event));\nexport { ModifyEvent };\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerane`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /** @class */ (function (_super) {\n    __extends(Modify, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Modify(options) {\n        var _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /** @private */\n        _this.boundHandleFeatureChange_ = _this.handleFeatureChange_.bind(_this);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : primaryAction;\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n            return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n        };\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.deleteCondition_ = options.deleteCondition\n            ? options.deleteCondition\n            : _this.defaultDeleteCondition_;\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.insertVertexCondition_ = options.insertVertexCondition\n            ? options.insertVertexCondition\n            : always;\n        /**\n         * Editing vertex.\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        /**\n         * Segments intersecting {@link this.vertexFeature_} by segment uid.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.vertexSegments_ = null;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.lastPixel_ = [0, 0];\n        /**\n         * Tracks if the next `singleclick` event should be ignored to prevent\n         * accidental deletion right after vertex creation.\n         * @type {boolean}\n         * @private\n         */\n        _this.ignoreNextSingleClick_ = false;\n        /**\n         * @type {Collection<Feature>}\n         * @private\n         */\n        _this.featuresBeingModified_ = null;\n        /**\n         * Segment RTree for each layer\n         * @type {RBush<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Indicate whether the interaction is currently changing a feature's\n         * coordinates.\n         * @type {boolean}\n         * @private\n         */\n        _this.changingFeature_ = false;\n        /**\n         * @type {Array}\n         * @private\n         */\n        _this.dragSegments_ = [];\n        /**\n         * Draw overlay where sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!options.wrapX,\n            }),\n            style: options.style ? options.style : getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        /**\n         * @const\n         * @private\n         * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_.bind(_this),\n            'LineString': _this.writeLineStringGeometry_.bind(_this),\n            'LinearRing': _this.writeLineStringGeometry_.bind(_this),\n            'Polygon': _this.writePolygonGeometry_.bind(_this),\n            'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),\n            'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),\n            'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),\n            'Circle': _this.writeCircleGeometry_.bind(_this),\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this),\n        };\n        /**\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = null;\n        /**\n         * @type {boolean|import(\"../layer/BaseVector\").default}\n         */\n        _this.hitDetection_ = null;\n        var features;\n        if (options.features) {\n            features = options.features;\n        }\n        else if (options.source) {\n            _this.source_ = options.source;\n            features = new Collection(_this.source_.getFeatures());\n            _this.source_.addEventListener(VectorEventType.ADDFEATURE, _this.handleSourceAdd_.bind(_this));\n            _this.source_.addEventListener(VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_.bind(_this));\n        }\n        if (!features) {\n            throw new Error('The modify interaction requires features, a source or a layer');\n        }\n        if (options.hitDetection) {\n            _this.hitDetection_ = options.hitDetection;\n        }\n        /**\n         * @type {Collection<import(\"../Feature.js\").FeatureLike>}\n         * @private\n         */\n        _this.features_ = features;\n        _this.features_.forEach(_this.addFeature_.bind(_this));\n        _this.features_.addEventListener(CollectionEventType.ADD, _this.handleFeatureAdd_.bind(_this));\n        _this.features_.addEventListener(CollectionEventType.REMOVE, _this.handleFeatureRemove_.bind(_this));\n        /**\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @private\n         */\n        _this.lastPointerEvent_ = null;\n        /**\n         * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n         * @type {Array<number>}\n         */\n        _this.delta_ = [0, 0];\n        return _this;\n    }\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.addFeature_ = function (feature) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var writer = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (writer) {\n                writer(feature, geometry);\n            }\n        }\n        var map = this.getMap();\n        if (map && map.isRendered() && this.getActive()) {\n            this.handlePointerAtPixel_(this.lastPixel_, map);\n        }\n        feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n     * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n     * @private\n     */\n    Modify.prototype.willModifyFeatures_ = function (evt, segments) {\n        if (!this.featuresBeingModified_) {\n            this.featuresBeingModified_ = new Collection();\n            var features = this.featuresBeingModified_.getArray();\n            for (var i = 0, ii = segments.length; i < ii; ++i) {\n                var feature = segments[i][0].feature;\n                if (features.indexOf(feature) === -1) {\n                    this.featuresBeingModified_.push(feature);\n                }\n            }\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.featuresBeingModified_, evt));\n        }\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeature_ = function (feature) {\n        this.removeFeatureSegmentData_(feature);\n        // Remove the vertex feature if the collection of canditate features is empty.\n        if (this.vertexFeature_ && this.features_.getLength() === 0) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        feature.removeEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeatureSegmentData_ = function (feature) {\n        var rBush = this.rBush_;\n        /** @type {Array<SegmentData>} */\n        var nodesToRemove = [];\n        rBush.forEach(\n        /**\n         * @param {SegmentData} node RTree node.\n         */\n        function (node) {\n            if (feature === node.feature) {\n                nodesToRemove.push(node);\n            }\n        });\n        for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n            var nodeToRemove = nodesToRemove[i];\n            for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n                if (this.dragSegments_[j][0] === nodeToRemove) {\n                    this.dragSegments_.splice(j, 1);\n                }\n            }\n            rBush.remove(nodeToRemove);\n        }\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Modify.prototype.setActive = function (active) {\n        if (this.vertexFeature_ && !active) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Modify.prototype.setMap = function (map) {\n        this.overlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Get the overlay layer that this interaction renders the modification point or vertex to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Modify.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceAdd_ = function (event) {\n        if (event.feature) {\n            this.features_.push(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceRemove_ = function (event) {\n        if (event.feature) {\n            this.features_.remove(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureAdd_ = function (evt) {\n        this.addFeature_(/** @type {Feature} */ (evt.element));\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureChange_ = function (evt) {\n        if (!this.changingFeature_) {\n            var feature = /** @type {Feature} */ (evt.target);\n            this.removeFeature_(feature);\n            this.addFeature_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = /** @type {Feature} */ (evt.element);\n        this.removeFeature_(feature);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {Point} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        /** @type {SegmentData} */\n        var segmentData = {\n            feature: feature,\n            geometry: geometry,\n            segment: [coordinates, coordinates],\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            /** @type {SegmentData} */\n            var segmentData = {\n                feature: feature,\n                geometry: geometry,\n                depth: [i],\n                index: i,\n                segment: [coordinates, coordinates],\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            /** @type {SegmentData} */\n            var segmentData = {\n                feature: feature,\n                geometry: geometry,\n                index: i,\n                segment: segment,\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                /** @type {SegmentData} */\n                var segmentData = {\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                /** @type {SegmentData} */\n                var segmentData = {\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    /** @type {SegmentData} */\n                    var segmentData = {\n                        feature: feature,\n                        geometry: geometry,\n                        depth: [j, k],\n                        index: i,\n                        segment: segment,\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * We convert a circle into two segments.  The segment at index\n     * {@link CIRCLE_CENTER_INDEX} is the\n     * circle's center (a point).  The segment at index\n     * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n     * the circumference, and is not a line segment.\n     *\n     * @param {Feature} feature Feature.\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCenter();\n        /** @type {SegmentData} */\n        var centerSegmentData = {\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CENTER_INDEX,\n            segment: [coordinates, coordinates],\n        };\n        /** @type {SegmentData} */\n        var circumferenceSegmentData = {\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CIRCUMFERENCE_INDEX,\n            segment: [coordinates, coordinates],\n        };\n        var featureSegments = [centerSegmentData, circumferenceSegmentData];\n        centerSegmentData.featureSegments = featureSegments;\n        circumferenceSegmentData.featureSegments = featureSegments;\n        this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n        var circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n        var userProjection = getUserProjection();\n        if (userProjection && this.getMap()) {\n            var projection = this.getMap().getView().getProjection();\n            circleGeometry = circleGeometry\n                .clone()\n                .transform(userProjection, projection);\n            circleGeometry = fromCircle(\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)).transform(projection, userProjection);\n        }\n        this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var geometry_1 = geometries[i];\n            var writer = this.SEGMENT_WRITERS_[geometry_1.getType()];\n            writer(feature, geometry_1);\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {Array<Feature>} features The features being modified.\n     * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n     * @return {Feature} Vertex feature.\n     * @private\n     */\n    Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates, features, geometries) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(coordinates));\n            this.vertexFeature_ = vertexFeature;\n            this.overlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(coordinates);\n        }\n        vertexFeature.set('features', features);\n        vertexFeature.set('geometries', geometries);\n        return vertexFeature;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Modify.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        this.lastPointerEvent_ = mapBrowserEvent;\n        var handled;\n        if (!mapBrowserEvent.map.getView().getInteracting() &&\n            mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n            if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n                !this.ignoreNextSingleClick_) {\n                handled = this.removePoint();\n            }\n            else {\n                handled = true;\n            }\n        }\n        if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n            this.ignoreNextSingleClick_ = false;\n        }\n        return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     */\n    Modify.prototype.handleDragEvent = function (evt) {\n        this.ignoreNextSingleClick_ = false;\n        this.willModifyFeatures_(evt, this.dragSegments_);\n        var vertex = [\n            evt.coordinate[0] + this.delta_[0],\n            evt.coordinate[1] + this.delta_[1],\n        ];\n        var features = [];\n        var geometries = [];\n        for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n            var dragSegment = this.dragSegments_[i];\n            var segmentData = dragSegment[0];\n            var feature = segmentData.feature;\n            if (features.indexOf(feature) === -1) {\n                features.push(feature);\n            }\n            var geometry = segmentData.geometry;\n            if (geometries.indexOf(geometry) === -1) {\n                geometries.push(geometry);\n            }\n            var depth = segmentData.depth;\n            var coordinates = void 0;\n            var segment = segmentData.segment;\n            var index = dragSegment[1];\n            while (vertex.length < geometry.getStride()) {\n                vertex.push(segment[index][vertex.length]);\n            }\n            switch (geometry.getType()) {\n                case GeometryType.POINT:\n                    coordinates = vertex;\n                    segment[0] = vertex;\n                    segment[1] = vertex;\n                    break;\n                case GeometryType.MULTI_POINT:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index] = vertex;\n                    segment[0] = vertex;\n                    segment[1] = vertex;\n                    break;\n                case GeometryType.LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.CIRCLE:\n                    segment[0] = vertex;\n                    segment[1] = vertex;\n                    if (segmentData.index === CIRCLE_CENTER_INDEX) {\n                        this.changingFeature_ = true;\n                        geometry.setCenter(vertex);\n                        this.changingFeature_ = false;\n                    }\n                    else {\n                        // We're dragging the circle's circumference:\n                        this.changingFeature_ = true;\n                        var projection = evt.map.getView().getProjection();\n                        var radius = coordinateDistance(fromUserCoordinate(geometry.getCenter(), projection), fromUserCoordinate(vertex, projection));\n                        var userProjection = getUserProjection();\n                        if (userProjection) {\n                            var circleGeometry = geometry\n                                .clone()\n                                .transform(userProjection, projection);\n                            circleGeometry.setRadius(radius);\n                            radius = circleGeometry\n                                .transform(projection, userProjection)\n                                .getRadius();\n                        }\n                        geometry.setRadius(radius);\n                        this.changingFeature_ = false;\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (coordinates) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n            }\n        }\n        this.createOrUpdateVertexFeature_(vertex, features, geometries);\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Modify.prototype.handleDownEvent = function (evt) {\n        if (!this.condition_(evt)) {\n            return false;\n        }\n        var pixelCoordinate = evt.coordinate;\n        this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n        this.dragSegments_.length = 0;\n        this.featuresBeingModified_ = null;\n        var vertexFeature = this.vertexFeature_;\n        if (vertexFeature) {\n            var projection = evt.map.getView().getProjection();\n            var insertVertices = [];\n            var vertex = vertexFeature.getGeometry().getCoordinates();\n            var vertexExtent = boundingExtent([vertex]);\n            var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n            var componentSegments = {};\n            segmentDataMatches.sort(compareIndexes);\n            for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n                var segmentDataMatch = segmentDataMatches[i];\n                var segment = segmentDataMatch.segment;\n                var uid = getUid(segmentDataMatch.geometry);\n                var depth = segmentDataMatch.depth;\n                if (depth) {\n                    uid += '-' + depth.join('-'); // separate feature components\n                }\n                if (!componentSegments[uid]) {\n                    componentSegments[uid] = new Array(2);\n                }\n                if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n                    segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch, projection);\n                    if (coordinatesEqual(closestVertex, vertex) &&\n                        !componentSegments[uid][0]) {\n                        this.dragSegments_.push([segmentDataMatch, 0]);\n                        componentSegments[uid][0] = segmentDataMatch;\n                    }\n                    continue;\n                }\n                if (coordinatesEqual(segment[0], vertex) &&\n                    !componentSegments[uid][0]) {\n                    this.dragSegments_.push([segmentDataMatch, 0]);\n                    componentSegments[uid][0] = segmentDataMatch;\n                    continue;\n                }\n                if (coordinatesEqual(segment[1], vertex) &&\n                    !componentSegments[uid][1]) {\n                    // prevent dragging closed linestrings by the connecting node\n                    if ((segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\n                        segmentDataMatch.geometry.getType() ===\n                            GeometryType.MULTI_LINE_STRING) &&\n                        componentSegments[uid][0] &&\n                        componentSegments[uid][0].index === 0) {\n                        continue;\n                    }\n                    this.dragSegments_.push([segmentDataMatch, 1]);\n                    componentSegments[uid][1] = segmentDataMatch;\n                    continue;\n                }\n                if (getUid(segment) in this.vertexSegments_ &&\n                    !componentSegments[uid][0] &&\n                    !componentSegments[uid][1] &&\n                    this.insertVertexCondition_(evt)) {\n                    insertVertices.push(segmentDataMatch);\n                }\n            }\n            if (insertVertices.length) {\n                this.willModifyFeatures_(evt, [insertVertices]);\n            }\n            for (var j = insertVertices.length - 1; j >= 0; --j) {\n                this.insertVertex_(insertVertices[j], vertex);\n            }\n        }\n        return !!this.vertexFeature_;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Modify.prototype.handleUpEvent = function (evt) {\n        for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n            var segmentData = this.dragSegments_[i][0];\n            var geometry = segmentData.geometry;\n            if (geometry.getType() === GeometryType.CIRCLE) {\n                // Update a circle object in the R* bush:\n                var coordinates = geometry.getCenter();\n                var centerSegmentData = segmentData.featureSegments[0];\n                var circumferenceSegmentData = segmentData.featureSegments[1];\n                centerSegmentData.segment[0] = coordinates;\n                centerSegmentData.segment[1] = coordinates;\n                circumferenceSegmentData.segment[0] = coordinates;\n                circumferenceSegmentData.segment[1] = coordinates;\n                this.rBush_.update(createExtent(coordinates), centerSegmentData);\n                var circleGeometry = geometry;\n                var userProjection = getUserProjection();\n                if (userProjection) {\n                    var projection = evt.map.getView().getProjection();\n                    circleGeometry = circleGeometry\n                        .clone()\n                        .transform(userProjection, projection);\n                    circleGeometry = fromCircle(circleGeometry).transform(projection, userProjection);\n                }\n                this.rBush_.update(circleGeometry.getExtent(), circumferenceSegmentData);\n            }\n            else {\n                this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n            }\n        }\n        if (this.featuresBeingModified_) {\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.featuresBeingModified_, evt));\n            this.featuresBeingModified_ = null;\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handlePointerMove_ = function (evt) {\n        this.lastPixel_ = evt.pixel;\n        this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_coordinate The pixel Coordinate.\n     * @private\n     */\n    Modify.prototype.handlePointerAtPixel_ = function (pixel, map, opt_coordinate) {\n        var _this = this;\n        var pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n        var projection = map.getView().getProjection();\n        var sortByDistance = function (a, b) {\n            return (projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n                projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection));\n        };\n        var nodes, hitPointGeometry;\n        if (this.hitDetection_) {\n            var layerFilter = typeof this.hitDetection_ === 'object'\n                ? function (layer) { return layer === _this.hitDetection_; }\n                : undefined;\n            map.forEachFeatureAtPixel(pixel, function (feature, layer, geometry) {\n                geometry = geometry || feature.getGeometry();\n                if (geometry.getType() === GeometryType.POINT) {\n                    hitPointGeometry = geometry;\n                    var coordinate = geometry.getCoordinates();\n                    nodes = [\n                        {\n                            feature: feature,\n                            geometry: geometry,\n                            segment: [coordinate, coordinate],\n                        },\n                    ];\n                }\n                return true;\n            }, { layerFilter: layerFilter });\n        }\n        if (!nodes) {\n            var viewExtent = fromUserExtent(createExtent(pixelCoordinate, tempExtent), projection);\n            var buffer = map.getView().getResolution() * this.pixelTolerance_;\n            var box = toUserExtent(bufferExtent(viewExtent, buffer, tempExtent), projection);\n            nodes = this.rBush_.getInExtent(box);\n        }\n        if (nodes && nodes.length > 0) {\n            var node = nodes.sort(sortByDistance)[0];\n            var closestSegment = node.segment;\n            var vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            var dist = coordinateDistance(pixel, vertexPixel);\n            if (hitPointGeometry || dist <= this.pixelTolerance_) {\n                /** @type {Object<string, boolean>} */\n                var vertexSegments = {};\n                vertexSegments[getUid(closestSegment)] = true;\n                this.delta_[0] = vertex[0] - pixelCoordinate[0];\n                this.delta_[1] = vertex[1] - pixelCoordinate[1];\n                if (node.geometry.getType() === GeometryType.CIRCLE &&\n                    node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    this.snappedToVertex_ = true;\n                    this.createOrUpdateVertexFeature_(vertex, [node.feature], [node.geometry]);\n                }\n                else {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                    if (this.snappedToVertex_) {\n                        vertex =\n                            squaredDist1 > squaredDist2\n                                ? closestSegment[1]\n                                : closestSegment[0];\n                    }\n                    this.createOrUpdateVertexFeature_(vertex, [node.feature], [node.geometry]);\n                    var geometries = {};\n                    geometries[getUid(node.geometry)] = true;\n                    for (var i = 1, ii = nodes.length; i < ii; ++i) {\n                        var segment = nodes[i].segment;\n                        if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                            coordinatesEqual(closestSegment[1], segment[1])) ||\n                            (coordinatesEqual(closestSegment[0], segment[1]) &&\n                                coordinatesEqual(closestSegment[1], segment[0]))) {\n                            var geometryUid = getUid(nodes[i].geometry);\n                            if (!(geometryUid in geometries)) {\n                                geometries[geometryUid] = true;\n                                vertexSegments[getUid(segment)] = true;\n                            }\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n                this.vertexSegments_ = vertexSegments;\n                return;\n            }\n        }\n        if (this.vertexFeature_) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n    };\n    /**\n     * @param {SegmentData} segmentData Segment data.\n     * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n     * @private\n     */\n    Modify.prototype.insertVertex_ = function (segmentData, vertex) {\n        var segment = segmentData.segment;\n        var feature = segmentData.feature;\n        var geometry = segmentData.geometry;\n        var depth = segmentData.depth;\n        var index = segmentData.index;\n        var coordinates;\n        while (vertex.length < geometry.getStride()) {\n            vertex.push(0);\n        }\n        switch (geometry.getType()) {\n            case GeometryType.MULTI_LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.MULTI_POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates.splice(index + 1, 0, vertex);\n                break;\n            default:\n                return;\n        }\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var rTree = this.rBush_;\n        rTree.remove(segmentData);\n        this.updateSegmentIndices_(geometry, index, depth, 1);\n        /** @type {SegmentData} */\n        var newSegmentData = {\n            segment: [segment[0], vertex],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index,\n        };\n        rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        this.dragSegments_.push([newSegmentData, 1]);\n        /** @type {SegmentData} */\n        var newSegmentData2 = {\n            segment: [vertex, segment[1]],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index + 1,\n        };\n        rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n        this.dragSegments_.push([newSegmentData2, 0]);\n        this.ignoreNextSingleClick_ = true;\n    };\n    /**\n     * Removes the vertex currently being pointed.\n     * @return {boolean} True when a vertex was removed.\n     * @api\n     */\n    Modify.prototype.removePoint = function () {\n        if (this.lastPointerEvent_ &&\n            this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n            var evt = this.lastPointerEvent_;\n            this.willModifyFeatures_(evt, this.dragSegments_);\n            var removed = this.removeVertex_();\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.featuresBeingModified_, evt));\n            this.featuresBeingModified_ = null;\n            return removed;\n        }\n        return false;\n    };\n    /**\n     * Removes a vertex from all matching features.\n     * @return {boolean} True when a vertex was removed.\n     * @private\n     */\n    Modify.prototype.removeVertex_ = function () {\n        var dragSegments = this.dragSegments_;\n        var segmentsByFeature = {};\n        var deleted = false;\n        var component, coordinates, dragSegment, geometry, i, index, left;\n        var newIndex, right, segmentData, uid;\n        for (i = dragSegments.length - 1; i >= 0; --i) {\n            dragSegment = dragSegments[i];\n            segmentData = dragSegment[0];\n            uid = getUid(segmentData.feature);\n            if (segmentData.depth) {\n                // separate feature components\n                uid += '-' + segmentData.depth.join('-');\n            }\n            if (!(uid in segmentsByFeature)) {\n                segmentsByFeature[uid] = {};\n            }\n            if (dragSegment[1] === 0) {\n                segmentsByFeature[uid].right = segmentData;\n                segmentsByFeature[uid].index = segmentData.index;\n            }\n            else if (dragSegment[1] == 1) {\n                segmentsByFeature[uid].left = segmentData;\n                segmentsByFeature[uid].index = segmentData.index + 1;\n            }\n        }\n        for (uid in segmentsByFeature) {\n            right = segmentsByFeature[uid].right;\n            left = segmentsByFeature[uid].left;\n            index = segmentsByFeature[uid].index;\n            newIndex = index - 1;\n            if (left !== undefined) {\n                segmentData = left;\n            }\n            else {\n                segmentData = right;\n            }\n            if (newIndex < 0) {\n                newIndex = 0;\n            }\n            geometry = segmentData.geometry;\n            coordinates = geometry.getCoordinates();\n            component = coordinates;\n            deleted = false;\n            switch (geometry.getType()) {\n                case GeometryType.MULTI_LINE_STRING:\n                    if (coordinates[segmentData.depth[0]].length > 2) {\n                        coordinates[segmentData.depth[0]].splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.LINE_STRING:\n                    if (coordinates.length > 2) {\n                        coordinates.splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    component = component[segmentData.depth[1]];\n                /* falls through */\n                case GeometryType.POLYGON:\n                    component = component[segmentData.depth[0]];\n                    if (component.length > 4) {\n                        if (index == component.length - 1) {\n                            index = 0;\n                        }\n                        component.splice(index, 1);\n                        deleted = true;\n                        if (index === 0) {\n                            // close the ring again\n                            component.pop();\n                            component.push(component[0]);\n                            newIndex = component.length - 1;\n                        }\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (deleted) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n                var segments = [];\n                if (left !== undefined) {\n                    this.rBush_.remove(left);\n                    segments.push(left.segment[0]);\n                }\n                if (right !== undefined) {\n                    this.rBush_.remove(right);\n                    segments.push(right.segment[1]);\n                }\n                if (left !== undefined && right !== undefined) {\n                    /** @type {SegmentData} */\n                    var newSegmentData = {\n                        depth: segmentData.depth,\n                        feature: segmentData.feature,\n                        geometry: segmentData.geometry,\n                        index: newIndex,\n                        segment: segments,\n                    };\n                    this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n                }\n                this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n                if (this.vertexFeature_) {\n                    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n                    this.vertexFeature_ = null;\n                }\n                dragSegments.length = 0;\n            }\n        }\n        return deleted;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {Array} coordinates Coordinates.\n     * @private\n     */\n    Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\n        this.changingFeature_ = true;\n        geometry.setCoordinates(coordinates);\n        this.changingFeature_ = false;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} index Index.\n     * @param {Array<number>|undefined} depth Depth.\n     * @param {number} delta Delta (1 or -1).\n     * @private\n     */\n    Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\n        this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\n            if (segmentDataMatch.geometry === geometry &&\n                (depth === undefined ||\n                    segmentDataMatch.depth === undefined ||\n                    equals(segmentDataMatch.depth, depth)) &&\n                segmentDataMatch.index > index) {\n                segmentDataMatch.index += delta;\n            }\n        });\n    };\n    return Modify;\n}(PointerInteraction));\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n    return a.index - b.index;\n}\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(pointCoordinates, segmentData, projection) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n                    .clone()\n                    .transform(userProjection, projection));\n            }\n            var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), fromUserCoordinate(pointCoordinates, projection));\n            var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n            return distanceToCircumference * distanceToCircumference;\n        }\n    }\n    var coordinate = fromUserCoordinate(pointCoordinates, projection);\n    tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n    tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n    return squaredDistanceToSegment(coordinate, tempSegment);\n}\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE &&\n        segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n                .clone()\n                .transform(userProjection, projection));\n        }\n        return toUserCoordinate(circleGeometry.getClosestPoint(fromUserCoordinate(pointCoordinates, projection)), projection);\n    }\n    var coordinate = fromUserCoordinate(pointCoordinates, projection);\n    tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n    tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n    return toUserCoordinate(closestOnSegment(coordinate, tempSegment), projection);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\nexport default Modify;\n//# sourceMappingURL=Modify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select',\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\nexport { SelectEvent };\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object.<number, import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nvar originalFeatureStyles = {};\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         */\n        _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n        /**\n         * @private\n         */\n        _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition\n            ? options.removeCondition\n            : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition\n            ? options.toggleCondition\n            : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @private\n         * @type {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n         */\n        _this.style_ =\n            options.style !== undefined ? options.style : getDefaultStyleFunction();\n        /**\n         * @private\n         * @type {import(\"../Collection.js\").default}\n         */\n        _this.features_ = options.features || new Collection();\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {import('../layer/Vector.js').default} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return /** @type {import('../layer/Vector.js').default} */ (this\n            .featureLayerAssociation_[getUid(feature)]);\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        if (currentMap && this.style_) {\n            this.features_.forEach(this.restorePreviousStyle_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n            if (this.style_) {\n                this.features_.forEach(this.applySelectedStyle_.bind(this));\n            }\n        }\n        else {\n            this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.applySelectedStyle_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.restorePreviousStyle_(feature);\n        }\n    };\n    /**\n     * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n     */\n    Select.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.applySelectedStyle_ = function (feature) {\n        var key = getUid(feature);\n        if (!(key in originalFeatureStyles)) {\n            originalFeatureStyles[key] = feature.getStyle();\n        }\n        feature.setStyle(this.style_);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.restorePreviousStyle_ = function (feature) {\n        var interactions = this.getMap().getInteractions().getArray();\n        for (var i = interactions.length - 1; i >= 0; --i) {\n            var interaction = interactions[i];\n            if (interaction !== this &&\n                interaction instanceof Select &&\n                interaction.getStyle() &&\n                interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n                feature.setStyle(interaction.getStyle());\n                return;\n            }\n        }\n        var key = getUid(feature);\n        feature.setStyle(originalFeatureStyles[key]);\n        delete originalFeatureStyles[key];\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n     * selected state of features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {Select}\n     */\n    Select.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var add = this.addCondition_(mapBrowserEvent);\n        var remove = this.removeCondition_(mapBrowserEvent);\n        var toggle = this.toggleCondition_(mapBrowserEvent);\n        var set = !add && !remove && !toggle;\n        var map = mapBrowserEvent.map;\n        var features = this.getFeatures();\n        var deselected = [];\n        var selected = [];\n        if (set) {\n            // Replace the currently selected feature(s) with the feature(s) at the\n            // pixel, or clear the selected feature(s) if there is no feature at\n            // the pixel.\n            clear(this.featureLayerAssociation_);\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var i = features.getLength() - 1; i >= 0; --i) {\n                var feature = features.item(i);\n                var index = selected.indexOf(feature);\n                if (index > -1) {\n                    // feature is already selected\n                    selected.splice(index, 1);\n                }\n                else {\n                    features.remove(feature);\n                    deselected.push(feature);\n                }\n            }\n            if (selected.length !== 0) {\n                features.extend(selected);\n            }\n        }\n        else {\n            // Modify the currently selected feature(s).\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    if ((add || toggle) && !includes(features.getArray(), feature)) {\n                        selected.push(feature);\n                        this.addFeatureLayerAssociation_(feature, layer);\n                    }\n                    else if ((remove || toggle) &&\n                        includes(features.getArray(), feature)) {\n                        deselected.push(feature);\n                        this.removeFeatureLayerAssociation_(feature);\n                    }\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var j = deselected.length - 1; j >= 0; --j) {\n                features.remove(deselected[j]);\n            }\n            features.extend(selected);\n        }\n        if (selected.length > 0 || deselected.length > 0) {\n            this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n        }\n        return true;\n    };\n    return Select;\n}(Interaction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { closestOnCircle, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, getUserProjection, toUserCoordinate, } from '../proj.js';\nimport { getUid } from '../util.js';\nimport { getValues } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n    if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n            .feature;\n    }\n    else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n        return /** @type {import(\"../Feature.js\").default} */ (\n        /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n    }\n}\nvar tempSegment = [];\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nvar Snap = /** @class */ (function (_super) {\n    __extends(Snap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Snap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.handleDownEvent) {\n            pointerOptions.handleDownEvent = TRUE;\n        }\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {import(\"../source/Vector.js\").default}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\n        /**\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featuresListenerKeys_ = [];\n        /**\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featureChangeListenerKeys_ = {};\n        /**\n         * Extents are preserved so indexed segment can be quickly removed\n         * when its feature geometry changes\n         * @type {Object<string, import(\"../extent.js\").Extent>}\n         * @private\n         */\n        _this.indexedFeaturesExtents_ = {};\n        /**\n         * If a feature geometry changes while a pointer drag|move event occurs, the\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\n         * event fired.\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.pendingFeatures_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Segment RTree for each layer\n         * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @const\n         * @private\n         * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_.bind(_this),\n            'LineString': _this.writeLineStringGeometry_.bind(_this),\n            'LinearRing': _this.writeLineStringGeometry_.bind(_this),\n            'Polygon': _this.writePolygonGeometry_.bind(_this),\n            'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),\n            'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),\n            'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this),\n            'Circle': _this.writeCircleGeometry_.bind(_this),\n        };\n        return _this;\n    }\n    /**\n     * Add a feature to the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {boolean=} opt_listen Whether to listen to the feature change or not\n     *     Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.addFeature = function (feature, opt_listen) {\n        var register = opt_listen !== undefined ? opt_listen : true;\n        var feature_uid = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (segmentWriter) {\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n                segmentWriter(feature, geometry);\n            }\n        }\n        if (register) {\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\n        this.removeFeature(feature);\n    };\n    /**\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    Snap.prototype.getFeatures_ = function () {\n        var features;\n        if (this.features_) {\n            features = this.features_;\n        }\n        else if (this.source_) {\n            features = this.source_.getFeatures();\n        }\n        return features;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Snap.prototype.handleEvent = function (evt) {\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n        if (result.snapped) {\n            evt.coordinate = result.vertex.slice(0, 2);\n            evt.pixel = result.vertexPixel;\n        }\n        return _super.prototype.handleEvent.call(this, evt);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.removeFeature(feature);\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureChange_ = function (evt) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n        if (this.handlingDownUpSequence) {\n            var uid = getUid(feature);\n            if (!(uid in this.pendingFeatures_)) {\n                this.pendingFeatures_[uid] = feature;\n            }\n        }\n        else {\n            this.updateFeature_(feature);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Snap.prototype.handleUpEvent = function (evt) {\n        var featuresToUpdate = getValues(this.pendingFeatures_);\n        if (featuresToUpdate.length) {\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\n            this.pendingFeatures_ = {};\n        }\n        return false;\n    };\n    /**\n     * Remove a feature from the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n     *     or not. Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n        var feature_uid = getUid(feature);\n        var extent = this.indexedFeaturesExtents_[feature_uid];\n        if (extent) {\n            var rBush = this.rBush_;\n            var nodesToRemove_1 = [];\n            rBush.forEachInExtent(extent, function (node) {\n                if (feature === node.feature) {\n                    nodesToRemove_1.push(node);\n                }\n            });\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n                rBush.remove(nodesToRemove_1[i]);\n            }\n        }\n        if (unregister) {\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n            delete this.featureChangeListenerKeys_[feature_uid];\n        }\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Snap.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var keys = this.featuresListenerKeys_;\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n        if (currentMap) {\n            keys.forEach(unlistenByKey);\n            keys.length = 0;\n            features.forEach(this.forEachFeatureRemove_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            if (this.features_) {\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n            }\n            else if (this.source_) {\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n            }\n            features.forEach(this.forEachFeatureAdd_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @return {Result} Snap result\n     */\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n        var lowerLeft = map.getCoordinateFromPixel([\n            pixel[0] - this.pixelTolerance_,\n            pixel[1] + this.pixelTolerance_,\n        ]);\n        var upperRight = map.getCoordinateFromPixel([\n            pixel[0] + this.pixelTolerance_,\n            pixel[1] - this.pixelTolerance_,\n        ]);\n        var box = boundingExtent([lowerLeft, upperRight]);\n        var segments = this.rBush_.getInExtent(box);\n        // If snapping on vertices only, don't consider circles\n        if (this.vertex_ && !this.edge_) {\n            segments = segments.filter(function (segment) {\n                return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\n            });\n        }\n        var snapped = false;\n        var vertex = null;\n        var vertexPixel = null;\n        if (segments.length === 0) {\n            return {\n                snapped: snapped,\n                vertex: vertex,\n                vertexPixel: vertexPixel,\n            };\n        }\n        var projection = map.getView().getProjection();\n        var projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n        var closestSegmentData;\n        var minSquaredDistance = Infinity;\n        for (var i = 0; i < segments.length; ++i) {\n            var segmentData = segments[i];\n            tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n            tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n            var delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n            if (delta < minSquaredDistance) {\n                closestSegmentData = segmentData;\n                minSquaredDistance = delta;\n            }\n        }\n        var closestSegment = closestSegmentData.segment;\n        if (this.vertex_ && !this.edge_) {\n            var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            var squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n            var squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n            var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            if (dist <= this.pixelTolerance_) {\n                snapped = true;\n                vertex =\n                    squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n        }\n        else if (this.edge_) {\n            var isCircle = closestSegmentData.feature.getGeometry().getType() ===\n                GeometryType.CIRCLE;\n            if (isCircle) {\n                var circleGeometry = closestSegmentData.feature.getGeometry();\n                var userProjection = getUserProjection();\n                if (userProjection) {\n                    circleGeometry = circleGeometry\n                        .clone()\n                        .transform(userProjection, projection);\n                }\n                vertex = toUserCoordinate(closestOnCircle(projectedCoordinate, \n                /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)), projection);\n            }\n            else {\n                tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n                tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n                vertex = toUserCoordinate(closestOnSegment(projectedCoordinate, tempSegment), projection);\n            }\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                snapped = true;\n                if (this.vertex_ && !isCircle) {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    if (dist <= this.pixelTolerance_) {\n                        vertex =\n                            squaredDist1 > squaredDist2\n                                ? closestSegment[1]\n                                : closestSegment[0];\n                        vertexPixel = map.getPixelFromCoordinate(vertex);\n                    }\n                }\n            }\n        }\n        if (snapped) {\n            vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n        }\n        return {\n            snapped: snapped,\n            vertex: vertex,\n            vertexPixel: vertexPixel,\n        };\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Snap.prototype.updateFeature_ = function (feature) {\n        this.removeFeature(feature, false);\n        this.addFeature(feature, false);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var projection = this.getMap().getView().getProjection();\n        var circleGeometry = geometry;\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n                .clone()\n                .transform(userProjection, projection));\n        }\n        var polygon = fromCircle(circleGeometry);\n        if (userProjection) {\n            polygon.transform(projection, userProjection);\n        }\n        var coordinates = polygon.getCoordinates()[0];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment,\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n            if (segmentWriter) {\n                segmentWriter(feature, geometries[i]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment,\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = {\n                feature: feature,\n                segment: [coordinates, coordinates],\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = {\n                        feature: feature,\n                        segment: segment,\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = {\n            feature: feature,\n            segment: [coordinates, coordinates],\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    return Snap;\n}(PointerInteraction));\nexport default Snap;\n//# sourceMappingURL=Snap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport { TRUE } from '../functions.js';\nimport { getChangeEventType } from '../Object.js';\nimport { includes } from '../array.js';\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n    /**\n     * Triggered upon feature translation start.\n     * @event TranslateEvent#translatestart\n     * @api\n     */\n    TRANSLATESTART: 'translatestart',\n    /**\n     * Triggered upon feature translation.\n     * @event TranslateEvent#translating\n     * @api\n     */\n    TRANSLATING: 'translating',\n    /**\n     * Triggered upon feature translation end.\n     * @event TranslateEvent#translateend\n     * @api\n     */\n    TRANSLATEEND: 'translateend',\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nvar TranslateEvent = /** @class */ (function (_super) {\n    __extends(TranslateEvent, _super);\n    /**\n     * @param {TranslateEventType} type Type.\n     * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     */\n    function TranslateEvent(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being translated.\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * The coordinate of the start position before translation started.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.startCoordinate = startCoordinate;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return TranslateEvent;\n}(Event));\nexport { TranslateEvent };\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /** @class */ (function (_super) {\n    __extends(Translate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Translate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * The last position we translated to.\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.lastCoordinate_ = null;\n        /**\n         * The start position before translation started.\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.startCoordinate_ = null;\n        /**\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features !== undefined ? options.features : null;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @type {import(\"../Feature.js\").default}\n         * @private\n         */\n        _this.lastFeature_ = null;\n        _this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), _this.handleActiveChanged_);\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Translate.prototype.handleDownEvent = function (event) {\n        this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n        if (!this.lastCoordinate_ && this.lastFeature_) {\n            this.startCoordinate_ = event.coordinate;\n            this.lastCoordinate_ = event.coordinate;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate, this.startCoordinate_, event));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Translate.prototype.handleUpEvent = function (event) {\n        if (this.lastCoordinate_) {\n            this.lastCoordinate_ = null;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate, this.startCoordinate_, event));\n            // cleanup\n            this.startCoordinate_ = null;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    Translate.prototype.handleDragEvent = function (event) {\n        if (this.lastCoordinate_) {\n            var newCoordinate = event.coordinate;\n            var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];\n            var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            features.forEach(function (feature) {\n                var geom = feature.getGeometry();\n                geom.translate(deltaX_1, deltaY_1);\n                feature.setGeometry(geom);\n            });\n            this.lastCoordinate_ = newCoordinate;\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate, this.startCoordinate_, event));\n        }\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    Translate.prototype.handleMoveEvent = function (event) {\n        var elem = event.map.getViewport();\n        // Change the cursor to grab/grabbing if hovering any of the features managed\n        // by the interaction\n        if (this.featuresAtPixel_(event.pixel, event.map)) {\n            elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n            elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n        }\n        else {\n            elem.classList.remove('ol-grab', 'ol-grabbing');\n        }\n    };\n    /**\n     * Tests to see if the given coordinates intersects any of our selected\n     * features.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n     * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n     * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n     * coordinates.\n     * @private\n     */\n    Translate.prototype.featuresAtPixel_ = function (pixel, map) {\n        return map.forEachFeatureAtPixel(pixel, function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                if (!this.features_ || includes(this.features_.getArray(), feature)) {\n                    return feature;\n                }\n            }\n        }.bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_,\n        });\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Translate.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        _super.prototype.setMap.call(this, map);\n        this.updateState_(oldMap);\n    };\n    /**\n     * @private\n     */\n    Translate.prototype.handleActiveChanged_ = function () {\n        this.updateState_(null);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n     * @private\n     */\n    Translate.prototype.updateState_ = function (oldMap) {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            map = map || oldMap;\n            if (map) {\n                var elem = map.getViewport();\n                elem.classList.remove('ol-grab', 'ol-grabbing');\n            }\n        }\n    };\n    return Translate;\n}(PointerInteraction));\nexport default Translate;\n//# sourceMappingURL=Translate.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var tileRange = tileGrid.getFullTileRange(z);\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getUid } from './util.js';\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedResolution\n * @property {number} renderedRevision\n * @property {number} renderedZ\n * @property {number} renderedTileResolution\n * @property {number} renderedTileZ\n */\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nvar canvasPool = [];\nvar VectorRenderTile = /** @class */ (function (_super) {\n    __extends(VectorRenderTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n     * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n     * to get source tiles for this tile.\n     */\n    function VectorRenderTile(tileCoord, state, urlTileCoord, getSourceTiles) {\n        var _this = _super.call(this, tileCoord, state, { transition: 0 }) || this;\n        /**\n         * @private\n         * @type {!Object<string, CanvasRenderingContext2D>}\n         */\n        _this.context_ = {};\n        /**\n         * Executor groups by layer uid. Entries are read/written by the renderer.\n         * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n         */\n        _this.executorGroups = {};\n        /**\n         * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n         * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n         */\n        _this.declutterExecutorGroups = {};\n        /**\n         * Number of loading source tiles. Read/written by the source.\n         * @type {number}\n         */\n        _this.loadingSourceTiles = 0;\n        /**\n         * Tile keys of error source tiles. Read/written by the source.\n         * @type {Object<string, boolean>}\n         */\n        _this.errorSourceTileKeys = {};\n        /**\n         * @type {Object<number, ImageData>}\n         */\n        _this.hitDetectionImageData = {};\n        /**\n         * @private\n         * @type {!Object<string, ReplayState>}\n         */\n        _this.replayState_ = {};\n        /**\n         * @type {Array<import(\"./VectorTile.js\").default>}\n         */\n        _this.sourceTiles = null;\n        /**\n         * @type {number}\n         */\n        _this.wantedResolution;\n        /**\n         * @type {!function():Array<import(\"./VectorTile.js\").default>}\n         */\n        _this.getSourceTiles = getSourceTiles.bind(undefined, _this);\n        /**\n         * z of the source tiles of the last getSourceTiles call.\n         * @type {number}\n         */\n        _this.sourceZ = -1;\n        /**\n         * True when all tiles for this tile's nominal resolution are available.\n         * @type {boolean}\n         */\n        _this.hifi = false;\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord = urlTileCoord;\n        return _this;\n    }\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {CanvasRenderingContext2D} The rendering context.\n     */\n    VectorRenderTile.prototype.getContext = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.context_)) {\n            this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n        }\n        return this.context_[key];\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {boolean} Tile has a rendering context for the given layer.\n     */\n    VectorRenderTile.prototype.hasContext = function (layer) {\n        return getUid(layer) in this.context_;\n    };\n    /**\n     * Get the Canvas for this tile.\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    VectorRenderTile.prototype.getImage = function (layer) {\n        return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {ReplayState} The replay state.\n     */\n    VectorRenderTile.prototype.getReplayState = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.replayState_)) {\n            this.replayState_[key] = {\n                dirty: false,\n                renderedRenderOrder: null,\n                renderedResolution: NaN,\n                renderedRevision: -1,\n                renderedTileResolution: NaN,\n                renderedTileRevision: -1,\n                renderedZ: -1,\n                renderedTileZ: -1,\n            };\n        }\n        return this.replayState_[key];\n    };\n    /**\n     * Load the tile.\n     */\n    VectorRenderTile.prototype.load = function () {\n        this.getSourceTiles();\n    };\n    /**\n     * Remove from the cache due to expiry\n     */\n    VectorRenderTile.prototype.release = function () {\n        for (var key in this.context_) {\n            canvasPool.push(this.context_[key].canvas);\n            delete this.context_[key];\n        }\n        _super.prototype.release.call(this);\n    };\n    return VectorRenderTile;\n}(Tile));\nexport default VectorRenderTile;\n//# sourceMappingURL=VectorRenderTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Data source url.\n     * @param {import(\"./format/Feature.js\").default} format Feature format.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * Extent of this tile; set by the source.\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = null;\n        /**\n         * @private\n         * @type {import(\"./format/Feature.js\").default}\n         */\n        _this.format_ = format;\n        /**\n         * @private\n         * @type {Array<import(\"./Feature.js\").default>}\n         */\n        _this.features_ = null;\n        /**\n         * @private\n         * @type {import(\"./featureloader.js\").FeatureLoader}\n         */\n        _this.loader_;\n        /**\n         * Feature projection of this tile; set by the source.\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection = null;\n        /**\n         * Resolution of this tile; set by the source.\n         * @type {number}\n         */\n        _this.resolution;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = src;\n        _this.key = src;\n        return _this;\n    }\n    /**\n     * Get the feature format assigned for reading this tile's features.\n     * @return {import(\"./format/Feature.js\").default} Feature format.\n     * @api\n     */\n    VectorTile.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Get the features for this tile. Geometries will be in the view projection.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    VectorTile.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    VectorTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.setState(TileState.LOADING);\n            this.tileLoadFunction_(this, this.url_);\n            if (this.loader_) {\n                this.loader_(this.extent, this.resolution, this.projection);\n            }\n        }\n    };\n    /**\n     * Handler for successful tile load.\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n     */\n    VectorTile.prototype.onLoad = function (features, dataProjection) {\n        this.setFeatures(features);\n    };\n    /**\n     * Handler for tile load errors.\n     */\n    VectorTile.prototype.onError = function () {\n        this.setState(TileState.ERROR);\n    };\n    /**\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n     * Sets the features for the tile.\n     * @param {Array<import(\"./Feature.js\").default>} features Features.\n     * @api\n     */\n    VectorTile.prototype.setFeatures = function (features) {\n        this.features_ = features;\n        this.setState(TileState.LOADED);\n    };\n    /**\n     * Set the feature loader for reading this tile's features.\n     * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n     * @api\n     */\n    VectorTile.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    return VectorTile;\n}(Tile));\nexport default VectorTile;\n//# sourceMappingURL=VectorTile.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('ol/control/Control'), require('ol/Observable'), require('ol/layer/Group')) :\n\ttypeof define === 'function' && define.amd ? define(['ol/control/Control', 'ol/Observable', 'ol/layer/Group'], factory) :\n\t(global.LayerSwitcher = factory(global.ol.control.Control,global.ol.Observable,global.ol.layer.Group));\n}(this, (function (Control,ol_Observable,LayerGroup) { 'use strict';\n\nControl = 'default' in Control ? Control['default'] : Control;\nLayerGroup = 'default' in LayerGroup ? LayerGroup['default'] : LayerGroup;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @protected\n */\nvar CSS_PREFIX = 'layer-switcher-';\n/**\n * OpenLayers LayerSwitcher Control, displays a list of layers and groups\n * associated with a map which have a `title` property.\n *\n * To be shown in the LayerSwitcher panel layers must have a `title` property;\n * base map layers should have a `type` property set to `base`. Group layers\n * (`LayerGroup`) can be used to visually group layers together; a group\n * with a `fold` property set to either `'open'` or `'close'` will be displayed\n * with a toggle.\n *\n * See [BaseLayerOptions](#baselayeroptions) for a full list of LayerSwitcher\n * properties for layers (`TileLayer`, `ImageLayer`, `VectorTile` etc.) and\n * [GroupLayerOptions](#grouplayeroptions) for group layer (`LayerGroup`)\n * LayerSwitcher properties.\n *\n * Layer and group properties can either be set by adding extra properties\n * to their options when they are created or via their set method.\n *\n * Specify a `title` for a Layer by adding a `title` property to it's options object:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   // Specify a title property which will be displayed by the layer switcher\n *   title: 'OpenStreetMap',\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * ```\n *\n * Alternatively the properties can be set via the `set` method after a layer has been created:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * // Specify a title property which will be displayed by the layer switcher\n * lyr.set('title', 'OpenStreetMap');\n * ```\n *\n * To create a LayerSwitcher and add it to a map, create a new instance then pass it to the map's [`addControl` method](https://openlayers.org/en/latest/apidoc/module-ol_PluggableMap-PluggableMap.html#addControl).\n * ```javascript\n * var layerSwitcher = new LayerSwitcher({\n *   reverse: true,\n *   groupSelectStyle: 'group'\n * });\n * map.addControl(layerSwitcher);\n * ```\n *\n * @constructor\n * @extends {ol/control/Control~Control}\n * @param opt_options LayerSwitcher options, see  [LayerSwitcher Options](#options) and [RenderOptions](#renderoptions) which LayerSwitcher `Options` extends for more details.\n */\n\nvar LayerSwitcher = function (_Control) {\n    inherits(LayerSwitcher, _Control);\n\n    function LayerSwitcher(opt_options) {\n        classCallCheck(this, LayerSwitcher);\n\n        var options = Object.assign({}, opt_options);\n        // TODO Next: Rename to showButtonTitle\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Legend';\n        // TODO Next: Rename to hideButtonTitle\n        var collapseTipLabel = options.collapseTipLabel ? options.collapseTipLabel : 'Collapse legend';\n        var element = document.createElement('div');\n\n        var _this = possibleConstructorReturn(this, (LayerSwitcher.__proto__ || Object.getPrototypeOf(LayerSwitcher)).call(this, { element: element, target: options.target }));\n\n        _this.activationMode = options.activationMode || 'mouseover';\n        _this.startActive = options.startActive === true;\n        // TODO Next: Rename to showButtonContent\n        var label = options.label !== undefined ? options.label : '';\n        // TODO Next: Rename to hideButtonContent\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\xBB';\n        _this.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n        _this.reverse = options.reverse !== false;\n        _this.mapListeners = [];\n        _this.hiddenClassName = 'ol-unselectable ol-control layer-switcher';\n        if (LayerSwitcher.isTouchDevice_()) {\n            _this.hiddenClassName += ' touch';\n        }\n        _this.shownClassName = 'shown';\n        element.className = _this.hiddenClassName;\n        var button = document.createElement('button');\n        button.setAttribute('title', tipLabel);\n        button.setAttribute('aria-label', tipLabel);\n        element.appendChild(button);\n        _this.panel = document.createElement('div');\n        _this.panel.className = 'panel';\n        element.appendChild(_this.panel);\n        LayerSwitcher.enableTouchScroll_(_this.panel);\n        button.textContent = label;\n        element.classList.add(CSS_PREFIX + 'group-select-style-' + _this.groupSelectStyle);\n        element.classList.add(CSS_PREFIX + 'activation-mode-' + _this.activationMode);\n        if (_this.activationMode === 'click') {\n            // TODO Next: Remove in favour of layer-switcher-activation-mode-click\n            element.classList.add('activationModeClick');\n            if (_this.startActive) {\n                button.textContent = collapseLabel;\n                button.setAttribute('title', collapseTipLabel);\n                button.setAttribute('aria-label', collapseTipLabel);\n            }\n            button.onclick = function (e) {\n                var evt = e || window.event;\n                if (_this.element.classList.contains(_this.shownClassName)) {\n                    _this.hidePanel();\n                    button.textContent = label;\n                    button.setAttribute('title', tipLabel);\n                    button.setAttribute('aria-label', tipLabel);\n                } else {\n                    _this.showPanel();\n                    button.textContent = collapseLabel;\n                    button.setAttribute('title', collapseTipLabel);\n                    button.setAttribute('aria-label', collapseTipLabel);\n                }\n                evt.preventDefault();\n            };\n        } else {\n            button.onmouseover = function () {\n                _this.showPanel();\n            };\n            button.onclick = function (e) {\n                var evt = e || window.event;\n                _this.showPanel();\n                evt.preventDefault();\n            };\n            _this.panel.onmouseout = function (evt) {\n                if (!_this.panel.contains(evt.relatedTarget)) {\n                    _this.hidePanel();\n                }\n            };\n        }\n        return _this;\n    }\n    /**\n     * Set the map instance the control is associated with.\n     * @param map The map instance.\n     */\n\n\n    createClass(LayerSwitcher, [{\n        key: 'setMap',\n        value: function setMap(map) {\n            var _this2 = this;\n\n            // Clean up listeners associated with the previous map\n            for (var i = 0; i < this.mapListeners.length; i++) {\n                ol_Observable.unByKey(this.mapListeners[i]);\n            }\n            this.mapListeners.length = 0;\n            // Wire up listeners etc. and store reference to new map\n            get(LayerSwitcher.prototype.__proto__ || Object.getPrototypeOf(LayerSwitcher.prototype), 'setMap', this).call(this, map);\n            if (map) {\n                if (this.startActive) {\n                    this.showPanel();\n                } else {\n                    this.renderPanel();\n                }\n                if (this.activationMode !== 'click') {\n                    this.mapListeners.push(map.on('pointerdown', function () {\n                        _this2.hidePanel();\n                    }));\n                }\n            }\n        }\n        /**\n         * Show the layer panel.\n         */\n\n    }, {\n        key: 'showPanel',\n        value: function showPanel() {\n            if (!this.element.classList.contains(this.shownClassName)) {\n                this.element.classList.add(this.shownClassName);\n                this.renderPanel();\n            }\n        }\n        /**\n         * Hide the layer panel.\n         */\n\n    }, {\n        key: 'hidePanel',\n        value: function hidePanel() {\n            if (this.element.classList.contains(this.shownClassName)) {\n                this.element.classList.remove(this.shownClassName);\n            }\n        }\n        /**\n         * Re-draw the layer panel to represent the current state of the layers.\n         */\n\n    }, {\n        key: 'renderPanel',\n        value: function renderPanel() {\n            this.dispatchEvent('render');\n            LayerSwitcher.renderPanel(this.getMap(), this.panel, {\n                groupSelectStyle: this.groupSelectStyle,\n                reverse: this.reverse\n            });\n            this.dispatchEvent('rendercomplete');\n        }\n        /**\n         * **_[static]_** - Re-draw the layer panel to represent the current state of the layers.\n         * @param map The OpenLayers Map instance to render layers for\n         * @param panel The DOM Element into which the layer tree will be rendered\n         * @param options Options for panel, group, and layers\n         */\n\n    }], [{\n        key: 'renderPanel',\n        value: function renderPanel(map, panel, options) {\n            // Create the event.\n            var render_event = new Event('render');\n            // Dispatch the event.\n            panel.dispatchEvent(render_event);\n            options = options || {};\n            options.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n            LayerSwitcher.ensureTopVisibleBaseLayerShown(map, options.groupSelectStyle);\n            while (panel.firstChild) {\n                panel.removeChild(panel.firstChild);\n            }\n            // Reset indeterminate state for all layers and groups before\n            // applying based on groupSelectStyle\n            LayerSwitcher.forEachRecursive(map, function (l, _idx, _a) {\n                l.set('indeterminate', false);\n            });\n            if (options.groupSelectStyle === 'children' || options.groupSelectStyle === 'none') {\n                // Set visibile and indeterminate state of groups based on\n                // their children's visibility\n                LayerSwitcher.setGroupVisibility(map);\n            } else if (options.groupSelectStyle === 'group') {\n                // Set child indetermiate state based on their parent's visibility\n                LayerSwitcher.setChildVisibility(map);\n            }\n            var ul = document.createElement('ul');\n            panel.appendChild(ul);\n            // passing two map arguments instead of lyr as we're passing the map as the root of the layers tree\n            LayerSwitcher.renderLayers_(map, map, ul, options, function render(_changedLyr) {\n                LayerSwitcher.renderPanel(map, panel, options);\n            });\n            // Create the event.\n            var rendercomplete_event = new Event('rendercomplete');\n            // Dispatch the event.\n            panel.dispatchEvent(rendercomplete_event);\n        }\n        /**\n         * **_[static]_** - Determine if a given layer group contains base layers\n         * @param grp Group to test\n         */\n\n    }, {\n        key: 'isBaseGroup',\n        value: function isBaseGroup(grp) {\n            if (grp instanceof LayerGroup) {\n                var lyrs = grp.getLayers().getArray();\n                return lyrs.length && lyrs[0].get('type') === 'base';\n            } else {\n                return false;\n            }\n        }\n    }, {\n        key: 'setGroupVisibility',\n        value: function setGroupVisibility(map) {\n            // Get a list of groups, with the deepest first\n            var groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n                return l instanceof LayerGroup && !l.get('combine') && !LayerSwitcher.isBaseGroup(l);\n            }).reverse();\n            // console.log(groups.map(g => g.get('title')));\n            groups.forEach(function (grp) {\n                // TODO Can we use getLayersArray, is it public in the esm build?\n                var descendantVisibility = grp.getLayersArray().map(function (l) {\n                    var state = l.getVisible();\n                    // console.log('>', l.get('title'), state);\n                    return state;\n                });\n                // console.log(descendantVisibility);\n                if (descendantVisibility.every(function (v) {\n                    return v === true;\n                })) {\n                    grp.setVisible(true);\n                    grp.set('indeterminate', false);\n                } else if (descendantVisibility.every(function (v) {\n                    return v === false;\n                })) {\n                    grp.setVisible(false);\n                    grp.set('indeterminate', false);\n                } else {\n                    grp.setVisible(true);\n                    grp.set('indeterminate', true);\n                }\n            });\n        }\n    }, {\n        key: 'setChildVisibility',\n        value: function setChildVisibility(map) {\n            // console.log('setChildVisibility');\n            var groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n                return l instanceof LayerGroup && !l.get('combine') && !LayerSwitcher.isBaseGroup(l);\n            });\n            groups.forEach(function (grp) {\n                var group = grp;\n                // console.log(group.get('title'));\n                var groupVisible = group.getVisible();\n                var groupIndeterminate = group.get('indeterminate');\n                group.getLayers().getArray().forEach(function (l) {\n                    l.set('indeterminate', false);\n                    if ((!groupVisible || groupIndeterminate) && l.getVisible()) {\n                        l.set('indeterminate', true);\n                    }\n                });\n            });\n        }\n        /**\n         * Ensure only the top-most base layer is visible if more than one is visible.\n         * @param map The map instance.\n         * @param groupSelectStyle\n         * @protected\n         */\n\n    }, {\n        key: 'ensureTopVisibleBaseLayerShown',\n        value: function ensureTopVisibleBaseLayerShown(map, groupSelectStyle) {\n            var lastVisibleBaseLyr = void 0;\n            LayerSwitcher.forEachRecursive(map, function (lyr, _idx, _arr) {\n                if (lyr.get('type') === 'base' && lyr.getVisible()) {\n                    lastVisibleBaseLyr = lyr;\n                }\n            });\n            if (lastVisibleBaseLyr) LayerSwitcher.setVisible_(map, lastVisibleBaseLyr, true, groupSelectStyle);\n        }\n        /**\n         * **_[static]_** - Get an Array of all layers and groups displayed by the LayerSwitcher (has a `'title'` property)\n         * contained by the specified map or layer group; optionally filtering via `filterFn`\n         * @param grp The map or layer group for which layers are found.\n         * @param filterFn Optional function used to filter the returned layers\n         */\n\n    }, {\n        key: 'getGroupsAndLayers',\n        value: function getGroupsAndLayers(grp, filterFn) {\n            var layers = [];\n            filterFn = filterFn || function (_lyr, _idx, _arr) {\n                return true;\n            };\n            LayerSwitcher.forEachRecursive(grp, function (lyr, idx, arr) {\n                if (lyr.get('title')) {\n                    if (filterFn(lyr, idx, arr)) {\n                        layers.push(lyr);\n                    }\n                }\n            });\n            return layers;\n        }\n        /**\n         * Toggle the visible state of a layer.\n         * Takes care of hiding other layers in the same exclusive group if the layer\n         * is toggle to visible.\n         * @protected\n         * @param map The map instance.\n         * @param lyr layer whose visibility will be toggled.\n         * @param visible Set whether the layer is shown\n         * @param groupSelectStyle\n         * @protected\n         */\n\n    }, {\n        key: 'setVisible_',\n        value: function setVisible_(map, lyr, visible, groupSelectStyle) {\n            // console.log(lyr.get('title'), visible, groupSelectStyle);\n            lyr.setVisible(visible);\n            if (visible && lyr.get('type') === 'base') {\n                // Hide all other base layers regardless of grouping\n                LayerSwitcher.forEachRecursive(map, function (l, _idx, _arr) {\n                    if (l != lyr && l.get('type') === 'base') {\n                        l.setVisible(false);\n                    }\n                });\n            }\n            if (lyr instanceof LayerGroup && !lyr.get('combine') && groupSelectStyle === 'children') {\n                lyr.getLayers().forEach(function (l) {\n                    LayerSwitcher.setVisible_(map, l, lyr.getVisible(), groupSelectStyle);\n                });\n            }\n        }\n        /**\n         * Render all layers that are children of a group.\n         * @param map The map instance.\n         * @param lyr Layer to be rendered (should have a title property).\n         * @param idx Position in parent group list.\n         * @param options Options for groups and layers\n         * @protected\n         */\n\n    }, {\n        key: 'renderLayer_',\n        value: function renderLayer_(map, lyr, idx, options, render) {\n            var li = document.createElement('li');\n            var lyrTitle = lyr.get('title');\n            var checkboxId = LayerSwitcher.uuid();\n            var label = document.createElement('label');\n            if (lyr instanceof LayerGroup && !lyr.get('combine')) {\n                var isBaseGroup = LayerSwitcher.isBaseGroup(lyr);\n                li.classList.add('group');\n                if (isBaseGroup) {\n                    li.classList.add(CSS_PREFIX + 'base-group');\n                }\n                // Group folding\n                if (lyr.get('fold')) {\n                    li.classList.add(CSS_PREFIX + 'fold');\n                    li.classList.add(CSS_PREFIX + lyr.get('fold'));\n                    var btn = document.createElement('button');\n                    btn.onclick = function (e) {\n                        var evt = e || window.event;\n                        LayerSwitcher.toggleFold_(lyr, li);\n                        evt.preventDefault();\n                    };\n                    li.appendChild(btn);\n                }\n                if (!isBaseGroup && options.groupSelectStyle != 'none') {\n                    var input = document.createElement('input');\n                    input.type = 'checkbox';\n                    input.id = checkboxId;\n                    input.checked = lyr.getVisible();\n                    input.indeterminate = lyr.get('indeterminate');\n                    input.onchange = function (e) {\n                        var target = e.target;\n                        LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                        render(lyr);\n                    };\n                    li.appendChild(input);\n                    label.htmlFor = checkboxId;\n                }\n                label.innerHTML = lyrTitle;\n                li.appendChild(label);\n                var ul = document.createElement('ul');\n                li.appendChild(ul);\n                LayerSwitcher.renderLayers_(map, lyr, ul, options, render);\n            } else {\n                li.className = 'layer';\n                var _input = document.createElement('input');\n                if (lyr.get('type') === 'base') {\n                    _input.type = 'radio';\n                    _input.name = 'base';\n                } else {\n                    _input.type = 'checkbox';\n                }\n                _input.id = checkboxId;\n                _input.checked = lyr.get('visible');\n                _input.indeterminate = lyr.get('indeterminate');\n                _input.onchange = function (e) {\n                    var target = e.target;\n                    LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                    render(lyr);\n                };\n                li.appendChild(_input);\n                label.htmlFor = checkboxId;\n                label.innerHTML = lyrTitle;\n                var rsl = map.getView().getResolution();\n                if (rsl > lyr.getMaxResolution() || rsl < lyr.getMinResolution()) {\n                    label.className += ' disabled';\n                }\n                li.appendChild(label);\n            }\n            return li;\n        }\n        /**\n         * Render all layers that are children of a group.\n         * @param map The map instance.\n         * @param lyr Group layer whose children will be rendered.\n         * @param elm DOM element that children will be appended to.\n         * @param options Options for groups and layers\n         * @protected\n         */\n\n    }, {\n        key: 'renderLayers_',\n        value: function renderLayers_(map, lyr, elm, options, render) {\n            var lyrs = lyr.getLayers().getArray().slice();\n            if (options.reverse) lyrs = lyrs.reverse();\n            for (var i = 0, l; i < lyrs.length; i++) {\n                l = lyrs[i];\n                if (l.get('title')) {\n                    elm.appendChild(LayerSwitcher.renderLayer_(map, l, i, options, render));\n                }\n            }\n        }\n        /**\n         * **_[static]_** - Call the supplied function for each layer in the passed layer group\n         * recursing nested groups.\n         * @param lyr The layer group to start iterating from.\n         * @param fn Callback which will be called for each layer\n         * found under `lyr`.\n         */\n\n    }, {\n        key: 'forEachRecursive',\n        value: function forEachRecursive(lyr, fn) {\n            lyr.getLayers().forEach(function (lyr, idx, a) {\n                fn(lyr, idx, a);\n                if (lyr instanceof LayerGroup) {\n                    LayerSwitcher.forEachRecursive(lyr, fn);\n                }\n            });\n        }\n        /**\n         * **_[static]_** - Generate a UUID\n         * Adapted from http://stackoverflow.com/a/2117523/526860\n         * @returns {String} UUID\n         */\n\n    }, {\n        key: 'uuid',\n        value: function uuid() {\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                var r = Math.random() * 16 | 0,\n                    v = c == 'x' ? r : r & 0x3 | 0x8;\n                return v.toString(16);\n            });\n        }\n        /**\n         * Apply workaround to enable scrolling of overflowing content within an\n         * element. Adapted from https://gist.github.com/chrismbarr/4107472\n         * @param elm Element on which to enable touch scrolling\n         * @protected\n         */\n\n    }, {\n        key: 'enableTouchScroll_',\n        value: function enableTouchScroll_(elm) {\n            if (LayerSwitcher.isTouchDevice_()) {\n                var scrollStartPos = 0;\n                elm.addEventListener('touchstart', function (event) {\n                    scrollStartPos = this.scrollTop + event.touches[0].pageY;\n                }, false);\n                elm.addEventListener('touchmove', function (event) {\n                    this.scrollTop = scrollStartPos - event.touches[0].pageY;\n                }, false);\n            }\n        }\n        /**\n         * Determine if the current browser supports touch events. Adapted from\n         * https://gist.github.com/chrismbarr/4107472\n         * @returns {Boolean} True if client can have 'TouchEvent' event\n         * @protected\n         */\n\n    }, {\n        key: 'isTouchDevice_',\n        value: function isTouchDevice_() {\n            try {\n                document.createEvent('TouchEvent');\n                return true;\n            } catch (e) {\n                return false;\n            }\n        }\n        /**\n         * Fold/unfold layer group\n         * @param lyr Layer group to fold/unfold\n         * @param li List item containing layer group\n         * @protected\n         */\n\n    }, {\n        key: 'toggleFold_',\n        value: function toggleFold_(lyr, li) {\n            li.classList.remove(CSS_PREFIX + lyr.get('fold'));\n            lyr.set('fold', lyr.get('fold') === 'open' ? 'close' : 'open');\n            li.classList.add(CSS_PREFIX + lyr.get('fold'));\n        }\n        /**\n         * If a valid groupSelectStyle value is not provided then return the default\n         * @param groupSelectStyle The string to check for validity\n         * @returns The value groupSelectStyle, if valid, the default otherwise\n         * @protected\n         */\n\n    }, {\n        key: 'getGroupSelectStyle',\n        value: function getGroupSelectStyle(groupSelectStyle) {\n            return ['none', 'children', 'group'].indexOf(groupSelectStyle) >= 0 ? groupSelectStyle : 'children';\n        }\n    }]);\n    return LayerSwitcher;\n}(Control);\nif (window['ol'] && window['ol']['control']) {\n    window['ol']['control']['LayerSwitcher'] = LayerSwitcher;\n}\n\nreturn LayerSwitcher;\n\n})));\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport { abstract } from '../util.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { closestSquaredDistanceXY, createOrUpdateEmpty, extend, getCenter, } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        geometryCollection.applyProperties(this);\n        return geometryCollection;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {\n        /** @type {Array<Geometry>} */\n        var geometriesArray = [];\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].getType() === this.getType()) {\n                geometriesArray = geometriesArray.concat(\n                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n            }\n            else {\n                geometriesArray.push(geometries[i]);\n            }\n        }\n        return geometriesArray;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {GeometryCollection} Simplified GeometryCollection.\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * Clean up.\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assert } from '../asserts.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection(options.dataProjection ? options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null,\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ &&\n            'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<Feature>} Features.\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @param {GeoJSONGeometry} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(object, opt_options);\n    };\n    /**\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else if (crs['type'] === 'EPSG') {\n                projection = getProjection('EPSG:' + crs['properties']['code']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null,\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        if (!feature.hasProperties()) {\n            return object;\n        }\n        var properties = feature.getProperties();\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n            delete properties[feature.getGeometryName()];\n        }\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects,\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(\n            /** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(\n            /** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(\n            /** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(\n            /** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(\n            /** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(\n            /** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(\n            /** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(\n            /** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(\n            /** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(\n            /** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(\n            /** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(\n            /** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: [],\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries,\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = [];\n                object[property] = array;\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName].call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\nvar xmlSerializer_ = undefined;\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n    xmlSerializer_ = xmlSerializer;\n}\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n    if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n        xmlSerializer_ = new XMLSerializer();\n    }\n    return xmlSerializer_;\n}\nvar document_ = undefined;\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n    document_ = document;\n}\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n    if (document_ === undefined && typeof document !== 'undefined') {\n        document_ = document.implementation.createDocument('', '', null);\n    }\n    return document_;\n}\n//# sourceMappingURL=xml.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport { getXMLSerializer, isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /** @class */ (function (_super) {\n    __extends(XMLFeature, _super);\n    function XMLFeature() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {XMLSerializer}\n         * @private\n         */\n        _this.xmlSerializer_ = getXMLSerializer();\n        return _this;\n    }\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    XMLFeature.prototype.getType = function () {\n        return FormatType.XML;\n    };\n    /**\n     * Read a single feature.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeatureFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n        var features = this.readFeaturesFromDocument(doc, opt_options);\n        if (features.length > 0) {\n            return features[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read all features from a feature collection.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\n        if (!source) {\n            return [];\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeaturesFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeaturesFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeaturesFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(features, this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readGeometryFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readGeometryFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readGeometryFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    XMLFeature.prototype.readProjection = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readProjectionFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n        return this.dataProjection;\n    };\n    /**\n     * @param {Element} node Node.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\n        return this.dataProjection;\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     */\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n        var node = this.writeFeatureNode(feature, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @protected\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     * @api\n     */\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n        var node = this.writeFeaturesNode(features, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     */\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        var node = this.writeGeometryNode(geometry, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n        return null; // not implemented\n    };\n    return XMLFeature;\n}(FeatureFormat));\nexport default XMLFeature;\n//# sourceMappingURL=XMLFeature.js.map","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, getDocument } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, bool ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(getDocument().createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() +\n        '-' +\n        padNumber(date.getUTCMonth() + 1, 2) +\n        '-' +\n        padNumber(date.getUTCDate(), 2) +\n        'T' +\n        padNumber(date.getUTCHours(), 2) +\n        ':' +\n        padNumber(date.getUTCMinutes(), 2) +\n        ':' +\n        padNumber(date.getUTCSeconds(), 2) +\n        'Z';\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(getDocument().createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, parse, parseNode, pushParseAndPop, pushSerializeAndPop, } from '../xml.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { extend, includes } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport { readBoolean, readDecimal, readString, writeBooleanTextNode, writeCDATASection, writeDecimalTextNode, writeStringTextNode, } from './xsd.js';\nimport { toRadians } from '../math.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {import(\"../style/IconAnchorUnits\").default} xunits\n * @property {number} y\n * @property {import(\"../style/IconAnchorUnits\").default} yunits\n * @property {import(\"../style/IconOrigin.js\").default} origin\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2',\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS,\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser,\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR,\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC,\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1,\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2,\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8,\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0,\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @type {HTMLTextAreaElement}\n */\nvar TEXTAREA;\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n    return href;\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle\n            ? options.defaultStyle\n            : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ =\n            options.extractStyles !== undefined ? options.extractStyles : true;\n        /**\n         * @type {boolean}\n         */\n        _this.writeStyles_ =\n            options.writeStyles !== undefined ? options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ =\n            options.showPointNames !== undefined ? options.showPointNames : true;\n        /**\n         * @type {null|string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        /**\n         * @type {IconUrlFunction}\n         */\n        _this.iconUrlFunction_ = options.iconUrlFunction\n            ? options.iconUrlFunction\n            : defaultIconUrlFunction;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this),\n        });\n        /** @type {Array<Feature>} */\n        // @ts-ignore\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack, this);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle.call(this, node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [\n            this.getReadOptions(node, opt_options),\n        ]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @protected\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n            node: kml,\n        };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    var imageStyle = foundStyle.getImage();\n    if (imageStyle) {\n        var imageSize = imageStyle.getImageSize();\n        if (imageSize === null) {\n            imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        if (imageSize.length == 2) {\n            var imageScale = imageStyle.getScaleArray();\n            // Offset the label to be centered to the right of the icon,\n            // if there is one.\n            textOffset[0] = (imageScale[0] * imageSize[0]) / 2;\n            textOffset[1] = (-imageScale[1] * imageSize[1]) / 2;\n            textAlign = 'left';\n        }\n    }\n    var textStyle = foundStyle.getText();\n    if (textStyle) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        textStyle = textStyle.clone();\n        textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        image: imageStyle,\n        text: textStyle,\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        var name = '';\n        var multiGeometryPoints = [];\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var type = geometry.getType();\n                if (type === GeometryType.GEOMETRY_COLLECTION) {\n                    multiGeometryPoints = geometry\n                        .getGeometriesArrayRecursive()\n                        .filter(function (geometry) {\n                        var type = geometry.getType();\n                        return (type === GeometryType.POINT ||\n                            type === GeometryType.MULTI_POINT);\n                    });\n                    drawName = multiGeometryPoints.length > 0;\n                }\n                else {\n                    drawName =\n                        type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n                }\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n            // convert any html character codes\n            if (drawName && name.search(/&[^&]+;/) > -1) {\n                if (!TEXTAREA) {\n                    TEXTAREA = document.createElement('textarea');\n                }\n                TEXTAREA.innerHTML = name;\n                name = TEXTAREA.value;\n            }\n        }\n        var featureStyle = defaultStyle;\n        if (style) {\n            featureStyle = style;\n        }\n        else if (styleUrl) {\n            featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        }\n        if (drawName) {\n            var nameStyle = createNameStyleFunction(featureStyle[0], name);\n            if (multiGeometryPoints.length > 0) {\n                // in multigeometries restrict the name style to points and create a\n                // style without image or text for geometries requiring fill or stroke\n                // including any polygon specific style if there is one\n                nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n                var baseStyle = new Style({\n                    geometry: featureStyle[0].getGeometry(),\n                    image: null,\n                    fill: featureStyle[0].getFill(),\n                    stroke: featureStyle[0].getStroke(),\n                    text: null,\n                });\n                return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n            }\n            return nameStyle;\n        }\n        return featureStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255,\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    s = s.replace(/\\s*,\\s*/g, ',');\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n    // KML files in the wild occasionally forget the leading\n    // `#` on styleUrlsdefined in the same document.\n    var s = getAllTextContent(node, false)\n        .trim()\n        .replace(/^(?!.*#)/, '#');\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin,\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'color': makeObjectPropertySetter(readColor),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n        anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n        anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n        anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        anchor = [0.5, 0];\n        anchorXUnits = IconAnchorUnits.FRACTION;\n        anchorYUnits = IconAnchorUnits.FRACTION;\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    var color = /** @type {Array<number>|undefined} */ (object['color']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n            if (scale === undefined) {\n                scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n            }\n        }\n        var imageStyle = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: this.crossOrigin_,\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: this.iconUrlFunction_(src),\n            color: color,\n        });\n        styleObject['imageStyle'] = imageStyle;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: \n            /** @type {import(\"../color.js\").Color} */\n            ('color' in object ? object['color'] : DEFAULT_COLOR),\n        }),\n        scale: /** @type {number|undefined} */ (object['scale']),\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        flatCoordinates.push(x, y, z, 0);\n    }\n    else {\n        flatCoordinates.push(0, 0, 0, 0);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser,\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        flatCoordinates: [],\n        whens: [],\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n        flatCoordinates[4 * i + 3] = whens[i];\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n            flatCoordinates.length,\n        ]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == GeometryType.POINT) {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.LINE_STRING) {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.POLYGON) {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack, this);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = \n    /** @type {Fill} */\n    ('fillStyle' in styleObject\n        ? styleObject['fillStyle']\n        : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = \n    /** @type {Text} */\n    ('textStyle' in styleObject\n        ? styleObject['textStyle']\n        : DEFAULT_TEXT_STYLE);\n    var strokeStyle = \n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        // if the polystyle specifies no outline two styles are needed,\n        // one for non-polygon geometries where linestrings require a stroke\n        // and one for polygons where there should be no stroke\n        return [\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        return new GeometryCollection(geometry\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return (type !== GeometryType.POLYGON &&\n                                type !== GeometryType.MULTI_POLYGON);\n                        }));\n                    }\n                    else if (type !== GeometryType.POLYGON &&\n                        type !== GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                image: imageStyle,\n                stroke: strokeStyle,\n                text: textStyle,\n                zIndex: undefined,\n            }),\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        return new GeometryCollection(geometry\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return (type === GeometryType.POLYGON ||\n                                type === GeometryType.MULTI_POLYGON);\n                        }));\n                    }\n                    else if (type === GeometryType.POLYGON ||\n                        type === GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                stroke: null,\n                zIndex: undefined,\n            }),\n        ];\n    }\n    return [\n        new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined,\n        }),\n    ];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = false;\n    hasTessellate = false;\n    hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name && featureObject.displayName) {\n        featureObject[name] = {\n            value: featureObject.value,\n            displayName: featureObject.displayName,\n            toString: function () {\n                return featureObject.value;\n            },\n        };\n    }\n    else if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north']),\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings.push(flatLinearRing);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = rgba.length == 4 ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = hex.length == 1 ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName),\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['href'], makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale',\n    'heading',\n    'Icon',\n    'color',\n    'hotSpot',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'color': makeChildAppender(writeColorTextNode),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var /** @type {Object<string, any>} */ properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src,\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS,\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScale();\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var color = style.getColor();\n    if (color) {\n        properties['color'] = color;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'scale',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': Number(style.getWidth()) || 1,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry',\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries = [];\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type === GeometryType.GEOMETRY_COLLECTION) {\n        /** @type {GeometryCollection} */ (geometry)\n            .getGeometriesArrayRecursive()\n            .forEach(function (geometry) {\n            var type = geometry.getType();\n            if (type === GeometryType.MULTI_POINT) {\n                geometries = geometries.concat(\n                /** @type {MultiPoint} */ (geometry).getPoints());\n            }\n            else if (type === GeometryType.MULTI_LINE_STRING) {\n                geometries = geometries.concat(\n                /** @type {MultiLineString} */ (geometry).getLineStrings());\n            }\n            else if (type === GeometryType.MULTI_POLYGON) {\n                geometries = geometries.concat(\n                /** @type {MultiPolygon} */ (geometry).getPolygons());\n            }\n            else if (type === GeometryType.POINT ||\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.POLYGON) {\n                geometries.push(geometry);\n            }\n            else {\n                assert(false, 39); // Unknown geometry type\n            }\n        });\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_POINT) {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_LINE_STRING) {\n        geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_POLYGON) {\n        geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name',\n    'open',\n    'visibility',\n    'address',\n    'phoneNumber',\n    'description',\n    'styleUrl',\n    'Style',\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = {\n        'address': 1,\n        'description': 1,\n        'name': 1,\n        'open': 1,\n        'phoneNumber': 1,\n        'styleUrl': 1,\n        'visibility': 1,\n    };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {})\n        .sort()\n        .filter(function (v) {\n        return !filter[v];\n    });\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var styleArray = Array.isArray(styles) ? styles : [styles];\n            var pointStyles = styleArray;\n            if (feature.getGeometry()) {\n                pointStyles = styleArray.filter(function (style) {\n                    var geometry = style.getGeometryFunction()(feature);\n                    if (geometry) {\n                        var type = geometry.getType();\n                        if (type === GeometryType.GEOMETRY_COLLECTION) {\n                            return /** @type {GeometryCollection} */ (geometry)\n                                .getGeometriesArrayRecursive()\n                                .filter(function (geometry) {\n                                var type = geometry.getType();\n                                return (type === GeometryType.POINT ||\n                                    type === GeometryType.MULTI_POINT);\n                            }).length;\n                        }\n                        return (type === GeometryType.POINT || type === GeometryType.MULTI_POINT);\n                    }\n                });\n            }\n            if (this.writeStyles_) {\n                var lineStyles = styleArray;\n                var polyStyles = styleArray;\n                if (feature.getGeometry()) {\n                    lineStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === GeometryType.GEOMETRY_COLLECTION) {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return (type === GeometryType.LINE_STRING ||\n                                        type === GeometryType.MULTI_LINE_STRING);\n                                }).length;\n                            }\n                            return (type === GeometryType.LINE_STRING ||\n                                type === GeometryType.MULTI_LINE_STRING);\n                        }\n                    });\n                    polyStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === GeometryType.GEOMETRY_COLLECTION) {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return (type === GeometryType.POLYGON ||\n                                        type === GeometryType.MULTI_POLYGON);\n                                }).length;\n                            }\n                            return (type === GeometryType.POLYGON ||\n                                type === GeometryType.MULTI_POLYGON);\n                        }\n                    });\n                }\n                properties['Style'] = {\n                    pointStyles: pointStyles,\n                    lineStyles: lineStyles,\n                    polyStyles: polyStyles,\n                };\n            }\n            if (pointStyles.length && properties['name'] === undefined) {\n                var textStyle = pointStyles[0].getText();\n                if (textStyle) {\n                    properties['name'] = textStyle.getText();\n                }\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude',\n    'tessellate',\n    'altitudeMode',\n    'coordinates',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'fill',\n    'outline',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'fill': makeChildAppender(writeBooleanTextNode),\n    'outline': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var fill = style.getFill();\n    var stroke = style.getStroke();\n    var properties = {\n        'color': fill ? fill.getColor() : undefined,\n        'fill': fill ? undefined : false,\n        'outline': stroke ? undefined : false,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle',\n    'LabelStyle',\n    'LineStyle',\n    'PolyStyle',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle),\n});\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    if (styles.pointStyles.length) {\n        var textStyle = styles.pointStyles[0].getText();\n        if (textStyle) {\n            properties['LabelStyle'] = textStyle;\n        }\n        var imageStyle = styles.pointStyles[0].getImage();\n        if (imageStyle &&\n            typeof ( /** @type {?} */(imageStyle).getSrc) === 'function') {\n            properties['IconStyle'] = imageStyle;\n        }\n    }\n    if (styles.lineStyles.length) {\n        var strokeStyle = styles.lineStyles[0].getStroke();\n        if (strokeStyle) {\n            properties['LineStyle'] = strokeStyle;\n        }\n    }\n    if (styles.polyStyles.length) {\n        var strokeStyle = styles.polyStyles[0].getStroke();\n        if (strokeStyle && !properties['LineStyle']) {\n            properties['LineStyle'] = strokeStyle;\n        }\n        properties['PolyStyle'] = styles.polyStyles[0];\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n//# sourceMappingURL=KML.js.map","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/render/Feature\n */\nimport GeometryType from '../geom/GeometryType.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight, } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray, getInteriorPointsOfMultiArray, } from '../geom/flat/interiorpoint.js';\nimport { get as getProjection } from '../proj.js';\nimport { interpolatePoint } from '../geom/flat/interpolate.js';\nimport { linearRingss as linearRingssCenter } from '../geom/flat/center.js';\nimport { transform2D } from '../geom/flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nvar RenderFeature = /** @class */ (function () {\n    /**\n     * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n     * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n     *     to be right-handed for polygons.\n     * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n     * @param {Object<string, *>} properties Properties.\n     * @param {number|string|undefined} id Feature id.\n     */\n    function RenderFeature(type, flatCoordinates, ends, properties, id) {\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent|undefined}\n         */\n        this.extent_;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        this.id_ = id;\n        /**\n         * @private\n         * @type {import(\"../geom/GeometryType.js\").default}\n         */\n        this.type_ = type;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatCoordinates_ = flatCoordinates;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatMidpoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>|Array<Array<number>>}\n         */\n        this.ends_ = ends;\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        this.properties_ = properties;\n    }\n    /**\n     * Get a feature property by its key.\n     * @param {string} key Key\n     * @return {*} Value for the requested key.\n     * @api\n     */\n    RenderFeature.prototype.get = function (key) {\n        return this.properties_[key];\n    };\n    /**\n     * Get the extent of this feature's geometry.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    RenderFeature.prototype.getExtent = function () {\n        if (!this.extent_) {\n            this.extent_ =\n                this.type_ === GeometryType.POINT\n                    ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n                    : createOrUpdateFromFlatCoordinates(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n        }\n        return this.extent_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoint = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoints_ = getInteriorPointOfArray(this.flatCoordinates_, 0, \n            /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoints = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates_, 0, \n            /** @type {Array<Array<number>>} */ (this.ends_), 2);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.flatCoordinates_, 0, \n            /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    RenderFeature.prototype.getFlatMidpoint = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = interpolatePoint(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    RenderFeature.prototype.getFlatMidpoints = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = [];\n            var flatCoordinates = this.flatCoordinates_;\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (this.ends_);\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                var end = ends[i];\n                var midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n                extend(this.flatMidpoints_, midpoint);\n                offset = end;\n            }\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is set when reading data from a remote source.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    RenderFeature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    RenderFeature.prototype.getOrientedFlatCoordinates = function () {\n        return this.flatCoordinates_;\n    };\n    /**\n     * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n     * determining the geometry type in style function (see {@link #getType}).\n     * @return {RenderFeature} Feature.\n     * @api\n     */\n    RenderFeature.prototype.getGeometry = function () {\n        return this;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {RenderFeature} Simplified geometry.\n     */\n    RenderFeature.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {RenderFeature} Simplified geometry.\n     */\n    RenderFeature.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this;\n    };\n    /**\n     * Get the feature properties.\n     * @return {Object<string, *>} Feature properties.\n     * @api\n     */\n    RenderFeature.prototype.getProperties = function () {\n        return this.properties_;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    RenderFeature.prototype.getStride = function () {\n        return 2;\n    };\n    /**\n     * @return {undefined}\n     */\n    RenderFeature.prototype.getStyleFunction = function () {\n        return undefined;\n    };\n    /**\n     * Get the type of this feature's geometry.\n     * @return {import(\"../geom/GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    RenderFeature.prototype.getType = function () {\n        return this.type_;\n    };\n    /**\n     * Transform geometry coordinates from tile pixel space to projected.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n     */\n    RenderFeature.prototype.transform = function (projection) {\n        projection = getProjection(projection);\n        var pixelExtent = projection.getExtent();\n        var projectedExtent = projection.getWorldExtent();\n        if (pixelExtent && projectedExtent) {\n            var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n            transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, tmpTransform, this.flatCoordinates_);\n        }\n    };\n    /**\n     * @return {Array<number>|Array<Array<number>>} Ends or endss.\n     */\n    RenderFeature.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    return RenderFeature;\n}());\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\nexport default RenderFeature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport FeatureFormat, { transformGeometryWithOptions } from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport Units from '../proj/Units.js';\nimport { assert } from '../asserts.js';\nimport { get } from '../proj.js';\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar MVT = /** @class */ (function (_super) {\n    __extends(MVT, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MVT(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {Projection}\n         */\n        _this.dataProjection = new Projection({\n            code: '',\n            units: Units.TILE_PIXELS,\n        });\n        /**\n         * @private\n         * @type {import(\"../Feature.js\").FeatureClass}\n         */\n        _this.featureClass_ = options.featureClass\n            ? options.featureClass\n            : RenderFeature;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layerName_ = options.layerName ? options.layerName : 'layer';\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.idProperty_ = options.idProperty;\n        return _this;\n    }\n    /**\n     * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n     * property.\n     * @param {PBF} pbf PBF.\n     * @param {Object} feature Raw feature.\n     * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n     * @param {Array<number>} ends Array to store ends in.\n     * @private\n     */\n    MVT.prototype.readRawGeometry_ = function (pbf, feature, flatCoordinates, ends) {\n        pbf.pos = feature.geometry;\n        var end = pbf.readVarint() + pbf.pos;\n        var cmd = 1;\n        var length = 0;\n        var x = 0;\n        var y = 0;\n        var coordsLen = 0;\n        var currentEnd = 0;\n        while (pbf.pos < end) {\n            if (!length) {\n                var cmdLen = pbf.readVarint();\n                cmd = cmdLen & 0x7;\n                length = cmdLen >> 3;\n            }\n            length--;\n            if (cmd === 1 || cmd === 2) {\n                x += pbf.readSVarint();\n                y += pbf.readSVarint();\n                if (cmd === 1) {\n                    // moveTo\n                    if (coordsLen > currentEnd) {\n                        ends.push(coordsLen);\n                        currentEnd = coordsLen;\n                    }\n                }\n                flatCoordinates.push(x, y);\n                coordsLen += 2;\n            }\n            else if (cmd === 7) {\n                if (coordsLen > currentEnd) {\n                    // close polygon\n                    flatCoordinates.push(flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n                    coordsLen += 2;\n                }\n            }\n            else {\n                assert(false, 59); // Invalid command found in the PBF\n            }\n        }\n        if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n        }\n    };\n    /**\n     * @private\n     * @param {PBF} pbf PBF\n     * @param {Object} rawFeature Raw Mapbox feature.\n     * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    MVT.prototype.createFeature_ = function (pbf, rawFeature, options) {\n        var type = rawFeature.type;\n        if (type === 0) {\n            return null;\n        }\n        var feature;\n        var values = rawFeature.properties;\n        var id;\n        if (!this.idProperty_) {\n            id = rawFeature.id;\n        }\n        else {\n            id = values[this.idProperty_];\n            delete values[this.idProperty_];\n        }\n        values[this.layerName_] = rawFeature.layer.name;\n        var flatCoordinates = [];\n        var ends = [];\n        this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n        var geometryType = getGeometryType(type, ends.length);\n        if (this.featureClass_ === RenderFeature) {\n            feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n            feature.transform(options.dataProjection);\n        }\n        else {\n            var geom = void 0;\n            if (geometryType == GeometryType.POLYGON) {\n                var endss = [];\n                var offset = 0;\n                var prevEndIndex = 0;\n                for (var i = 0, ii = ends.length; i < ii; ++i) {\n                    var end = ends[i];\n                    // classifies an array of rings into polygons with outer rings and holes\n                    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n                        endss.push(ends.slice(prevEndIndex, i + 1));\n                    }\n                    else {\n                        if (endss.length === 0) {\n                            continue;\n                        }\n                        endss[endss.length - 1].push(ends[prevEndIndex]);\n                    }\n                    prevEndIndex = i + 1;\n                    offset = end;\n                }\n                if (endss.length > 1) {\n                    geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n                }\n                else {\n                    geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n                }\n            }\n            else {\n                geom =\n                    geometryType === GeometryType.POINT\n                        ? new Point(flatCoordinates, GeometryLayout.XY)\n                        : geometryType === GeometryType.LINE_STRING\n                            ? new LineString(flatCoordinates, GeometryLayout.XY)\n                            : geometryType === GeometryType.POLYGON\n                                ? new Polygon(flatCoordinates, GeometryLayout.XY, ends)\n                                : geometryType === GeometryType.MULTI_POINT\n                                    ? new MultiPoint(flatCoordinates, GeometryLayout.XY)\n                                    : geometryType === GeometryType.MULTI_LINE_STRING\n                                        ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends)\n                                        : null;\n            }\n            var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this\n                .featureClass_);\n            feature = new ctor();\n            if (this.geometryName_) {\n                feature.setGeometryName(this.geometryName_);\n            }\n            var geometry = transformGeometryWithOptions(geom, false, options);\n            feature.setGeometry(geometry);\n            feature.setId(id);\n            feature.setProperties(values, true);\n        }\n        return feature;\n    };\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    MVT.prototype.getType = function () {\n        return FormatType.ARRAY_BUFFER;\n    };\n    /**\n     * Read all features.\n     *\n     * @param {ArrayBuffer} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    MVT.prototype.readFeatures = function (source, opt_options) {\n        var layers = this.layers_;\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (this.adaptOptions(opt_options));\n        var dataProjection = get(options.dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n        options.dataProjection = dataProjection;\n        var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n        var pbfLayers = pbf.readFields(layersPBFReader, {});\n        var features = [];\n        for (var name_1 in pbfLayers) {\n            if (layers && layers.indexOf(name_1) == -1) {\n                continue;\n            }\n            var pbfLayer = pbfLayers[name_1];\n            var extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n            dataProjection.setExtent(extent);\n            for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n                var rawFeature = readRawFeature(pbf, pbfLayer, i);\n                features.push(this.createFeature_(pbf, rawFeature, options));\n            }\n        }\n        return features;\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    MVT.prototype.readProjection = function (source) {\n        return this.dataProjection;\n    };\n    /**\n     * Sets the layers that features will be read from.\n     * @param {Array<string>} layers Layers.\n     * @api\n     */\n    MVT.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    return MVT;\n}(FeatureFormat));\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = {\n            keys: [],\n            values: [],\n            features: [],\n        };\n        var end = pbf.readVarint() + pbf.pos;\n        pbf.readFields(layerPBFReader, layer, end);\n        layer.length = layer.features.length;\n        if (layer.length) {\n            layers[layer.name] = layer;\n        }\n    }\n}\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n    if (tag === 15) {\n        layer.version = pbf.readVarint();\n    }\n    else if (tag === 1) {\n        layer.name = pbf.readString();\n    }\n    else if (tag === 5) {\n        layer.extent = pbf.readVarint();\n    }\n    else if (tag === 2) {\n        layer.features.push(pbf.pos);\n    }\n    else if (tag === 3) {\n        layer.keys.push(pbf.readString());\n    }\n    else if (tag === 4) {\n        var value = null;\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            tag = pbf.readVarint() >> 3;\n            value =\n                tag === 1\n                    ? pbf.readString()\n                    : tag === 2\n                        ? pbf.readFloat()\n                        : tag === 3\n                            ? pbf.readDouble()\n                            : tag === 4\n                                ? pbf.readVarint64()\n                                : tag === 5\n                                    ? pbf.readVarint()\n                                    : tag === 6\n                                        ? pbf.readSVarint()\n                                        : tag === 7\n                                            ? pbf.readBoolean()\n                                            : null;\n        }\n        layer.values.push(value);\n    }\n}\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n    if (tag == 1) {\n        feature.id = pbf.readVarint();\n    }\n    else if (tag == 2) {\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            var key = feature.layer.keys[pbf.readVarint()];\n            var value = feature.layer.values[pbf.readVarint()];\n            feature.properties[key] = value;\n        }\n    }\n    else if (tag == 3) {\n        feature.type = pbf.readVarint();\n    }\n    else if (tag == 4) {\n        feature.geometry = pbf.pos;\n    }\n}\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n    pbf.pos = layer.features[i];\n    var end = pbf.readVarint() + pbf.pos;\n    var feature = {\n        layer: layer,\n        type: 0,\n        properties: {},\n    };\n    pbf.readFields(featurePBFReader, feature, end);\n    return feature;\n}\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/GeometryType.js\").default} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n    /** @type {import(\"../geom/GeometryType.js\").default} */\n    var geometryType;\n    if (type === 1) {\n        geometryType =\n            numEnds === 1 ? GeometryType.POINT : GeometryType.MULTI_POINT;\n    }\n    else if (type === 2) {\n        geometryType =\n            numEnds === 1 ? GeometryType.LINE_STRING : GeometryType.MULTI_LINE_STRING;\n    }\n    else if (type === 3) {\n        geometryType = GeometryType.POLYGON;\n        // MultiPolygon not relevant for rendering - winding order determines\n        // outer rings of polygons.\n    }\n    return geometryType;\n}\nexport default MVT;\n//# sourceMappingURL=MVT.js.map","/**\n * @module ol/webgl\n */\n/**\n * Constants taken from goog.webgl\n */\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STREAM_DRAW = 0x88e0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STATIC_DRAW = 0x88e4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var DYNAMIC_DRAW = 0x88e8;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n    var ii = CONTEXT_IDS.length;\n    for (var i = 0; i < ii; ++i) {\n        try {\n            var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n            if (context) {\n                return /** @type {!WebGLRenderingContext} */ (context);\n            }\n        }\n        catch (e) {\n            // pass\n        }\n    }\n    return null;\n}\n/**\n * @type {Array<string>}\n */\nvar supportedExtensions;\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n    if (!supportedExtensions) {\n        var canvas = document.createElement('canvas');\n        var gl = getContext(canvas);\n        if (gl) {\n            supportedExtensions = gl.getSupportedExtensions();\n        }\n    }\n    return supportedExtensions;\n}\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport { ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER } from '../webgl.js';\nimport { DYNAMIC_DRAW, STATIC_DRAW, STREAM_DRAW } from '../webgl.js';\nimport { assert } from '../asserts.js';\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport var BufferUsage = {\n    STATIC_DRAW: STATIC_DRAW,\n    STREAM_DRAW: STREAM_DRAW,\n    DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nvar WebGLArrayBuffer = /** @class */ (function () {\n    /**\n     * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {number=} opt_usage Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n     * Default is `DYNAMIC_DRAW`.\n     */\n    function WebGLArrayBuffer(type, opt_usage) {\n        /**\n         * @private\n         * @type {Float32Array|Uint32Array}\n         */\n        this.array = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.type = type;\n        assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n    }\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {number} size Array size\n     */\n    WebGLArrayBuffer.prototype.ofSize = function (size) {\n        this.array = new (getArrayClassForType(this.type))(size);\n    };\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {Array<number>} array Numerical array\n     */\n    WebGLArrayBuffer.prototype.fromArray = function (array) {\n        this.array = getArrayClassForType(this.type).from(array);\n    };\n    /**\n     * Populates the buffer with a raw binary array buffer.\n     * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n     * initialized for the same typed array class.\n     */\n    WebGLArrayBuffer.prototype.fromArrayBuffer = function (buffer) {\n        this.array = new (getArrayClassForType(this.type))(buffer);\n    };\n    /**\n     * @return {number} Buffer type.\n     */\n    WebGLArrayBuffer.prototype.getType = function () {\n        return this.type;\n    };\n    /**\n     * Will return null if the buffer was not initialized\n     * @return {Float32Array|Uint32Array} Array.\n     */\n    WebGLArrayBuffer.prototype.getArray = function () {\n        return this.array;\n    };\n    /**\n     * @return {number} Usage.\n     */\n    WebGLArrayBuffer.prototype.getUsage = function () {\n        return this.usage;\n    };\n    /**\n     * Will return 0 if the buffer is not initialized\n     * @return {number} Array size\n     */\n    WebGLArrayBuffer.prototype.getSize = function () {\n        return this.array ? this.array.length : 0;\n    };\n    return WebGLArrayBuffer;\n}());\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @returns {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n    switch (type) {\n        case ARRAY_BUFFER:\n            return Float32Array;\n        case ELEMENT_ARRAY_BUFFER:\n            return Uint32Array;\n        default:\n            return Float32Array;\n    }\n}\nexport default WebGLArrayBuffer;\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    LOST: 'webglcontextlost',\n    RESTORED: 'webglcontextrestored',\n};\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function WebGLPostProcessingPass(options) {\n        this.gl_ = options.webGlContext;\n        var gl = this.gl_;\n        this.scaleRatio_ = options.scaleRatio || 1;\n        this.renderTargetTexture_ = gl.createTexture();\n        this.renderTargetTextureSize_ = null;\n        this.frameBuffer_ = gl.createFramebuffer();\n        // compile the program for the frame buffer\n        // TODO: make compilation errors show up\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n        gl.compileShader(vertexShader);\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n        gl.compileShader(fragmentShader);\n        this.renderTargetProgram_ = gl.createProgram();\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\n        gl.linkProgram(this.renderTargetProgram_);\n        // bind the vertices buffer for the frame buffer\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\n        var verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n        /**\n         * Holds info about custom uniforms used in the post processing pass\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        this.uniforms_ = [];\n        options.uniforms &&\n            Object.keys(options.uniforms).forEach(function (name) {\n                this.uniforms_.push({\n                    value: options.uniforms[name],\n                    location: gl.getUniformLocation(this.renderTargetProgram_, name),\n                });\n            }.bind(this));\n    }\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Initialize the render target texture of the post process, make sure it is at the\n     * right size and bind it as a render target for the next draw calls.\n     * The last step to be initialized will be the one where the primitives are rendered.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\n        var gl = this.getGL();\n        var textureSize = [\n            gl.drawingBufferWidth * this.scaleRatio_,\n            gl.drawingBufferHeight * this.scaleRatio_,\n        ];\n        // rendering goes to my buffer\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n        gl.viewport(0, 0, textureSize[0], textureSize[1]);\n        // if size has changed: adjust canvas & render target texture\n        if (!this.renderTargetTextureSize_ ||\n            this.renderTargetTextureSize_[0] !== textureSize[0] ||\n            this.renderTargetTextureSize_[1] !== textureSize[1]) {\n            this.renderTargetTextureSize_ = textureSize;\n            // create a new texture\n            var level = 0;\n            var internalFormat = gl.RGBA;\n            var border = 0;\n            var format = gl.RGBA;\n            var type = gl.UNSIGNED_BYTE;\n            var data = null;\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, textureSize[0], textureSize[1], border, format, type, data);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            // bind the texture to the framebuffer\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n        }\n    };\n    /**\n     * Render to the next postprocessing pass (or to the canvas if final pass).\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass) {\n        var gl = this.getGL();\n        var size = frameState.size;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n        // render the frame buffer to the canvas\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.useProgram(this.renderTargetProgram_);\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\n        this.applyUniforms(frameState);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    };\n    /**\n     * @returns {WebGLFramebuffer} Frame buffer\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n        return this.frameBuffer_;\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 1;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                if (value instanceof ImageData) {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n                }\n                else {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots\n                gl.uniform1i(uniform.location, textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(uniform.location, value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(uniform.location, value);\n            }\n        });\n    };\n    return WebGLPostProcessingPass;\n}());\nexport default WebGLPostProcessingPass;\n//# sourceMappingURL=PostProcessingPass.js.map","/**\n * @module ol/vec/mat4\n */\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n    mat4[0] = transform[0];\n    mat4[1] = transform[1];\n    mat4[4] = transform[2];\n    mat4[5] = transform[3];\n    mat4[12] = transform[4];\n    mat4[13] = transform[5];\n    return mat4;\n}\n//# sourceMappingURL=mat4.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport { FLOAT, UNSIGNED_BYTE, UNSIGNED_INT, UNSIGNED_SHORT, getContext, getSupportedExtensions, } from '../webgl.js';\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\nimport { compose as composeTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, } from '../transform.js';\nimport { create, fromTransform } from '../vec/mat4.js';\nimport { getUid } from '../util.js';\nimport { includes } from '../array.js';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer\n * @property {WebGLBuffer} webGlBuffer\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport var ShaderType = {\n    FRAGMENT_SHADER: 0x8b30,\n    VERTEX_SHADER: 0x8b31,\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport var DefaultUniform = {\n    PROJECTION_MATRIX: 'u_projectionMatrix',\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n    TIME: 'u_time',\n    ZOOM: 'u_zoom',\n    RESOLUTION: 'u_resolution',\n};\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport var AttributeType = {\n    UNSIGNED_BYTE: UNSIGNED_BYTE,\n    UNSIGNED_SHORT: UNSIGNED_SHORT,\n    UNSIGNED_INT: UNSIGNED_INT,\n    FLOAT: FLOAT,\n};\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue=} value Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray_} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nvar WebGLHelper = /** @class */ (function (_super) {\n    __extends(WebGLHelper, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WebGLHelper(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /** @private */\n        _this.boundHandleWebGLContextLost_ = _this.handleWebGLContextLost.bind(_this);\n        /** @private */\n        _this.boundHandleWebGLContextRestored_ = _this.handleWebGLContextRestored.bind(_this);\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = document.createElement('canvas');\n        _this.canvas_.style.position = 'absolute';\n        _this.canvas_.style.left = '0';\n        /**\n         * @private\n         * @type {WebGLRenderingContext}\n         */\n        _this.gl_ = getContext(_this.canvas_);\n        var gl = _this.getGL();\n        /**\n         * @private\n         * @type {!Object<string, BufferCacheEntry>}\n         */\n        _this.bufferCache_ = {};\n        /**\n         * @private\n         * @type {WebGLProgram}\n         */\n        _this.currentProgram_ = null;\n        assert(includes(getSupportedExtensions(), 'OES_element_index_uint'), 63);\n        gl.getExtension('OES_element_index_uint');\n        _this.canvas_.addEventListener(ContextEventType.LOST, _this.boundHandleWebGLContextLost_);\n        _this.canvas_.addEventListener(ContextEventType.RESTORED, _this.boundHandleWebGLContextRestored_);\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetRotateMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetScaleMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.tmpMat4_ = create();\n        /**\n         * @private\n         * @type {Object.<string, WebGLUniformLocation>}\n         */\n        _this.uniformLocations_ = {};\n        /**\n         * @private\n         * @type {Object.<string, number>}\n         */\n        _this.attribLocations_ = {};\n        /**\n         * Holds info about custom uniforms used in the post processing pass.\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        _this.uniforms_ = [];\n        if (options.uniforms) {\n            for (var name_1 in options.uniforms) {\n                _this.uniforms_.push({\n                    name: name_1,\n                    value: options.uniforms[name_1],\n                });\n            }\n        }\n        /**\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\n         * the frame buffer logic).\n         * @type {Array<WebGLPostProcessingPass>}\n         * @private\n         */\n        _this.postProcessPasses_ = options.postProcesses\n            ? options.postProcesses.map(function (options) {\n                return new WebGLPostProcessingPass({\n                    webGlContext: gl,\n                    scaleRatio: options.scaleRatio,\n                    vertexShader: options.vertexShader,\n                    fragmentShader: options.fragmentShader,\n                    uniforms: options.uniforms,\n                });\n            })\n            : [new WebGLPostProcessingPass({ webGlContext: gl })];\n        /**\n         * @type {string|null}\n         * @private\n         */\n        _this.shaderCompileErrors_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.startTime_ = Date.now();\n        return _this;\n    }\n    /**\n     * Just bind the buffer if it's in the cache. Otherwise create\n     * the WebGL buffer, bind it, populate it, and add an entry to\n     * the cache.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.bindBuffer = function (buffer) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buffer);\n        var bufferCache = this.bufferCache_[bufferKey];\n        if (!bufferCache) {\n            var webGlBuffer = gl.createBuffer();\n            bufferCache = {\n                buffer: buffer,\n                webGlBuffer: webGlBuffer,\n            };\n            this.bufferCache_[bufferKey] = bufferCache;\n        }\n        gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n    };\n    /**\n     * Update the data contained in the buffer array; this is required for the\n     * new data to be rendered\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.flushBufferData = function (buffer) {\n        var gl = this.getGL();\n        this.bindBuffer(buffer);\n        gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n    };\n    /**\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\n     */\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buf);\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\n        if (!gl.isContextLost()) {\n            gl.deleteBuffer(bufferCacheEntry.buffer);\n        }\n        delete this.bufferCache_[bufferKey];\n    };\n    /**\n     * Clean up.\n     */\n    WebGLHelper.prototype.disposeInternal = function () {\n        this.canvas_.removeEventListener(ContextEventType.LOST, this.boundHandleWebGLContextLost_);\n        this.canvas_.removeEventListener(ContextEventType.RESTORED, this.boundHandleWebGLContextRestored_);\n    };\n    /**\n     * Clear the buffer & set the viewport to draw.\n     * Post process passes will be initialized here, the first one being bound as a render target for\n     * subsequent draw calls.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.prepareDraw = function (frameState) {\n        var gl = this.getGL();\n        var canvas = this.getCanvas();\n        var size = frameState.size;\n        var pixelRatio = frameState.pixelRatio;\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n        gl.useProgram(this.currentProgram_);\n        // loop backwards in post processes list\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n            this.postProcessPasses_[i].init(frameState);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Clear the render target & bind it for future draw operations.\n     * This is similar to `prepareDraw`, only post processes will not be applied.\n     * Note: the whole viewport will be drawn to the render target, regardless of its size.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n     * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n     */\n    WebGLHelper.prototype.prepareDrawToRenderTarget = function (frameState, renderTarget, opt_disableAlphaBlend) {\n        var gl = this.getGL();\n        var size = renderTarget.getSize();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n     * @param {number} start Start index.\n     * @param {number} end End index.\n     * @api\n     */\n    WebGLHelper.prototype.drawElements = function (start, end) {\n        var gl = this.getGL();\n        var elementType = gl.UNSIGNED_INT;\n        var elementSize = 4;\n        var numItems = end - start;\n        var offsetInBytes = start * elementSize;\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n    };\n    /**\n     * Apply the successive post process passes which will eventually render to the actual canvas.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.finalizeDraw = function (frameState) {\n        // apply post processes using the next one as target\n        for (var i = 0; i < this.postProcessPasses_.length; i++) {\n            this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas.\n     * @api\n     */\n    WebGLHelper.prototype.getCanvas = function () {\n        return this.canvas_;\n    };\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLHelper.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n        if (rotation !== 0) {\n            rotateTransform(offsetRotateMatrix, -rotation);\n        }\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n        this.setUniformFloatValue(DefaultUniform.TIME, (Date.now() - this.startTime_) * 0.001);\n        this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n        this.setUniformFloatValue(DefaultUniform.RESOLUTION, frameState.viewState.resolution);\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 0;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement ||\n                value instanceof HTMLImageElement ||\n                value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.prevValue = undefined;\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                var imageReady = !(value instanceof HTMLImageElement) ||\n                    /** @type {HTMLImageElement} */ (value).complete;\n                if (imageReady && uniform.prevValue !== value) {\n                    uniform.prevValue = value;\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots by increasing index\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n            }\n            else if (Array.isArray(value) && value.length === 6) {\n                this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\n            }\n            else if (Array.isArray(value) && value.length <= 4) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\n            }\n        }.bind(this));\n    };\n    /**\n     * Use a program.  If the program is already in use, this will return `false`.\n     * @param {WebGLProgram} program Program.\n     * @return {boolean} Changed.\n     * @api\n     */\n    WebGLHelper.prototype.useProgram = function (program) {\n        if (program == this.currentProgram_) {\n            return false;\n        }\n        else {\n            var gl = this.getGL();\n            gl.useProgram(program);\n            this.currentProgram_ = program;\n            this.uniformLocations_ = {};\n            this.attribLocations_ = {};\n            return true;\n        }\n    };\n    /**\n     * Will attempt to compile a vertex or fragment shader based on source\n     * On error, the shader will be returned but\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n     * Use `gl.getShaderInfoLog(shader)` to have details\n     * @param {string} source Shader source\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n     * @return {WebGLShader} Shader object\n     */\n    WebGLHelper.prototype.compileShader = function (source, type) {\n        var gl = this.getGL();\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        return shader;\n    };\n    /**\n     * Create a program for a vertex and fragment shader. The shaders compilation may have failed:\n     * use `WebGLHelper.getShaderCompileErrors()`to have details if any.\n     * @param {string} fragmentShaderSource Fragment shader source.\n     * @param {string} vertexShaderSource Vertex shader source.\n     * @return {WebGLProgram} Program\n     * @api\n     */\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n        var gl = this.getGL();\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n        this.shaderCompileErrors_ = null;\n        if (gl.getShaderInfoLog(fragmentShader)) {\n            this.shaderCompileErrors_ = \"Fragment shader compilation failed:\\n\" + gl.getShaderInfoLog(fragmentShader);\n        }\n        if (gl.getShaderInfoLog(vertexShader)) {\n            this.shaderCompileErrors_ =\n                (this.shaderCompileErrors_ || '') +\n                    (\"Vertex shader compilation failed:\\n\" + gl.getShaderInfoLog(vertexShader));\n        }\n        var program = gl.createProgram();\n        gl.attachShader(program, fragmentShader);\n        gl.attachShader(program, vertexShader);\n        gl.linkProgram(program);\n        return program;\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors description, or null if last compilation was successful\n     * @api\n     */\n    WebGLHelper.prototype.getShaderCompileErrors = function () {\n        return this.shaderCompileErrors_;\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Uniform name\n     * @return {WebGLUniformLocation} uniformLocation\n     * @api\n     */\n    WebGLHelper.prototype.getUniformLocation = function (name) {\n        if (this.uniformLocations_[name] === undefined) {\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n        }\n        return this.uniformLocations_[name];\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Attribute name\n     * @return {number} attribLocation\n     * @api\n     */\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\n        if (this.attribLocations_[name] === undefined) {\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n        }\n        return this.attribLocations_[name];\n    };\n    /**\n     * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n     * The resulting transform can be used to convert world space coordinates to view coordinates.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../transform\").Transform} transform Transform to update.\n     * @return {import(\"../transform\").Transform} The updated transform object.\n     * @api\n     */\n    WebGLHelper.prototype.makeProjectionTransform = function (frameState, transform) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var resolution = frameState.viewState.resolution;\n        var center = frameState.viewState.center;\n        resetTransform(transform);\n        composeTransform(transform, 0, 0, 2 / (resolution * size[0]), 2 / (resolution * size[1]), -rotation, -center[0], -center[1]);\n        return transform;\n    };\n    /**\n     * Give a value for a standard float uniform\n     * @param {string} uniform Uniform name\n     * @param {number} value Value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a standard matrix4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Matrix value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n    };\n    /**\n     * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n     * internally.\n     * @param {string} attribName Attribute name\n     * @param {number} size Number of components per attributes\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\n     * @param {number} offset Offset in bytes\n     * @private\n     */\n    WebGLHelper.prototype.enableAttributeArray_ = function (attribName, size, type, stride, offset) {\n        var location = this.getAttributeLocation(attribName);\n        // the attribute has not been found in the shaders; do not enable it\n        if (location < 0) {\n            return;\n        }\n        this.getGL().enableVertexAttribArray(location);\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n    };\n    /**\n     * Will enable the following attributes to be read from the currently bound buffer,\n     * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n     * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n     * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n     * @api\n     */\n    WebGLHelper.prototype.enableAttributes = function (attributes) {\n        var stride = computeAttributesStride(attributes);\n        var offset = 0;\n        for (var i = 0; i < attributes.length; i++) {\n            var attr = attributes[i];\n            this.enableAttributeArray_(attr.name, attr.size, attr.type || FLOAT, stride, offset);\n            offset += attr.size * getByteSizeFromType(attr.type);\n        }\n    };\n    /**\n     * WebGL context was lost\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\n        clear(this.bufferCache_);\n        this.currentProgram_ = null;\n    };\n    /**\n     * WebGL context was restored\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextRestored = function () { };\n    /**\n     * Will create or reuse a given webgl texture and apply the given size. If no image data\n     * specified, the texture will be empty, otherwise image data will be used and the `size`\n     * parameter will be ignored.\n     * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n     * @param {Array<number>} size Expected size of the texture\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n     * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n     * @return {WebGLTexture} The generated texture\n     * @api\n     */\n    WebGLHelper.prototype.createTexture = function (size, opt_data, opt_texture) {\n        var gl = this.getGL();\n        var texture = opt_texture || gl.createTexture();\n        // set params & size\n        var level = 0;\n        var internalFormat = gl.RGBA;\n        var border = 0;\n        var format = gl.RGBA;\n        var type = gl.UNSIGNED_BYTE;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        if (opt_data) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, opt_data);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, size[0], size[1], border, format, type, null);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        return texture;\n    };\n    return WebGLHelper;\n}(Disposable));\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @returns {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n    var stride = 0;\n    for (var i = 0; i < attributes.length; i++) {\n        var attr = attributes[i];\n        stride += attr.size * getByteSizeFromType(attr.type);\n    }\n    return stride;\n}\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @returns {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n    switch (type) {\n        case AttributeType.UNSIGNED_BYTE:\n            return Uint8Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_SHORT:\n            return Uint16Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_INT:\n            return Uint32Array.BYTES_PER_ELEMENT;\n        case AttributeType.FLOAT:\n        default:\n            return Float32Array.BYTES_PER_ELEMENT;\n    }\n}\nexport default WebGLHelper;\n//# sourceMappingURL=Helper.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\n/**\n * @enum {string}\n */\nexport var WebGLWorkerMessageType = {\n    GENERATE_BUFFERS: 'GENERATE_BUFFERS',\n};\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar WebGLLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     * @param {Options=} [opt_options] Options.\n     */\n    function WebGLLayerRenderer(layer, opt_options) {\n        var _this = _super.call(this, layer) || this;\n        var options = opt_options || {};\n        /**\n         * @type {WebGLHelper}\n         * @protected\n         */\n        _this.helper = new WebGLHelper({\n            postProcesses: options.postProcesses,\n            uniforms: options.uniforms,\n        });\n        if (options.className !== undefined) {\n            _this.helper.getCanvas().className = options.className;\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    WebGLLayerRenderer.prototype.disposeInternal = function () {\n        this.helper.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors, or null if last compilation was successful\n     * @api\n     */\n    WebGLLayerRenderer.prototype.getShaderCompileErrors = function () {\n        return this.helper.getShaderCompileErrors();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLLayerRenderer.prototype.dispatchRenderEvent_ = function (type, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            // RenderEvent does not get a context or an inversePixelTransform, because WebGL allows much less direct editing than Canvas2d does.\n            var event_1 = new RenderEvent(type, null, frameState, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    WebGLLayerRenderer.prototype.preRender = function (frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, frameState);\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    WebGLLayerRenderer.prototype.postRender = function (frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, frameState);\n    };\n    return WebGLLayerRenderer;\n}(LayerRenderer));\nvar tmpArray_ = [];\nvar bufferPositions_ = { vertexPosition: 0, indexPosition: 0 };\nfunction writePointVertex(buffer, pos, x, y, index) {\n    buffer[pos + 0] = x;\n    buffer[pos + 1] = y;\n    buffer[pos + 2] = index;\n}\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(instructions, elementIndex, vertexBuffer, indexBuffer, customAttributesCount, bufferPositions) {\n    // This is for x, y and index\n    var baseVertexAttrsCount = 3;\n    var baseInstructionsCount = 2;\n    var stride = baseVertexAttrsCount + customAttributesCount;\n    var x = instructions[elementIndex + 0];\n    var y = instructions[elementIndex + 1];\n    // read custom numerical attributes on the feature\n    var customAttrs = tmpArray_;\n    customAttrs.length = customAttributesCount;\n    for (var i = 0; i < customAttrs.length; i++) {\n        customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n    }\n    var vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n    var iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n    var baseIndex = vPos / stride;\n    // push vertices for each of the four quad corners (first standard then custom attributes)\n    writePointVertex(vertexBuffer, vPos, x, y, 0);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, 1);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, 2);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, 3);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    indexBuffer[iPos++] = baseIndex;\n    indexBuffer[iPos++] = baseIndex + 1;\n    indexBuffer[iPos++] = baseIndex + 3;\n    indexBuffer[iPos++] = baseIndex + 1;\n    indexBuffer[iPos++] = baseIndex + 2;\n    indexBuffer[iPos++] = baseIndex + 3;\n    bufferPositions_.vertexPosition = vPos;\n    bufferPositions_.indexPosition = iPos;\n    return bufferPositions_;\n}\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n    var canvas = document.createElement('canvas');\n    var image = canvas.getContext('2d').createImageData(1, 1);\n    image.data[0] = 255;\n    image.data[1] = 255;\n    image.data[2] = 255;\n    image.data[3] = 255;\n    return image;\n}\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, opt_array) {\n    var array = opt_array || [];\n    var radix = 256;\n    var divide = radix - 1;\n    array[0] = Math.floor(id / radix / radix / radix) / divide;\n    array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n    array[2] = (Math.floor(id / radix) % radix) / divide;\n    array[3] = (id % radix) / divide;\n    return array;\n}\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n    var id = 0;\n    var radix = 256;\n    var mult = radix - 1;\n    id += Math.round(color[0] * radix * radix * radix * mult);\n    id += Math.round(color[1] * radix * radix * mult);\n    id += Math.round(color[2] * radix * mult);\n    id += Math.round(color[3] * mult);\n    return id;\n}\nexport default WebGLLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport { equals } from '../array.js';\n// for pixel color reading\nvar tmpArray4 = new Uint8Array(4);\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nvar WebGLRenderTarget = /** @class */ (function () {\n    /**\n     * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n     * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n     */\n    function WebGLRenderTarget(helper, opt_size) {\n        /**\n         * @private\n         * @type {import(\"./Helper.js\").default}\n         */\n        this.helper_ = helper;\n        var gl = helper.getGL();\n        /**\n         * @private\n         * @type {WebGLTexture}\n         */\n        this.texture_ = gl.createTexture();\n        /**\n         * @private\n         * @type {WebGLFramebuffer}\n         */\n        this.framebuffer_ = gl.createFramebuffer();\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.size_ = opt_size || [1, 1];\n        /**\n         * @type {Uint8Array}\n         * @private\n         */\n        this.data_ = new Uint8Array(0);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.dataCacheDirty_ = true;\n        this.updateSize_();\n    }\n    /**\n     * Changes the size of the render target texture. Note: will do nothing if the size\n     * is already the same.\n     * @param {Array<number>} size Expected size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.setSize = function (size) {\n        if (equals(size, this.size_)) {\n            return;\n        }\n        this.size_[0] = size[0];\n        this.size_[1] = size[1];\n        this.updateSize_();\n    };\n    /**\n     * Returns the size of the render target texture\n     * @return {Array<number>} Size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n     * render target into memory, which is an expensive operation.\n     * This content will be kept in cache but should be cleared after each new render.\n     * @api\n     */\n    WebGLRenderTarget.prototype.clearCachedData = function () {\n        this.dataCacheDirty_ = true;\n    };\n    /**\n     * Returns the full content of the frame buffer as a series of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * @return {Uint8Array} Integer array of color values\n     * @api\n     */\n    WebGLRenderTarget.prototype.readAll = function () {\n        if (this.dataCacheDirty_) {\n            var size = this.size_;\n            var gl = this.helper_.getGL();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n            gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.UNSIGNED_BYTE, this.data_);\n            this.dataCacheDirty_ = false;\n        }\n        return this.data_;\n    };\n    /**\n     * Reads one pixel of the frame buffer as an array of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * If x and/or y are outside of existing data, an array filled with 0 is returned.\n     * @param {number} x Pixel coordinate\n     * @param {number} y Pixel coordinate\n     * @returns {Uint8Array} Integer array with one color value (4 components)\n     * @api\n     */\n    WebGLRenderTarget.prototype.readPixel = function (x, y) {\n        if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n            tmpArray4[0] = 0;\n            tmpArray4[1] = 0;\n            tmpArray4[2] = 0;\n            tmpArray4[3] = 0;\n            return tmpArray4;\n        }\n        this.readAll();\n        var index = Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n        tmpArray4[0] = this.data_[index * 4];\n        tmpArray4[1] = this.data_[index * 4 + 1];\n        tmpArray4[2] = this.data_[index * 4 + 2];\n        tmpArray4[3] = this.data_[index * 4 + 3];\n        return tmpArray4;\n    };\n    /**\n     * @return {WebGLTexture} Texture to render to\n     */\n    WebGLRenderTarget.prototype.getTexture = function () {\n        return this.texture_;\n    };\n    /**\n     * @return {WebGLFramebuffer} Frame buffer of the render target\n     */\n    WebGLRenderTarget.prototype.getFramebuffer = function () {\n        return this.framebuffer_;\n    };\n    /**\n     * @private\n     */\n    WebGLRenderTarget.prototype.updateSize_ = function () {\n        var size = this.size_;\n        var gl = this.helper_.getGL();\n        this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture_, 0);\n        this.data_ = new Uint8Array(size[0] * size[1] * 4);\n    };\n    return WebGLRenderTarget;\n}());\nexport default WebGLRenderTarget;\n//# sourceMappingURL=RenderTarget.js.map","var source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,u){var a=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=u?u.vertexPosition:0,h=u?u.indexPosition:0,d=b/a;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=a,l,v,1),c.length&&i.set(c,b+3),o(i,b+=a,l,v,2),c.length&&i.set(c,b+3),o(i,b+=a,l,v,3),c.length&&i.set(c,b+3),b+=a,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o=r.customAttributesCount,s=2+o,u=new Float32Array(r.renderInstructions),a=u.length/s,l=4*a*(o+3),v=new Uint32Array(6*a),c=new Float32Array(l),g=null,b=0;b<u.length;b+=s)g=i(u,b,c,v,o,g);var h=e({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[c.buffer,v.buffer,u.buffer])}};\";\nvar blob = new Blob([source], { type: 'application/javascript' });\nvar url = URL.createObjectURL(blob);\nexport function create() {\n    return new Worker(url);\n}\n//# sourceMappingURL=webgl.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer, { WebGLWorkerMessageType, colorDecodeId, colorEncodeId, } from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport { ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER } from '../../webgl.js';\nimport { AttributeType, DefaultUniform } from '../../webgl/Helper.js';\nimport { apply as applyTransform, create as createTransform, makeInverse as makeInverseTransform, multiply as multiplyTransform, } from '../../transform.js';\nimport { assert } from '../../asserts.js';\nimport { buffer, createEmpty, equals } from '../../extent.js';\nimport { create as createWebGLWorker } from '../../worker/webgl.js';\nimport { getUid } from '../../util.js';\nimport { listen, unlistenByKey } from '../../events.js';\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nvar WebGLPointsLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLPointsLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     * @param {Options} options Options.\n     */\n    function WebGLPointsLayerRenderer(layer, options) {\n        var _this = this;\n        var uniforms = options.uniforms || {};\n        var projectionMatrixTransform = createTransform();\n        uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n        _this = _super.call(this, layer, {\n            className: options.className,\n            uniforms: uniforms,\n            postProcesses: options.postProcesses,\n        }) || this;\n        _this.sourceRevision_ = -1;\n        _this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n        _this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n        _this.indicesBuffer_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, DYNAMIC_DRAW);\n        _this.program_ = _this.helper.getProgram(options.fragmentShader, options.vertexShader);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.hitDetectionEnabled_ =\n            options.hitFragmentShader && options.hitVertexShader ? true : false;\n        _this.hitProgram_ =\n            _this.hitDetectionEnabled_ &&\n                _this.helper.getProgram(options.hitFragmentShader, options.hitVertexShader);\n        var customAttributes = options.attributes\n            ? options.attributes.map(function (attribute) {\n                return {\n                    name: 'a_' + attribute.name,\n                    size: 1,\n                    type: AttributeType.FLOAT,\n                };\n            })\n            : [];\n        /**\n         * A list of attributes used by the renderer. By default only the position and\n         * index of the vertex (0 to 3) are required.\n         * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n         */\n        _this.attributes = [\n            {\n                name: 'a_position',\n                size: 2,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_index',\n                size: 1,\n                type: AttributeType.FLOAT,\n            },\n        ].concat(customAttributes);\n        /**\n         * A list of attributes used for hit detection.\n         * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n         */\n        _this.hitDetectionAttributes = [\n            {\n                name: 'a_position',\n                size: 2,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_index',\n                size: 1,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_hitColor',\n                size: 4,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_featureUid',\n                size: 1,\n                type: AttributeType.FLOAT,\n            },\n        ].concat(customAttributes);\n        _this.customAttributes = options.attributes ? options.attributes : [];\n        _this.previousExtent_ = createEmpty();\n        /**\n         * This transform is updated on every frame and is the composition of:\n         * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n         * - current world->screen transform\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.currentTransform_ = projectionMatrixTransform;\n        /**\n         * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.renderTransform_ = createTransform();\n        /**\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.invertRenderTransform_ = createTransform();\n        /**\n         * @type {Float32Array}\n         * @private\n         */\n        _this.renderInstructions_ = new Float32Array(0);\n        /**\n         * These instructions are used for hit detection\n         * @type {Float32Array}\n         * @private\n         */\n        _this.hitRenderInstructions_ = new Float32Array(0);\n        /**\n         * @type {WebGLRenderTarget}\n         * @private\n         */\n        _this.hitRenderTarget_ =\n            _this.hitDetectionEnabled_ && new WebGLRenderTarget(_this.helper);\n        _this.worker_ = createWebGLWorker();\n        _this.worker_.addEventListener('message', \n        /**\n         * @param {*} event Event.\n         * @this {WebGLPointsLayerRenderer}\n         */\n        function (event) {\n            var received = event.data;\n            if (received.type === WebGLWorkerMessageType.GENERATE_BUFFERS) {\n                var projectionTransform = received.projectionTransform;\n                if (received.hitDetection) {\n                    this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n                    this.helper.flushBufferData(this.hitVerticesBuffer_);\n                }\n                else {\n                    this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n                    this.helper.flushBufferData(this.verticesBuffer_);\n                }\n                this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n                this.helper.flushBufferData(this.indicesBuffer_);\n                this.renderTransform_ = projectionTransform;\n                makeInverseTransform(this.invertRenderTransform_, this.renderTransform_);\n                if (received.hitDetection) {\n                    this.hitRenderInstructions_ = new Float32Array(event.data.renderInstructions);\n                }\n                else {\n                    this.renderInstructions_ = new Float32Array(event.data.renderInstructions);\n                }\n                this.getLayer().changed();\n            }\n        }.bind(_this));\n        /**\n         * This object will be updated when the source changes. Key is uid.\n         * @type {Object<string, FeatureCacheItem>}\n         * @private\n         */\n        _this.featureCache_ = {};\n        /**\n         * Amount of features in the cache.\n         * @type {number}\n         * @private\n         */\n        _this.featureCount_ = 0;\n        var source = _this.getLayer().getSource();\n        _this.sourceListenKeys_ = [\n            listen(source, VectorEventType.ADDFEATURE, _this.handleSourceFeatureAdded_, _this),\n            listen(source, VectorEventType.CHANGEFEATURE, _this.handleSourceFeatureChanged_, _this),\n            listen(source, VectorEventType.REMOVEFEATURE, _this.handleSourceFeatureDelete_, _this),\n            listen(source, VectorEventType.CLEAR, _this.handleSourceFeatureClear_, _this),\n        ];\n        source.forEachFeature(function (feature) {\n            this.featureCache_[getUid(feature)] = {\n                feature: feature,\n                properties: feature.getProperties(),\n                geometry: feature.getGeometry(),\n            };\n            this.featureCount_++;\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureAdded_ = function (event) {\n        var feature = event.feature;\n        this.featureCache_[getUid(feature)] = {\n            feature: feature,\n            properties: feature.getProperties(),\n            geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n    };\n    /**\n     * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureChanged_ = function (event) {\n        var feature = event.feature;\n        this.featureCache_[getUid(feature)] = {\n            feature: feature,\n            properties: feature.getProperties(),\n            geometry: feature.getGeometry(),\n        };\n    };\n    /**\n     * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureDelete_ = function (event) {\n        var feature = event.feature;\n        delete this.featureCache_[getUid(feature)];\n        this.featureCount_--;\n    };\n    /**\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureClear_ = function () {\n        this.featureCache_ = {};\n        this.featureCount_ = 0;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    WebGLPointsLayerRenderer.prototype.renderFrame = function (frameState) {\n        this.preRender(frameState);\n        var renderCount = this.indicesBuffer_.getSize();\n        this.helper.drawElements(0, renderCount);\n        this.helper.finalizeDraw(frameState);\n        var canvas = this.helper.getCanvas();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = String(opacity);\n        }\n        if (this.hitDetectionEnabled_) {\n            this.renderHitDetection(frameState);\n            this.hitRenderTarget_.clearCachedData();\n        }\n        this.postRender(frameState);\n        return canvas;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    WebGLPointsLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layer = this.getLayer();\n        var vectorSource = layer.getSource();\n        var viewState = frameState.viewState;\n        var viewNotMoving = !frameState.viewHints[ViewHint.ANIMATING] &&\n            !frameState.viewHints[ViewHint.INTERACTING];\n        var extentChanged = !equals(this.previousExtent_, frameState.extent);\n        var sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n        if (sourceChanged) {\n            this.sourceRevision_ = vectorSource.getRevision();\n        }\n        if (viewNotMoving && (extentChanged || sourceChanged)) {\n            var projection = viewState.projection;\n            var resolution = viewState.resolution;\n            var renderBuffer = layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n            var extent = buffer(frameState.extent, renderBuffer * resolution);\n            vectorSource.loadFeatures(extent, resolution, projection);\n            this.rebuildBuffers_(frameState);\n            this.previousExtent_ = frameState.extent.slice();\n        }\n        // apply the current projection transform with the invert of the one used to fill buffers\n        this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n        multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n        this.helper.useProgram(this.program_);\n        this.helper.prepareDraw(frameState);\n        // write new data\n        this.helper.bindBuffer(this.verticesBuffer_);\n        this.helper.bindBuffer(this.indicesBuffer_);\n        this.helper.enableAttributes(this.attributes);\n        return true;\n    };\n    /**\n     * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n     * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.rebuildBuffers_ = function (frameState) {\n        // saves the projection transform for the current frame state\n        var projectionTransform = createTransform();\n        this.helper.makeProjectionTransform(frameState, projectionTransform);\n        // here we anticipate the amount of render instructions that we well generate\n        // this can be done since we know that for normal render we only have x, y as base instructions,\n        // and x, y, r, g, b, a and featureUid for hit render instructions\n        // and we also know the amount of custom attributes to append to these\n        var totalInstructionsCount = (2 + this.customAttributes.length) * this.featureCount_;\n        if (!this.renderInstructions_ ||\n            this.renderInstructions_.length !== totalInstructionsCount) {\n            this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n        }\n        if (this.hitDetectionEnabled_) {\n            var totalHitInstructionsCount = (7 + this.customAttributes.length) * this.featureCount_;\n            if (!this.hitRenderInstructions_ ||\n                this.hitRenderInstructions_.length !== totalHitInstructionsCount) {\n                this.hitRenderInstructions_ = new Float32Array(totalHitInstructionsCount);\n            }\n        }\n        // loop on features to fill the buffer\n        var featureCache, geometry;\n        var tmpCoords = [];\n        var tmpColor = [];\n        var renderIndex = 0;\n        var hitIndex = 0;\n        var hitColor;\n        for (var featureUid in this.featureCache_) {\n            featureCache = this.featureCache_[featureUid];\n            geometry = /** @type {import(\"../../geom\").Point} */ (featureCache.geometry);\n            if (!geometry || geometry.getType() !== GeometryType.POINT) {\n                continue;\n            }\n            tmpCoords[0] = geometry.getFlatCoordinates()[0];\n            tmpCoords[1] = geometry.getFlatCoordinates()[1];\n            applyTransform(projectionTransform, tmpCoords);\n            hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n            this.renderInstructions_[renderIndex++] = tmpCoords[0];\n            this.renderInstructions_[renderIndex++] = tmpCoords[1];\n            // for hit detection, the feature uid is saved in the opacity value\n            // and the index of the opacity value is encoded in the color values\n            if (this.hitDetectionEnabled_) {\n                this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n                this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n                this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n            }\n            // pushing custom attributes\n            var value = void 0;\n            for (var j = 0; j < this.customAttributes.length; j++) {\n                value = this.customAttributes[j].callback(featureCache.feature, featureCache.properties);\n                this.renderInstructions_[renderIndex++] = value;\n                if (this.hitDetectionEnabled_) {\n                    this.hitRenderInstructions_[hitIndex++] = value;\n                }\n            }\n        }\n        /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n        var message = {\n            type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n            renderInstructions: this.renderInstructions_.buffer,\n            customAttributesCount: this.customAttributes.length,\n        };\n        // additional properties will be sent back as-is by the worker\n        message['projectionTransform'] = projectionTransform;\n        this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n        this.renderInstructions_ = null;\n        /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n        if (this.hitDetectionEnabled_) {\n            var hitMessage = {\n                type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n                renderInstructions: this.hitRenderInstructions_.buffer,\n                customAttributesCount: 5 + this.customAttributes.length,\n            };\n            hitMessage['projectionTransform'] = projectionTransform;\n            hitMessage['hitDetection'] = true;\n            this.worker_.postMessage(hitMessage, [\n                this.hitRenderInstructions_.buffer,\n            ]);\n            this.hitRenderInstructions_ = null;\n        }\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    WebGLPointsLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        assert(this.hitDetectionEnabled_, 66);\n        if (!this.hitRenderInstructions_) {\n            return undefined;\n        }\n        var pixel = applyTransform(frameState.coordinateToPixelTransform, coordinate.slice());\n        var data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n        var color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n        var index = colorDecodeId(color);\n        var opacity = this.hitRenderInstructions_[index];\n        var uid = Math.floor(opacity).toString();\n        var source = this.getLayer().getSource();\n        var feature = source.getFeatureByUid(uid);\n        if (feature) {\n            return callback(feature, this.getLayer(), null);\n        }\n        return undefined;\n    };\n    /**\n     * Render the hit detection data to the corresponding render target\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState current frame state\n     */\n    WebGLPointsLayerRenderer.prototype.renderHitDetection = function (frameState) {\n        // skip render entirely if vertex buffers not ready/generated yet\n        if (!this.hitVerticesBuffer_.getSize()) {\n            return;\n        }\n        this.hitRenderTarget_.setSize([\n            Math.floor(frameState.size[0] / 2),\n            Math.floor(frameState.size[1] / 2),\n        ]);\n        this.helper.useProgram(this.hitProgram_);\n        this.helper.prepareDrawToRenderTarget(frameState, this.hitRenderTarget_, true);\n        this.helper.bindBuffer(this.hitVerticesBuffer_);\n        this.helper.bindBuffer(this.indicesBuffer_);\n        this.helper.enableAttributes(this.hitDetectionAttributes);\n        var renderCount = this.indicesBuffer_.getSize();\n        this.helper.drawElements(0, renderCount);\n    };\n    /**\n     * Clean up.\n     */\n    WebGLPointsLayerRenderer.prototype.disposeInternal = function () {\n        this.worker_.terminate();\n        this.layer_ = null;\n        this.sourceListenKeys_.forEach(function (key) {\n            unlistenByKey(key);\n        });\n        this.sourceListenKeys_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return WebGLPointsLayerRenderer;\n}(WebGLLayerRenderer));\nexport default WebGLPointsLayerRenderer;\n//# sourceMappingURL=PointsLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Heatmap\n */\nimport VectorLayer from './Vector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getChangeEventType } from '../Object.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    BLUR: 'blur',\n    GRADIENT: 'gradient',\n    RADIUS: 'radius',\n};\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /** @class */ (function (_super) {\n    __extends(Heatmap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Heatmap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.gradient;\n        delete baseOptions.radius;\n        delete baseOptions.blur;\n        delete baseOptions.weight;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.gradient_ = null;\n        _this.addEventListener(getChangeEventType(Property.GRADIENT), _this.handleGradientChanged_);\n        _this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n        _this.setBlur(options.blur !== undefined ? options.blur : 15);\n        _this.setRadius(options.radius !== undefined ? options.radius : 8);\n        var weight = options.weight ? options.weight : 'weight';\n        if (typeof weight === 'string') {\n            _this.weightFunction_ = function (feature) {\n                return feature.get(weight);\n            };\n        }\n        else {\n            _this.weightFunction_ = weight;\n        }\n        // For performance reasons, don't sort the features before rendering.\n        // The render order is not relevant for a heatmap representation.\n        _this.setRenderOrder(null);\n        return _this;\n    }\n    /**\n     * Return the blur size in pixels.\n     * @return {number} Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getBlur = function () {\n        return /** @type {number} */ (this.get(Property.BLUR));\n    };\n    /**\n     * Return the gradient colors as array of strings.\n     * @return {Array<string>} Colors.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getGradient = function () {\n        return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n    };\n    /**\n     * Return the size of the radius in pixels.\n     * @return {number} Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getRadius = function () {\n        return /** @type {number} */ (this.get(Property.RADIUS));\n    };\n    /**\n     * @private\n     */\n    Heatmap.prototype.handleGradientChanged_ = function () {\n        this.gradient_ = createGradient(this.getGradient());\n    };\n    /**\n     * Set the blur size in pixels.\n     * @param {number} blur Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setBlur = function (blur) {\n        this.set(Property.BLUR, blur);\n    };\n    /**\n     * Set the gradient colors as array of strings.\n     * @param {Array<string>} colors Gradient.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setGradient = function (colors) {\n        this.set(Property.GRADIENT, colors);\n    };\n    /**\n     * Set the size of the radius in pixels.\n     * @param {number} radius Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setRadius = function (radius) {\n        this.set(Property.RADIUS, radius);\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {WebGLPointsLayerRenderer} A layer renderer.\n     */\n    Heatmap.prototype.createRenderer = function () {\n        return new WebGLPointsLayerRenderer(this, {\n            className: this.getClassName(),\n            attributes: [\n                {\n                    name: 'weight',\n                    callback: function (feature) {\n                        var weight = this.weightFunction_(feature);\n                        return weight !== undefined ? clamp(weight, 0, 1) : 1;\n                    }.bind(this),\n                },\n            ],\n            vertexShader: \"\\n        precision mediump float;\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform float u_size;\\n        attribute vec2 a_position;\\n        attribute float a_index;\\n        attribute float a_weight;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\\n          v_texCoord = vec2(u, v);\\n          v_weight = a_weight;\\n        }\",\n            fragmentShader: \"\\n        precision mediump float;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\\n        }\",\n            hitVertexShader: \"\\n        precision mediump float;\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform float u_size;\\n        attribute vec2 a_position;\\n        attribute float a_index;\\n        attribute float a_weight;\\n        attribute vec4 a_hitColor;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n        varying vec4 v_hitColor;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\\n          v_texCoord = vec2(u, v);\\n          v_hitColor = a_hitColor;\\n          v_weight = a_weight;\\n        }\",\n            hitFragmentShader: \"\\n        precision mediump float;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n        varying vec4 v_hitColor;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\\n          if (alpha < 0.05) {\\n            discard;\\n          }\\n\\n          gl_FragColor = v_hitColor;\\n        }\",\n            uniforms: {\n                u_size: function () {\n                    return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n                }.bind(this),\n                u_blurSlope: function () {\n                    return (this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR)));\n                }.bind(this),\n            },\n            postProcesses: [\n                {\n                    fragmentShader: \"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",\n                    uniforms: {\n                        u_gradientTexture: function () {\n                            return this.gradient_;\n                        }.bind(this),\n                    },\n                },\n            ],\n        });\n    };\n    Heatmap.prototype.renderDeclutter = function () { };\n    return Heatmap;\n}(VectorLayer));\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n    var width = 1;\n    var height = 256;\n    var context = createCanvasContext2D(width, height);\n    var gradient = context.createLinearGradient(0, 0, width, height);\n    var step = 1 / (colors.length - 1);\n    for (var i = 0, ii = colors.length; i < ii; ++i) {\n        gradient.addColorStop(i * step, colors[i]);\n    }\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, height);\n    return context.canvas;\n}\nexport default Heatmap;\n//# sourceMappingURL=Heatmap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { assign } from '../../obj.js';\nimport { compose as composeTransform, makeInverse } from '../../transform.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] &&\n            !hints[ViewHint.INTERACTING] &&\n            !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image && this.loadImage(image)) {\n                    this.image_ = image;\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = size_1;\n            height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersects(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution, (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution);\n        this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        assign(context, this.getLayer().getSource().getContextOptions());\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = this.context.globalAlpha;\n                this.context.globalAlpha = opacity;\n            }\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                this.context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved\n *    performance on vector tile layers with only a few rendered features (e.g.\n *    for highlighting a subset of features of another layer with the same\n *    source).\n * @api\n */\nexport default {\n    IMAGE: 'image',\n    HYBRID: 'hybrid',\n    VECTOR: 'vector',\n};\n//# sourceMappingURL=VectorTileRenderType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ReplayType from '../../render/canvas/BuilderType.js';\nimport TileState from '../../TileState.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport ViewHint from '../../ViewHint.js';\nimport { apply as applyTransform, create as createTransform, multiply, reset as resetTransform, scale, scale as scaleTransform, translate as translateTransform, } from '../../transform.js';\nimport { boundingExtent, buffer, containsExtent, equals, getIntersection, getTopLeft, intersects, } from '../../extent.js';\nimport { clear } from '../../obj.js';\nimport { createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { getUid } from '../../util.js';\nimport { listen, unlistenByKey } from '../../events.js';\nimport { toSize } from '../../size.js';\nimport { wrapX } from '../../coordinate.js';\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n    'image': [\n        ReplayType.POLYGON,\n        ReplayType.CIRCLE,\n        ReplayType.LINE_STRING,\n        ReplayType.IMAGE,\n        ReplayType.TEXT,\n    ],\n    'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING],\n    'vector': [],\n};\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n    'image': [ReplayType.DEFAULT],\n    'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n    'vector': [\n        ReplayType.POLYGON,\n        ReplayType.CIRCLE,\n        ReplayType.LINE_STRING,\n        ReplayType.IMAGE,\n        ReplayType.TEXT,\n        ReplayType.DEFAULT,\n    ],\n};\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n     */\n    function CanvasVectorTileLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedLayerRevision_;\n        /**\n         * @private\n         * @type {import(\"../../transform\").Transform}\n         */\n        _this.renderedPixelToCoordinateTransform_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../../VectorRenderTile.js\").default>}\n         */\n        _this.renderTileImageQueue_ = {};\n        /**\n         * @type {Object<string, import(\"../../events.js\").EventsKey>}\n         */\n        _this.tileListenerKeys_ = {};\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection\").default} projection Projection.\n     * @param {boolean} queue Queue tile for rendering.\n     * @return {boolean|undefined} Tile needs to be rendered.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareTile = function (tile, pixelRatio, projection, queue) {\n        var render;\n        var tileUid = getUid(tile);\n        var state = tile.getState();\n        if (((state === TileState.LOADED && tile.hifi) ||\n            state === TileState.ERROR) &&\n            tileUid in this.tileListenerKeys_) {\n            unlistenByKey(this.tileListenerKeys_[tileUid]);\n            delete this.tileListenerKeys_[tileUid];\n        }\n        if (state === TileState.LOADED || state === TileState.ERROR) {\n            this.updateExecutorGroup_(tile, pixelRatio, projection);\n            if (this.tileImageNeedsRender_(tile, pixelRatio, projection)) {\n                render = true;\n                if (queue) {\n                    this.renderTileImageQueue_[tileUid] = tile;\n                }\n            }\n        }\n        return render;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var layer = this.getLayer();\n        var tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() < TileState.LOADED) {\n            tile.wantedResolution = resolution;\n            var tileUid = getUid(tile);\n            if (!(tileUid in this.tileListenerKeys_)) {\n                var listenerKey = listen(tile, EventType.CHANGE, this.prepareTile.bind(this, tile, pixelRatio, projection, true));\n                this.tileListenerKeys_[tileUid] = listenerKey;\n            }\n        }\n        else {\n            var viewHints = frameState.viewHints;\n            var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n            if (hifi || !tile.wantedResolution) {\n                tile.wantedResolution = resolution;\n            }\n            var render = this.prepareTile(tile, pixelRatio, projection, false);\n            if (render && layer.getRenderMode() !== VectorTileRenderType.VECTOR) {\n                this.renderTileImage_(tile, frameState);\n            }\n        }\n        return _super.prototype.getTile.call(this, z, x, y, frameState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasVectorTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var layer = this.getLayer();\n        return (_super.prototype.isDrawableTile.call(this, tile) &&\n            (layer.getRenderMode() === VectorTileRenderType.VECTOR\n                ? getUid(layer) in tile.executorGroups\n                : tile.hasContext(layer)));\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage(this.getLayer());\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerRevision = this.getLayer().getRevision();\n        if (this.renderedLayerRevision_ != layerRevision) {\n            this.renderedTiles.length = 0;\n        }\n        this.renderedLayerRevision_ = layerRevision;\n        return _super.prototype.prepareFrame.call(this, frameState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.updateExecutorGroup_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var revision = layer.getRevision();\n        var renderOrder = layer.getRenderOrder() || null;\n        var resolution = tile.wantedResolution;\n        var builderState = tile.getReplayState(layer);\n        if (!builderState.dirty &&\n            builderState.renderedResolution === resolution &&\n            builderState.renderedRevision == revision &&\n            builderState.renderedRenderOrder == renderOrder &&\n            builderState.renderedZ === tile.sourceZ) {\n            return;\n        }\n        var source = layer.getSource();\n        var declutter = layer.getDeclutter();\n        var sourceTileGrid = source.getTileGrid();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n        var layerUid = getUid(layer);\n        delete tile.hitDetectionImageData[layerUid];\n        tile.executorGroups[layerUid] = [];\n        if (declutter) {\n            tile.declutterExecutorGroups[layerUid] = [];\n        }\n        var _loop_1 = function (t, tt) {\n            var sourceTile = sourceTiles[t];\n            if (sourceTile.getState() != TileState.LOADED) {\n                return \"continue\";\n            }\n            var sourceTileCoord = sourceTile.tileCoord;\n            var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n            var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n            var bufferedExtent = equals(sourceTileExtent, sharedExtent)\n                ? null\n                : buffer(sharedExtent, layer.getRenderBuffer() * resolution, this_1.tmpExtent);\n            builderState.dirty = false;\n            var builderGroup = new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio);\n            var declutterBuilderGroup = declutter\n                ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n                : undefined;\n            var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @this {CanvasVectorTileLayerRenderer}\n             */\n            var render = function (feature) {\n                var styles;\n                var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n                if (styleFunction) {\n                    styles = styleFunction(feature, resolution);\n                }\n                if (styles) {\n                    var dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup, declutterBuilderGroup);\n                    this.dirty_ = this.dirty_ || dirty;\n                    builderState.dirty = builderState.dirty || dirty;\n                }\n            };\n            var features = sourceTile.getFeatures();\n            if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n                features.sort(renderOrder);\n            }\n            for (var i = 0, ii = features.length; i < ii; ++i) {\n                var feature = features[i];\n                if (!bufferedExtent ||\n                    intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n                    render.call(this_1, feature);\n                }\n            }\n            var executorGroupInstructions = builderGroup.finish();\n            // no need to clip when the render tile is covered by a single source tile\n            var replayExtent = layer.getRenderMode() !== VectorTileRenderType.VECTOR &&\n                declutter &&\n                sourceTiles.length === 1\n                ? null\n                : sharedExtent;\n            var renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution, pixelRatio, source.getOverlaps(), executorGroupInstructions, layer.getRenderBuffer());\n            tile.executorGroups[layerUid].push(renderingReplayGroup);\n            if (declutterBuilderGroup) {\n                var declutterExecutorGroup = new CanvasExecutorGroup(replayExtent, resolution, pixelRatio, source.getOverlaps(), declutterBuilderGroup.finish(), layer.getRenderBuffer());\n                tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0, tt = sourceTiles.length; t < tt; ++t) {\n            _loop_1(t, tt);\n        }\n        builderState.renderedRevision = revision;\n        builderState.renderedZ = tile.sourceZ;\n        builderState.renderedRenderOrder = renderOrder;\n        builderState.renderedResolution = resolution;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n        var layer = this.getLayer();\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var hitExtent = boundingExtent([coordinate]);\n        buffer(hitExtent, resolution * hitTolerance, hitExtent);\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position.\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = feature.getId();\n            if (key === undefined) {\n                key = getUid(feature);\n            }\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var renderedTiles = /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this\n            .renderedTiles);\n        var found;\n        var _loop_2 = function (i, ii) {\n            var tile = renderedTiles[i];\n            var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            if (!intersects(tileExtent, hitExtent)) {\n                return \"continue\";\n            }\n            var layerUid = getUid(layer);\n            var executorGroups = [tile.executorGroups[layerUid]];\n            var declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n            if (declutterExecutorGroups) {\n                executorGroups.push(declutterExecutorGroups);\n            }\n            executorGroups.some(function (executorGroups) {\n                var declutteredFeatures = executorGroups === declutterExecutorGroups\n                    ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                    : null;\n                for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                    var executorGroup = executorGroups[t];\n                    found = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, declutteredFeatures);\n                    if (found) {\n                        return true;\n                    }\n                }\n            });\n        };\n        for (var i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n            _loop_2(i, ii);\n        }\n        return found;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorTileLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(function (resolve, reject) {\n            var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n            var layerUid = getUid(layer);\n            var source = layer.getSource();\n            var projection = this.renderedProjection;\n            var projectionExtent = projection.getExtent();\n            var resolution = this.renderedResolution;\n            var tileGrid = source.getTileGridForProjection(projection);\n            var coordinate = applyTransform(this.renderedPixelToCoordinateTransform_, pixel.slice());\n            var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n            var tile;\n            for (var i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n                if (tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()) {\n                    tile = this.renderedTiles[i];\n                    if (tile.getState() === TileState.LOADED && tile.hifi) {\n                        var extent_1 = tileGrid.getTileCoordExtent(tile.tileCoord);\n                        if (source.getWrapX() &&\n                            projection.canWrapX() &&\n                            !containsExtent(projectionExtent, extent_1)) {\n                            wrapX(coordinate, projection);\n                        }\n                        break;\n                    }\n                    tile = undefined;\n                }\n            }\n            if (!tile || tile.loadingSourceTiles > 0) {\n                resolve([]);\n                return;\n            }\n            var extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            var corner = getTopLeft(extent);\n            var tilePixel = [\n                (coordinate[0] - corner[0]) / resolution,\n                (corner[1] - coordinate[1]) / resolution,\n            ];\n            var features = tile\n                .getSourceTiles()\n                .reduce(function (accumulator, sourceTile) {\n                return accumulator.concat(sourceTile.getFeatures());\n            }, []);\n            var hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n            if (!hitDetectionImageData && !this.animatingOrInteracting_) {\n                var tileSize = toSize(tileGrid.getTileSize(tileGrid.getZForResolution(resolution)));\n                var size = [tileSize[0] / 2, tileSize[1] / 2];\n                var rotation = this.renderedRotation_;\n                var transforms = [\n                    this.getRenderTransform(tileGrid.getTileCoordCenter(tile.wrappedTileCoord), resolution, 0, 0.5, size[0], size[1], 0),\n                ];\n                hitDetectionImageData = createHitDetectionImageData(tileSize, transforms, features, layer.getStyleFunction(), tileGrid.getTileCoordExtent(tile.wrappedTileCoord), tile.getReplayState(layer).renderedResolution, rotation);\n                tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n            }\n            resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n        }.bind(this));\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleFontsChanged = function () {\n        clear(this.renderTileImageQueue_);\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var tiles = /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this\n            .renderedTiles);\n        for (var i = 0, ii = tiles.length; i < ii; ++i) {\n            var tile = tiles[i];\n            var declutterExecutorGroups = tile.declutterExecutorGroups[getUid(this.getLayer())];\n            if (declutterExecutorGroups) {\n                for (var j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n                    declutterExecutorGroups[j].execute(this.context, 1, this.getTileRenderTransform(tile, frameState), frameState.viewState.rotation, hifi, undefined, frameState.declutterTree);\n                }\n            }\n        }\n    };\n    CanvasVectorTileLayerRenderer.prototype.getTileRenderTransform = function (tile, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var rotation = viewState.rotation;\n        var size = frameState.size;\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var source = this.getLayer().getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var tileCoord = tile.tileCoord;\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n        var transform = multiply(scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio), this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, worldOffset));\n        return transform;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        this.renderQueuedTileImages_(hifi, frameState);\n        _super.prototype.renderFrame.call(this, frameState, target);\n        this.renderedPixelToCoordinateTransform_ = frameState.pixelToCoordinateTransform.slice();\n        this.renderedRotation_ = frameState.viewState.rotation;\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var renderMode = layer.getRenderMode();\n        if (renderMode === VectorTileRenderType.IMAGE) {\n            return this.container;\n        }\n        var source = layer.getSource();\n        // Unqueue tiles from the image queue when we don't need any more\n        var usedTiles = frameState.usedTiles[getUid(source)];\n        for (var tileUid in this.renderTileImageQueue_) {\n            if (!usedTiles || !(tileUid in usedTiles)) {\n                delete this.renderTileImageQueue_[tileUid];\n            }\n        }\n        var context = this.context;\n        var replayTypes = VECTOR_REPLAYS[renderMode];\n        var viewState = frameState.viewState;\n        var rotation = viewState.rotation;\n        var tiles = this.renderedTiles;\n        var clips = [];\n        var clipZs = [];\n        for (var i = tiles.length - 1; i >= 0; --i) {\n            var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\n            var transform = this.getTileRenderTransform(tile, frameState);\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            var clipped = false;\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                if (!executorGroup.hasExecutors(replayTypes)) {\n                    // sourceTile has no instructions of the types we want to render\n                    continue;\n                }\n                var currentZ = tile.tileCoord[0];\n                var currentClip = void 0;\n                if (!clipped) {\n                    currentClip = executorGroup.getClipCoords(transform);\n                    if (currentClip) {\n                        context.save();\n                        // Create a clip mask for regions in this low resolution tile that are\n                        // already filled by a higher resolution tile\n                        for (var j = 0, jj = clips.length; j < jj; ++j) {\n                            var clip = clips[j];\n                            if (currentZ < clipZs[j]) {\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher resolution tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                    }\n                }\n                executorGroup.execute(context, 1, transform, rotation, hifi, replayTypes);\n                if (!clipped && currentClip) {\n                    context.restore();\n                    clips.push(currentClip);\n                    clipZs.push(currentZ);\n                    clipped = true;\n                }\n            }\n        }\n        return this.container;\n    };\n    /**\n     * @param {boolean} hifi We have time to render a high fidelity map image.\n     * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderQueuedTileImages_ = function (hifi, frameState) {\n        // When we don't have time to render hifi, only render tiles until we have used up\n        // half of the frame budget of 16 ms\n        for (var uid in this.renderTileImageQueue_) {\n            if (!hifi && Date.now() - frameState.time > 8) {\n                frameState.animate = true;\n                break;\n            }\n            var tile = this.renderTileImageQueue_[uid];\n            delete this.renderTileImageQueue_[uid];\n            this.renderTileImage_(tile, frameState);\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder group for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, undefined, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, undefined, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} A new tile image was rendered.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.tileImageNeedsRender_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var sourceZ = tile.sourceZ;\n        var resolution = tile.wantedResolution;\n        return (replayState.renderedTileResolution !== resolution ||\n            replayState.renderedTileRevision !== revision ||\n            replayState.renderedTileZ !== sourceZ);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function (tile, frameState) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var executorGroups = tile.executorGroups[getUid(layer)];\n        replayState.renderedTileRevision = revision;\n        replayState.renderedTileZ = tile.sourceZ;\n        var tileCoord = tile.wrappedTileCoord;\n        var z = tileCoord[0];\n        var source = layer.getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n        var renderPixelRatio = (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n        var resolution = tileGrid.getResolution(z);\n        var context = tile.getContext(layer);\n        // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n        pixelRatio = Math.round(Math.max(pixelRatio, renderPixelRatio / pixelRatio));\n        var size = source.getTilePixelSize(z, pixelRatio, projection);\n        context.canvas.width = size[0];\n        context.canvas.height = size[1];\n        var renderScale = pixelRatio / renderPixelRatio;\n        if (renderScale !== 1) {\n            var canvasTransform = resetTransform(this.tmpTransform_);\n            scaleTransform(canvasTransform, renderScale, renderScale);\n            context.setTransform.apply(context, canvasTransform);\n        }\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n        var pixelScale = renderPixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n            var executorGroup = executorGroups[i];\n            executorGroup.execute(context, renderScale, transform, 0, true, IMAGE_REPLAYS[layer.getRenderMode()]);\n        }\n        replayState.renderedTileResolution = tile.wantedResolution;\n    };\n    return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\nexport default CanvasVectorTileLayerRenderer;\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Only available when `declutter` is set to `false` (default).\n *    Otherwise, `'hybrid'` mode will used instead. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations. Labels and point symbols will\n *    get cut off at tile boundaries.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default>}\n * @api\n */\nvar VectorTileLayer = /** @class */ (function (_super) {\n    __extends(VectorTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = /** @type {Object} */ (assign({}, options));\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, /** @type {import(\"./BaseVector.js\").Options} */ (baseOptions)) || this;\n        var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n        assert(renderMode == undefined ||\n            renderMode == VectorTileRenderType.IMAGE ||\n            renderMode == VectorTileRenderType.HYBRID ||\n            renderMode == VectorTileRenderType.VECTOR, 28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`.\n        /**\n         * @private\n         * @type {import(\"./VectorTileRenderType.js\").default}\n         */\n        _this.renderMode_ = renderMode;\n        _this.setPreload(options.preload ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorTileLayer.prototype.createRenderer = function () {\n        return new CanvasVectorTileLayerRenderer(this);\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    VectorTileLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {import(\"./VectorTileRenderType.js\").default} The render mode.\n     */\n    VectorTileLayer.prototype.getRenderMode = function () {\n        return this.renderMode_;\n    };\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return VectorTileLayer;\n}(BaseVectorLayer));\nexport default VectorTileLayer;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                if (extent) {\n                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n                }\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return this.extent_\n                ? this.getTileRangeForExtentAndZ(this.extent_, z)\n                : null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/VectorTile\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport { buffer as bufferExtent, getIntersection, intersects, } from '../extent.js';\nimport { createForProjection, createXYZ, extentFromProjection, } from '../tilegrid.js';\nimport { equals } from '../array.js';\nimport { fromKey, getKeyZXY } from '../tilecoord.js';\nimport { loadFeaturesXhr } from '../featureloader.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number} [zDirection=1] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {!Options} options Vector tile options.\n     */\n    function VectorTile(options) {\n        var _this = this;\n        var projection = options.projection || 'EPSG:3857';\n        var extent = options.extent || extentFromProjection(projection);\n        var tileGrid = options.tileGrid ||\n            createXYZ({\n                extent: extent,\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize || 512,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            opaque: false,\n            projection: projection,\n            state: options.state,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultLoadFunction,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX === undefined ? true : options.wrapX,\n            transition: options.transition,\n            zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default}\n         */\n        _this.format_ = options.format ? options.format : null;\n        /**\n         * @type {Object<string, import(\"./VectorTile\").default>}\n         */\n        _this.loadingTiles_ = {};\n        /**\n         * @private\n         * @type {TileCache}\n         */\n        _this.sourceTileCache = new TileCache(_this.tileCache.highWaterMark);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @protected\n         * @type {typeof import(\"../VectorTile.js\").default}\n         */\n        _this.tileClass = options.tileClass ? options.tileClass : Tile;\n        /**\n         * @private\n         * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGrids_ = {};\n        return _this;\n    }\n    /**\n     * Get features whose bounding box intersects the provided extent. Only features for cached\n     * tiles for the last rendered zoom level are available in the source. So this method is only\n     * suitable for requesting tiles for extents that are currently rendered.\n     *\n     * Features are returned in random tile order and as they are included in the tiles. This means\n     * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    VectorTile.prototype.getFeaturesInExtent = function (extent) {\n        var features = [];\n        var tileCache = this.tileCache;\n        if (tileCache.getCount() === 0) {\n            return features;\n        }\n        var z = fromKey(tileCache.peekFirstKey())[0];\n        var tileGrid = this.tileGrid;\n        tileCache.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n                return;\n            }\n            var sourceTiles = tile.getSourceTiles();\n            for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n                var sourceTile = sourceTiles[i];\n                var tileCoord = sourceTile.tileCoord;\n                if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n                    var tileFeatures = sourceTile.getFeatures();\n                    if (tileFeatures) {\n                        for (var j = 0, jj = tileFeatures.length; j < jj; ++j) {\n                            var candidate = tileFeatures[j];\n                            var geometry = candidate.getGeometry();\n                            if (intersects(extent, geometry.getExtent())) {\n                                features.push(candidate);\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return features;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorTile.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n     * @api\n     */\n    VectorTile.prototype.clear = function () {\n        this.tileCache.clear();\n        this.sourceTileCache.clear();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    VectorTile.prototype.expireCache = function (projection, usedTiles) {\n        _super.prototype.expireCache.call(this, projection, usedTiles);\n        this.sourceTileCache.expireCache({});\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection\").default} projection Projection.\n     * @param {VectorRenderTile} tile Vector image tile.\n     * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n     */\n    VectorTile.prototype.getSourceTiles = function (pixelRatio, projection, tile) {\n        var urlTileCoord = tile.wrappedTileCoord;\n        var tileGrid = this.getTileGridForProjection(projection);\n        var extent = tileGrid.getTileCoordExtent(urlTileCoord);\n        var z = urlTileCoord[0];\n        var resolution = tileGrid.getResolution(z);\n        // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n        bufferExtent(extent, -resolution, extent);\n        var sourceTileGrid = this.tileGrid;\n        var sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n            getIntersection(extent, sourceExtent, extent);\n        }\n        var sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n        var minZoom = sourceTileGrid.getMinZoom();\n        var previousSourceTiles = tile.sourceTiles;\n        var sourceTiles, covered, loadedZ;\n        if (previousSourceTiles &&\n            previousSourceTiles.length > 0 &&\n            previousSourceTiles[0].tileCoord[0] === sourceZ) {\n            sourceTiles = previousSourceTiles;\n            covered = true;\n            loadedZ = sourceZ;\n        }\n        else {\n            sourceTiles = [];\n            loadedZ = sourceZ + 1;\n            do {\n                --loadedZ;\n                covered = true;\n                sourceTileGrid.forEachTileCoord(extent, loadedZ, function (sourceTileCoord) {\n                    var tileUrl = this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n                    var sourceTile;\n                    if (tileUrl !== undefined) {\n                        if (this.sourceTileCache.containsKey(tileUrl)) {\n                            sourceTile = this.sourceTileCache.get(tileUrl);\n                            var state = sourceTile.getState();\n                            if (state === TileState.LOADED ||\n                                state === TileState.ERROR ||\n                                state === TileState.EMPTY) {\n                                sourceTiles.push(sourceTile);\n                                return;\n                            }\n                        }\n                        else if (loadedZ === sourceZ) {\n                            sourceTile = new this.tileClass(sourceTileCoord, TileState.IDLE, tileUrl, this.format_, this.tileLoadFunction);\n                            sourceTile.extent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n                            sourceTile.projection = projection;\n                            sourceTile.resolution = sourceTileGrid.getResolution(sourceTileCoord[0]);\n                            this.sourceTileCache.set(tileUrl, sourceTile);\n                            sourceTile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n                            sourceTile.load();\n                        }\n                    }\n                    covered =\n                        covered &&\n                            sourceTile &&\n                            sourceTile.getState() === TileState.LOADED;\n                    if (!sourceTile) {\n                        return;\n                    }\n                    if (sourceTile.getState() !== TileState.EMPTY &&\n                        tile.getState() === TileState.IDLE) {\n                        tile.loadingSourceTiles++;\n                        sourceTile.addEventListener(EventType.CHANGE, function listenChange() {\n                            var state = sourceTile.getState();\n                            var sourceTileKey = sourceTile.getKey();\n                            if (state === TileState.LOADED || state === TileState.ERROR) {\n                                if (state === TileState.LOADED) {\n                                    sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n                                    tile.loadingSourceTiles--;\n                                    delete tile.errorSourceTileKeys[sourceTileKey];\n                                }\n                                else if (state === TileState.ERROR) {\n                                    tile.errorSourceTileKeys[sourceTileKey] = true;\n                                }\n                                var errorTileCount = Object.keys(tile.errorSourceTileKeys)\n                                    .length;\n                                if (tile.loadingSourceTiles - errorTileCount === 0) {\n                                    tile.hifi = errorTileCount === 0;\n                                    tile.sourceZ = sourceZ;\n                                    tile.setState(TileState.LOADED);\n                                }\n                            }\n                        });\n                    }\n                }.bind(this));\n                if (!covered) {\n                    sourceTiles.length = 0;\n                }\n            } while (!covered && loadedZ > minZoom);\n        }\n        if (tile.getState() === TileState.IDLE) {\n            tile.setState(TileState.LOADING);\n        }\n        if (covered) {\n            tile.hifi = sourceZ === loadedZ;\n            tile.sourceZ = loadedZ;\n            if (tile.getState() < TileState.LOADED) {\n                tile.setState(TileState.LOADED);\n            }\n            else if (!previousSourceTiles ||\n                !equals(sourceTiles, previousSourceTiles)) {\n                tile.sourceTiles = sourceTiles;\n            }\n        }\n        return sourceTiles;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!VectorRenderTile} Tile.\n     */\n    VectorTile.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var coordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        var tile;\n        if (this.tileCache.containsKey(coordKey)) {\n            tile = this.tileCache.get(coordKey);\n            if (tile.key === key) {\n                return tile;\n            }\n        }\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var sourceExtent = this.getTileGrid().getExtent();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (urlTileCoord && sourceExtent) {\n            var tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n            // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n            bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n            if (!intersects(sourceExtent, tileExtent)) {\n                urlTileCoord = null;\n            }\n        }\n        var empty = true;\n        if (urlTileCoord !== null) {\n            var sourceTileGrid = this.tileGrid;\n            var resolution = tileGrid.getResolution(z);\n            var sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n            // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n            var extent = tileGrid.getTileCoordExtent(urlTileCoord);\n            bufferExtent(extent, -resolution, extent);\n            sourceTileGrid.forEachTileCoord(extent, sourceZ, function (sourceTileCoord) {\n                empty =\n                    empty &&\n                        !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            }.bind(this));\n        }\n        var newTile = new VectorRenderTile(tileCoord, empty ? TileState.EMPTY : TileState.IDLE, urlTileCoord, this.getSourceTiles.bind(this, pixelRatio, projection));\n        newTile.key = key;\n        if (tile) {\n            newTile.interimTile = tile;\n            newTile.refreshInterimChain();\n            this.tileCache.replace(coordKey, newTile);\n        }\n        else {\n            this.tileCache.set(coordKey, newTile);\n        }\n        return newTile;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    VectorTile.prototype.getTileGridForProjection = function (projection) {\n        var code = projection.getCode();\n        var tileGrid = this.tileGrids_[code];\n        if (!tileGrid) {\n            // A tile grid that matches the tile size of the source tile grid is more\n            // likely to have 1:1 relationships between source tiles and rendered tiles.\n            var sourceTileGrid = this.tileGrid;\n            tileGrid = createForProjection(projection, undefined, sourceTileGrid\n                ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom())\n                : undefined);\n            this.tileGrids_[code] = tileGrid;\n        }\n        return tileGrid;\n    };\n    /**\n     * Get the tile pixel ratio for this source.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    VectorTile.prototype.getTilePixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    VectorTile.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        return [\n            Math.round(tileSize[0] * pixelRatio),\n            Math.round(tileSize[1] * pixelRatio),\n        ];\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorTile.prototype.updateCacheSize = function (tileCount, projection) {\n        _super.prototype.updateCacheSize.call(this, tileCount * 2, projection);\n    };\n    return VectorTile;\n}(UrlTile));\nexport default VectorTile;\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n    tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n        loadFeaturesXhr(url, tile.getFormat(), extent, resolution, projection, tile.onLoad.bind(tile), tile.onError.bind(tile));\n    });\n}\n//# sourceMappingURL=VectorTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\nimport { asArray, isStringColor } from '../color.js';\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['get', 'attributeName']` fetches a feature attribute (it will be prefixed by `a_` in the shader)\n *     Note: those will be taken from the attributes provided to the renderer\n *   * `['var', 'varName']` fetches a value from the style variables, or 0 if undefined\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['zoom']` returns the current zoom level\n *   * `['resolution']` returns the current resolution\n *\n * * Math operators:\n *   * `['*', value1, value2]` multiplies `value1` by `value2`\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2]` adds `value1` and `value2`\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n */\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport var ValueTypes = {\n    NUMBER: 1,\n    STRING: 2,\n    COLOR: 4,\n    BOOLEAN: 8,\n    NUMBER_ARRAY: 16,\n    ANY: 31,\n    NONE: 0,\n};\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes=): string} toGlsl Returns a GLSL-compatible string\n * Note: takes in an optional type hint as 3rd parameter\n */\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport var Operators = {};\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @returns {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n    if (typeof value === 'number') {\n        return ValueTypes.NUMBER;\n    }\n    if (typeof value === 'boolean') {\n        return ValueTypes.BOOLEAN;\n    }\n    if (typeof value === 'string') {\n        if (isStringColor(value)) {\n            return ValueTypes.COLOR | ValueTypes.STRING;\n        }\n        return ValueTypes.STRING;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Unhandled value type: \" + JSON.stringify(value));\n    }\n    var valueArr = /** @type {Array<*>} */ (value);\n    var onlyNumbers = valueArr.every(function (v) {\n        return typeof v === 'number';\n    });\n    if (onlyNumbers) {\n        if (valueArr.length === 3 || valueArr.length === 4) {\n            return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n        }\n        return ValueTypes.NUMBER_ARRAY;\n    }\n    if (typeof valueArr[0] !== 'string') {\n        throw new Error(\"Expected an expression operator but received: \" + JSON.stringify(valueArr));\n    }\n    var operator = Operators[valueArr[0]];\n    if (operator === undefined) {\n        throw new Error(\"Unrecognized expression operator: \" + JSON.stringify(valueArr));\n    }\n    return operator.getReturnType(valueArr.slice(1));\n}\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n    return Math.log2(valueType) % 1 === 0;\n}\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<string>} variables List of variables used in the expression; contains **unprefixed names**\n * @property {Array<string>} attributes List of attributes used in the expression; contains **unprefixed names**\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n */\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @returns {string} The value as string.\n */\nexport function numberToGlsl(v) {\n    var s = v.toString();\n    return s.indexOf('.') === -1 ? s + '.0' : s;\n}\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @returns {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n    if (array.length < 2 || array.length > 4) {\n        throw new Error('`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.');\n    }\n    return \"vec\" + array.length + \"(\" + array.map(numberToGlsl).join(', ') + \")\";\n}\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @returns {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n    var array = asArray(color).slice();\n    if (array.length < 4) {\n        array.push(1);\n    }\n    return arrayToGlsl(array.map(function (c, i) {\n        return i < 3 ? c / 255 : c;\n    }));\n}\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @returns {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n    if (context.stringLiteralsMap[string] === undefined) {\n        context.stringLiteralsMap[string] = Object.keys(context.stringLiteralsMap).length;\n    }\n    return context.stringLiteralsMap[string];\n}\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @returns {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n    return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [typeHint] Hint for the expected final type (can be several types combined)\n * @returns {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, typeHint) {\n    // operator\n    if (Array.isArray(value) && typeof value[0] === 'string') {\n        var operator = Operators[value[0]];\n        if (operator === undefined) {\n            throw new Error(\"Unrecognized expression operator: \" + JSON.stringify(value));\n        }\n        return operator.toGlsl(context, value.slice(1), typeHint);\n    }\n    var valueType = getValueType(value);\n    if ((valueType & ValueTypes.NUMBER) > 0) {\n        return numberToGlsl(/** @type {number} */ (value));\n    }\n    else if ((valueType & ValueTypes.BOOLEAN) > 0) {\n        return value.toString();\n    }\n    else if ((valueType & ValueTypes.STRING) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.STRING)) {\n        return stringToGlsl(context, value.toString());\n    }\n    else if ((valueType & ValueTypes.COLOR) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.COLOR)) {\n        return colorToGlsl(/** @type {number[]|string} */ (value));\n    }\n    else if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n        return arrayToGlsl(/** @type {number[]} */ (value));\n    }\n}\nfunction assertNumber(value) {\n    if (!(getValueType(value) & ValueTypes.NUMBER)) {\n        throw new Error(\"A numeric value was expected, got \" + JSON.stringify(value) + \" instead\");\n    }\n}\nfunction assertNumbers(values) {\n    for (var i = 0; i < values.length; i++) {\n        assertNumber(values[i]);\n    }\n}\nfunction assertString(value) {\n    if (!(getValueType(value) & ValueTypes.STRING)) {\n        throw new Error(\"A string value was expected, got \" + JSON.stringify(value) + \" instead\");\n    }\n}\nfunction assertBoolean(value) {\n    if (!(getValueType(value) & ValueTypes.BOOLEAN)) {\n        throw new Error(\"A boolean value was expected, got \" + JSON.stringify(value) + \" instead\");\n    }\n}\nfunction assertArgsCount(args, count) {\n    if (args.length !== count) {\n        throw new Error(\"Exactly \" + count + \" arguments were expected, got \" + args.length + \" instead\");\n    }\n}\nfunction assertArgsMinCount(args, count) {\n    if (args.length < count) {\n        throw new Error(\"At least \" + count + \" arguments were expected, got \" + args.length + \" instead\");\n    }\n}\nfunction assertArgsMaxCount(args, count) {\n    if (args.length > count) {\n        throw new Error(\"At most \" + count + \" arguments were expected, got \" + args.length + \" instead\");\n    }\n}\nfunction assertArgsEven(args) {\n    if (args.length % 2 !== 0) {\n        throw new Error(\"An even amount of arguments was expected, got \" + args + \" instead\");\n    }\n}\nfunction assertArgsOdd(args) {\n    if (args.length % 2 === 0) {\n        throw new Error(\"An odd amount of arguments was expected, got \" + args + \" instead\");\n    }\n}\nfunction assertUniqueInferredType(args, types) {\n    if (!isTypeUnique(types)) {\n        throw new Error(\"Could not infer only one type from the following expression: \" + JSON.stringify(args));\n    }\n}\nOperators['get'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.attributes.indexOf(value) === -1) {\n            context.attributes.push(value);\n        }\n        var prefix = context.inFragmentShader ? 'v_' : 'a_';\n        return prefix + value;\n    },\n};\nOperators['var'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.variables.indexOf(value) === -1) {\n            context.variables.push(value);\n        }\n        return \"u_\" + value;\n    },\n};\nOperators['time'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_time';\n    },\n};\nOperators['zoom'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_zoom';\n    },\n};\nOperators['resolution'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_resolution';\n    },\n};\nOperators['*'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" * \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['/'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" / \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['+'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" + \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['-'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" - \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['clamp'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        return \"clamp(\" + expressionToGlsl(context, args[0]) + \", \" + min + \", \" + max + \")\";\n    },\n};\nOperators['%'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"mod(\" + expressionToGlsl(context, args[0]) + \", \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['^'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"pow(\" + expressionToGlsl(context, args[0]) + \", \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['>'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" > \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['>='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" >= \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['<'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" < \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['<='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" <= \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nfunction getEqualOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsCount(args, 2);\n            // find common type\n            var type = ValueTypes.ANY;\n            for (var i = 0; i < args.length; i++) {\n                type = type & getValueType(args[i]);\n            }\n            if (type === 0) {\n                throw new Error(\"All arguments should be of compatible type, got \" + JSON.stringify(args) + \" instead\");\n            }\n            return \"(\" + expressionToGlsl(context, args[0], type) + \" \" + operator + \" \" + expressionToGlsl(context, args[1], type) + \")\";\n        },\n    };\n}\nOperators['=='] = getEqualOperator('==');\nOperators['!='] = getEqualOperator('!=');\nOperators['!'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertBoolean(args[0]);\n        return \"(!\" + expressionToGlsl(context, args[0]) + \")\";\n    },\n};\nfunction getDecisionOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsMinCount(args, 2);\n            for (var i = 0; i < args.length; i++) {\n                assertBoolean(args[i]);\n            }\n            var result = '';\n            result = args\n                .map(function (arg) { return expressionToGlsl(context, arg); })\n                .join(\" \" + operator + \" \");\n            result = \"(\" + result + \")\";\n            return result;\n        },\n    };\n}\nOperators['all'] = getDecisionOperator('&&');\nOperators['any'] = getDecisionOperator('||');\nOperators['between'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        var value = expressionToGlsl(context, args[0]);\n        return \"(\" + value + \" >= \" + min + \" && \" + value + \" <= \" + max + \")\";\n    },\n};\nOperators['array'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER_ARRAY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 2);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var parsedArgs = args.map(function (val) {\n            return expressionToGlsl(context, val, ValueTypes.NUMBER);\n        });\n        return \"vec\" + args.length + \"(\" + parsedArgs.join(', ') + \")\";\n    },\n};\nOperators['color'] = {\n    getReturnType: function (args) {\n        return ValueTypes.COLOR;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 3);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var array = /** @type {number[]} */ (args);\n        if (args.length === 3) {\n            array.push(1);\n        }\n        var parsedArgs = args.map(function (val, i) {\n            return (expressionToGlsl(context, val, ValueTypes.NUMBER) +\n                (i < 3 ? ' / 255.0' : ''));\n        });\n        return \"vec\" + args.length + \"(\" + parsedArgs.join(', ') + \")\";\n    },\n};\nOperators['interpolate'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.COLOR | ValueTypes.NUMBER;\n        for (var i = 3; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 6);\n        // validate interpolation type\n        var type = args[0];\n        var interpolation;\n        switch (type[0]) {\n            case 'linear':\n                interpolation = 1;\n                break;\n            case 'exponential':\n                interpolation = type[1];\n                break;\n            default:\n                interpolation = null;\n        }\n        if (!interpolation) {\n            throw new Error(\"Invalid interpolation type for \\\"interpolate\\\" operator, received: \" + JSON.stringify(type));\n        }\n        // compute input/output types\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['interpolate'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[1]);\n        var result = null;\n        for (var i = 2; i < args.length - 2; i += 2) {\n            var stop1 = expressionToGlsl(context, args[i]);\n            var output1 = expressionToGlsl(context, args[i + 1], outputType);\n            var stop2 = expressionToGlsl(context, args[i + 2]);\n            var output2 = expressionToGlsl(context, args[i + 3], outputType);\n            result = \"mix(\" + (result || output1) + \", \" + output2 + \", pow(clamp((\" + input + \" - \" + stop1 + \") / (\" + stop2 + \" - \" + stop1 + \"), 0.0, 1.0), \" + numberToGlsl(interpolation) + \"))\";\n        }\n        return result;\n    },\n};\nOperators['match'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 2; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 4);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['match'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[0]);\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 1; i -= 2) {\n            var match = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\" + input + \" == \" + match + \" ? \" + output + \" : \" + (result || fallback) + \")\";\n        }\n        return result;\n    },\n};\nOperators['case'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 1; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsOdd(args);\n        assertArgsMinCount(args, 3);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['case'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        for (var i = 0; i < args.length - 1; i += 2) {\n            assertBoolean(args[i]);\n        }\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 0; i -= 2) {\n            var condition = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\" + condition + \" ? \" + output + \" : \" + (result || fallback) + \")\";\n        }\n        return result;\n    },\n};\n//# sourceMappingURL=expressions.js.map","/**\n * Classes and utilities for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport { ValueTypes, expressionToGlsl, getStringNumberEquivalent, } from '../style/expressions.js';\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSizeExpression('...')\n *   .outputSymbolFragmentShader();\n * ```\n */\nvar ShaderBuilder = /** @class */ (function () {\n    function ShaderBuilder() {\n        /**\n         * Uniforms; these will be declared in the header (should include the type).\n         * @type {Array<string>}\n         * @private\n         */\n        this.uniforms = [];\n        /**\n         * Attributes; these will be declared in the header (should include the type).\n         * @type {Array<string>}\n         * @private\n         */\n        this.attributes = [];\n        /**\n         * Varyings with a name, a type and an expression.\n         * @type {Array<VaryingDescription>}\n         * @private\n         */\n        this.varyings = [];\n        /**\n         * @type {string}\n         * @private\n         */\n        this.sizeExpression = 'vec2(1.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.rotationExpression = '0.0';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.offsetExpression = 'vec2(0.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.colorExpression = 'vec4(1.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.texCoordExpression = 'vec4(0.0, 0.0, 1.0, 1.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.discardExpression = 'false';\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.rotateWithView = false;\n    }\n    /**\n     * Adds a uniform accessible in both fragment and vertex shaders.\n     * The given name should include a type, such as `sampler2D u_texture`.\n     * @param {string} name Uniform name\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.addUniform = function (name) {\n        this.uniforms.push(name);\n        return this;\n    };\n    /**\n     * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n     * The given name should include a type, such as `vec2 a_position`.\n     * @param {string} name Attribute name\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.addAttribute = function (name) {\n        this.attributes.push(name);\n        return this;\n    };\n    /**\n     * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n     * The type and expression of the varying have to be specified separately.\n     * @param {string} name Varying name\n     * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n     * @param {string} expression Expression used to assign a value to the varying.\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.addVarying = function (name, type, expression) {\n        this.varyings.push({\n            name: name,\n            type: type,\n            expression: expression,\n        });\n        return this;\n    };\n    /**\n     * Sets an expression to compute the size of the shape.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `vec2` value.\n     * @param {string} expression Size expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setSizeExpression = function (expression) {\n        this.sizeExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the rotation of the shape.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `float` value in radians.\n     * @param {string} expression Size expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setRotationExpression = function (expression) {\n        this.rotationExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the offset of the symbol from the point center.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `vec2` value.\n     * Note: will only be used for point geometry shaders.\n     * @param {string} expression Offset expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setSymbolOffsetExpression = function (expression) {\n        this.offsetExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the color of the shape.\n     * This expression can use all the uniforms, varyings and attributes available\n     * in the fragment shader, and should evaluate to a `vec4` value.\n     * @param {string} expression Color expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setColorExpression = function (expression) {\n        this.colorExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the texture coordinates of the vertices.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `vec4` value.\n     * @param {string} expression Texture coordinate expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setTextureCoordinateExpression = function (expression) {\n        this.texCoordExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to determine whether a fragment (pixel) should be discarded,\n     * i.e. not drawn at all.\n     * This expression can use all the uniforms, varyings and attributes available\n     * in the fragment shader, and should evaluate to a `bool` value (it will be\n     * used in an `if` statement)\n     * @param {string} expression Fragment discard expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setFragmentDiscardExpression = function (expression) {\n        this.discardExpression = expression;\n        return this;\n    };\n    /**\n     * Sets whether the symbols should rotate with the view or stay aligned with the map.\n     * Note: will only be used for point geometry shaders.\n     * @param {boolean} rotateWithView Rotate with view\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setSymbolRotateWithView = function (rotateWithView) {\n        this.rotateWithView = rotateWithView;\n        return this;\n    };\n    /**\n     * @returns {string} Previously set size expression\n     */\n    ShaderBuilder.prototype.getSizeExpression = function () {\n        return this.sizeExpression;\n    };\n    /**\n     * @returns {string} Previously set symbol offset expression\n     */\n    ShaderBuilder.prototype.getOffsetExpression = function () {\n        return this.offsetExpression;\n    };\n    /**\n     * @returns {string} Previously set color expression\n     */\n    ShaderBuilder.prototype.getColorExpression = function () {\n        return this.colorExpression;\n    };\n    /**\n     * @returns {string} Previously set texture coordinate expression\n     */\n    ShaderBuilder.prototype.getTextureCoordinateExpression = function () {\n        return this.texCoordExpression;\n    };\n    /**\n     * @returns {string} Previously set fragment discard expression\n     */\n    ShaderBuilder.prototype.getFragmentDiscardExpression = function () {\n        return this.discardExpression;\n    };\n    /**\n     * Generates a symbol vertex shader from the builder parameters,\n     * intended to be used on point geometries.\n     *\n     * Three uniforms are hardcoded in all shaders: `u_projectionMatrix`, `u_offsetScaleMatrix`,\n     * `u_offsetRotateMatrix`, `u_time`.\n     *\n     * The following attributes are hardcoded and expected to be present in the vertex buffers:\n     * `vec2 a_position`, `float a_index` (being the index of the vertex in the quad, 0 to 3).\n     *\n     * The following varyings are hardcoded and gives the coordinate of the pixel both in the quad and on the texture:\n     * `vec2 v_quadCoord`, `vec2 v_texCoord`\n     *\n     * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n     * (namely, hit color with encoded feature id).\n     * @returns {string} The full shader as a string.\n     */\n    ShaderBuilder.prototype.getSymbolVertexShader = function (forHitDetection) {\n        var offsetMatrix = this.rotateWithView\n            ? 'u_offsetScaleMatrix * u_offsetRotateMatrix'\n            : 'u_offsetScaleMatrix';\n        var attributes = this.attributes;\n        var varyings = this.varyings;\n        if (forHitDetection) {\n            attributes = attributes.concat('vec4 a_hitColor');\n            varyings = varyings.concat({\n                name: 'v_hitColor',\n                type: 'vec4',\n                expression: 'a_hitColor',\n            });\n        }\n        return \"precision mediump float;\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_time;\\nuniform float u_zoom;\\nuniform float u_resolution;\\n\" + this.uniforms\n            .map(function (uniform) {\n            return 'uniform ' + uniform + ';';\n        })\n            .join('\\n') + \"\\nattribute vec2 a_position;\\nattribute float a_index;\\n\" + attributes\n            .map(function (attribute) {\n            return 'attribute ' + attribute + ';';\n        })\n            .join('\\n') + \"\\nvarying vec2 v_texCoord;\\nvarying vec2 v_quadCoord;\\n\" + varyings\n            .map(function (varying) {\n            return 'varying ' + varying.type + ' ' + varying.name + ';';\n        })\n            .join('\\n') + \"\\nvoid main(void) {\\n  mat4 offsetMatrix = \" + offsetMatrix + \";\\n  vec2 halfSize = \" + this.sizeExpression + \" * 0.5;\\n  vec2 offset = \" + this.offsetExpression + \";\\n  float angle = \" + this.rotationExpression + \";\\n  float offsetX;\\n  float offsetY;\\n  if (a_index == 0.0) {\\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\\n  } else if (a_index == 1.0) {\\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\\n  } else if (a_index == 2.0) {\\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\\n  } else {\\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\\n  }\\n  vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  vec4 texCoord = \" + this.texCoordExpression + \";\\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\\n  v_texCoord = vec2(u, v);\\n  u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n  v = a_index == 2.0 || a_index == 3.0 ? 0.0 : 1.0;\\n  v_quadCoord = vec2(u, v);\\n\" + varyings\n            .map(function (varying) {\n            return '  ' + varying.name + ' = ' + varying.expression + ';';\n        })\n            .join('\\n') + \"\\n}\";\n    };\n    /**\n     * Generates a symbol fragment shader from the builder parameters,\n     * intended to be used on point geometries.\n     *\n     * Expects the following varyings to be transmitted by the vertex shader:\n     * `vec2 v_quadCoord`, `vec2 v_texCoord`\n     *\n     * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n     * (namely, hit color with encoded feature id).\n     * @returns {string} The full shader as a string.\n     */\n    ShaderBuilder.prototype.getSymbolFragmentShader = function (forHitDetection) {\n        var hitDetectionBypass = forHitDetection\n            ? '  if (gl_FragColor.a < 0.1) { discard; } gl_FragColor = v_hitColor;'\n            : '';\n        var varyings = this.varyings;\n        if (forHitDetection) {\n            varyings = varyings.concat({\n                name: 'v_hitColor',\n                type: 'vec4',\n                expression: 'a_hitColor',\n            });\n        }\n        return \"precision mediump float;\\nuniform float u_time;\\nuniform float u_zoom;\\nuniform float u_resolution;\\n\" + this.uniforms\n            .map(function (uniform) {\n            return 'uniform ' + uniform + ';';\n        })\n            .join('\\n') + \"\\nvarying vec2 v_texCoord;\\nvarying vec2 v_quadCoord;\\n\" + varyings\n            .map(function (varying) {\n            return 'varying ' + varying.type + ' ' + varying.name + ';';\n        })\n            .join('\\n') + \"\\nvoid main(void) {\\n  if (\" + this.discardExpression + \") { discard; }\\n  gl_FragColor = \" + this.colorExpression + \";\\n  gl_FragColor.rgb *= gl_FragColor.a;\\n\" + hitDetectionBypass + \"\\n}\";\n    };\n    return ShaderBuilder;\n}());\nexport { ShaderBuilder };\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {Object.<string,import(\"./Helper\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../renderer/webgl/PointsLayer\").CustomAttribute>} attributes Attribute descriptions.\n */\n/**\n * Parses a {@link import(\"../style/LiteralStyle\").LiteralStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../style/LiteralStyle\").LiteralStyle} style Literal style.\n * @returns {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style) {\n    var symbStyle = style.symbol;\n    var size = symbStyle.size !== undefined ? symbStyle.size : 1;\n    var color = symbStyle.color || 'white';\n    var texCoord = symbStyle.textureCoord || [0, 0, 1, 1];\n    var offset = symbStyle.offset || [0, 0];\n    var opacity = symbStyle.opacity !== undefined ? symbStyle.opacity : 1;\n    var rotation = symbStyle.rotation !== undefined ? symbStyle.rotation : 0;\n    /**\n     * @type {import(\"../style/expressions.js\").ParsingContext}\n     */\n    var vertContext = {\n        inFragmentShader: false,\n        variables: [],\n        attributes: [],\n        stringLiteralsMap: {},\n    };\n    var parsedSize = expressionToGlsl(vertContext, size, ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER);\n    var parsedOffset = expressionToGlsl(vertContext, offset, ValueTypes.NUMBER_ARRAY);\n    var parsedTexCoord = expressionToGlsl(vertContext, texCoord, ValueTypes.NUMBER_ARRAY);\n    var parsedRotation = expressionToGlsl(vertContext, rotation, ValueTypes.NUMBER);\n    /**\n     * @type {import(\"../style/expressions.js\").ParsingContext}\n     */\n    var fragContext = {\n        inFragmentShader: true,\n        variables: vertContext.variables,\n        attributes: [],\n        stringLiteralsMap: vertContext.stringLiteralsMap,\n    };\n    var parsedColor = expressionToGlsl(fragContext, color, ValueTypes.COLOR);\n    var parsedOpacity = expressionToGlsl(fragContext, opacity, ValueTypes.NUMBER);\n    var opacityFilter = '1.0';\n    var visibleSize = \"vec2(\" + expressionToGlsl(fragContext, size, ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER) + \").x\";\n    switch (symbStyle.symbolType) {\n        case 'square':\n            break;\n        case 'image':\n            break;\n        // taken from https://thebookofshaders.com/07/\n        case 'circle':\n            opacityFilter = \"(1.0-smoothstep(1.-4./\" + visibleSize + \",1.,dot(v_quadCoord-.5,v_quadCoord-.5)*4.))\";\n            break;\n        case 'triangle':\n            var st = '(v_quadCoord*2.-1.)';\n            var a = \"(atan(\" + st + \".x,\" + st + \".y))\";\n            opacityFilter = \"(1.0-smoothstep(.5-3./\" + visibleSize + \",.5,cos(floor(.5+\" + a + \"/2.094395102)*2.094395102-\" + a + \")*length(\" + st + \")))\";\n            break;\n        default:\n            throw new Error('Unexpected symbol type: ' + symbStyle.symbolType);\n    }\n    var builder = new ShaderBuilder()\n        .setSizeExpression(\"vec2(\" + parsedSize + \")\")\n        .setRotationExpression(parsedRotation)\n        .setSymbolOffsetExpression(parsedOffset)\n        .setTextureCoordinateExpression(parsedTexCoord)\n        .setSymbolRotateWithView(!!symbStyle.rotateWithView)\n        .setColorExpression(\"vec4(\" + parsedColor + \".rgb, \" + parsedColor + \".a * \" + parsedOpacity + \" * \" + opacityFilter + \")\");\n    if (style.filter) {\n        var parsedFilter = expressionToGlsl(fragContext, style.filter, ValueTypes.BOOLEAN);\n        builder.setFragmentDiscardExpression(\"!\" + parsedFilter);\n    }\n    /** @type {Object.<string,import(\"../webgl/Helper\").UniformValue>} */\n    var uniforms = {};\n    // define one uniform per variable\n    fragContext.variables.forEach(function (varName) {\n        builder.addUniform(\"float u_\" + varName);\n        uniforms[\"u_\" + varName] = function () {\n            if (!style.variables || style.variables[varName] === undefined) {\n                throw new Error(\"The following variable is missing from the style: \" + varName);\n            }\n            var value = style.variables[varName];\n            if (typeof value === 'string') {\n                value = getStringNumberEquivalent(vertContext, value);\n            }\n            return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n        };\n    });\n    if (symbStyle.symbolType === 'image' && symbStyle.src) {\n        var texture = new Image();\n        texture.src = symbStyle.src;\n        builder\n            .addUniform('sampler2D u_texture')\n            .setColorExpression(builder.getColorExpression() + ' * texture2D(u_texture, v_texCoord)');\n        uniforms['u_texture'] = texture;\n    }\n    // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n    // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n    fragContext.attributes.forEach(function (attrName) {\n        if (vertContext.attributes.indexOf(attrName) === -1) {\n            vertContext.attributes.push(attrName);\n        }\n        builder.addVarying(\"v_\" + attrName, 'float', \"a_\" + attrName);\n    });\n    // for each feature attribute used in the vertex shader, define an attribute in the vertex shader.\n    vertContext.attributes.forEach(function (attrName) {\n        builder.addAttribute(\"float a_\" + attrName);\n    });\n    return {\n        builder: builder,\n        attributes: vertContext.attributes.map(function (attributeName) {\n            return {\n                name: attributeName,\n                callback: function (feature, props) {\n                    var value = props[attributeName];\n                    if (typeof value === 'string') {\n                        value = getStringNumberEquivalent(vertContext, value);\n                    }\n                    return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n                },\n            };\n        }),\n        uniforms: uniforms,\n    };\n}\n//# sourceMappingURL=ShaderBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/WebGLPoints\n */\nimport Layer from './Layer.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport { assign } from '../obj.js';\nimport { parseLiteralStyle } from '../webgl/ShaderBuilder.js';\n/**\n * @typedef {Object} Options\n * @property {import('../style/LiteralStyle.js').LiteralStyle} style Literal style to apply to the layer features.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n */\n/**\n * @classdesc\n * Layer optimized for rendering large point datasets. Takes a `style` property which\n * is a serializable JSON object describing how the layer should be rendered.\n *\n * Here are a few samples of literal style objects:\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'circle',\n *     size: 8,\n *     color: '#33AAFF',\n *     opacity: 0.9\n *   }\n * }\n * ```\n *\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'image',\n *     offset: [0, 12],\n *     size: [4, 8],\n *     src: '../static/exclamation-mark.png'\n *   }\n * }\n * ```\n *\n * **Important: a `WebGLPoints` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar WebGLPointsLayer = /** @class */ (function (_super) {\n    __extends(WebGLPointsLayer, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function WebGLPointsLayer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {import('../webgl/ShaderBuilder.js').StyleParseResult}\n         */\n        _this.parseResult_ = parseLiteralStyle(options.style);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hitDetectionDisabled_ = !!options.disableHitDetection;\n        return _this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {WebGLPointsLayerRenderer} A layer renderer.\n     */\n    WebGLPointsLayer.prototype.createRenderer = function () {\n        return new WebGLPointsLayerRenderer(this, {\n            className: this.getClassName(),\n            vertexShader: this.parseResult_.builder.getSymbolVertexShader(),\n            fragmentShader: this.parseResult_.builder.getSymbolFragmentShader(),\n            hitVertexShader: !this.hitDetectionDisabled_ &&\n                this.parseResult_.builder.getSymbolVertexShader(true),\n            hitFragmentShader: !this.hitDetectionDisabled_ &&\n                this.parseResult_.builder.getSymbolFragmentShader(true),\n            uniforms: this.parseResult_.uniforms,\n            attributes: this.parseResult_.attributes,\n        });\n    };\n    /**\n     * Clean up.\n     */\n    WebGLPointsLayer.prototype.disposeInternal = function () {\n        this.getRenderer().disposeInternal();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return WebGLPointsLayer;\n}(Layer));\nexport default WebGLPointsLayer;\n//# sourceMappingURL=WebGLPoints.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport { jsonp as requestJSONP } from '../net.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            imageSmoothing: options.imageSmoothing,\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' +\n            _this.apiKey_ +\n            '&c=' +\n            _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight\n            ? resource.imageWidth / scale\n            : [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize,\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var z = tileGrid.getZForResolution(viewState.resolution, this.zDirection);\n                var tileCoord = tileGrid.getTileCoordForCoordAndZ(viewState.center, z);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin &&\n                            zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src =\n        url +\n            (url.indexOf('?') == -1 ? '?' : '&') +\n            (opt_callbackParam || 'callback') +\n            '=' +\n            key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceResolution, render as renderReprojected, } from '../reproj.js';\nimport { getCenter, getHeight, getIntersection, getWidth } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction, opt_contextOptions) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @return {HTMLCanvasElement} Image.\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [\n                {\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage(),\n                },\n            ], 0, undefined, this.contextOptions_);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED ||\n                        sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(\n        /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { abstract } from '../util.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport { linearFindNearest } from '../array.js';\n/**\n * @enum {string}\n */\nexport var ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ =\n            options.resolutions !== undefined ? options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    ImageSource.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this), this.contextOptions_);\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/WMSServerType\n */\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n    /**\n     * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n     * @api\n     */\n    CARMENTA_SERVER: 'carmentaserver',\n    /**\n     * HiDPI support for [GeoServer](https://geoserver.org/)\n     * @api\n     */\n    GEOSERVER: 'geoserver',\n    /**\n     * HiDPI support for [MapServer](https://mapserver.org/)\n     * @api\n     */\n    MAPSERVER: 'mapserver',\n    /**\n     * HiDPI support for [QGIS](https://qgis.org/)\n     * @api\n     */\n    QGIS: 'qgis',\n};\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { appendParams } from '../uri.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { compareVersions } from '../string.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth, } from '../extent.js';\nimport { get as getProjection, transform } from '../proj.js';\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */ (function (_super) {\n    __extends(ImageWMS, _super);\n    /**\n     * @param {Options=} [opt_options] ImageWMS options.\n     */\n    function ImageWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            imageSmoothing: options.imageSmoothing,\n            projection: options.projection,\n            resolutions: options.resolutions,\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ =\n            options.imageLoadFunction !== undefined\n                ? options.imageLoadFunction\n                : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        _this.updateV13_();\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    ImageWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS'],\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Return the GetLegendGraphic URL, optionally optimized for the passed\n     * resolution and possibly including any passed specific parameters. Returns\n     * `undefined` if the GetLegendGraphic URL cannot be constructed.\n     *\n     * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n     *     will not be calculated and included in URL.\n     * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n     *     request is generated for this wms layer, else it will try to use the\n     *     configured wms layer. Default `FORMAT` is `image/png`.\n     *     `VERSION` should not be specified here.\n     * @return {string|undefined} GetLegendGraphic URL.\n     * @api\n     */\n    ImageWMS.prototype.getLegendUrl = function (resolution, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetLegendGraphic',\n            'FORMAT': 'image/png',\n        };\n        if (params === undefined || params['LAYER'] === undefined) {\n            var layers = this.params_.LAYERS;\n            var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n            if (!isSingleLayer) {\n                return undefined;\n            }\n            baseParams['LAYER'] = layers;\n        }\n        if (resolution !== undefined) {\n            var mpu = this.getProjection()\n                ? this.getProjection().getMetersPerUnit()\n                : 1;\n            var pixelSize = 0.00028;\n            baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n        }\n        assign(baseParams, params);\n        return appendParams(/** @type {string} */ (this.url_), baseParams);\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../Image.js\").default} Single image.\n     */\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var imageResolution = resolution / pixelRatio;\n        var center = getCenter(extent);\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [\n            viewWidth,\n            viewHeight,\n        ]);\n        var requestWidth = Math.ceil((this.ratio_ * getWidth(extent)) / imageResolution);\n        var requestHeight = Math.ceil((this.ratio_ * getHeight(extent)) / imageResolution);\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [\n            requestWidth,\n            requestHeight,\n        ]);\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), viewExtent)) {\n            return image;\n        }\n        var params = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n        };\n        assign(params, this.params_);\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageWMS.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 8); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        params['WIDTH'] = size[0];\n        params['HEIGHT'] = size[1];\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\n        }\n        else {\n            bbox = extent;\n        }\n        params['BBOX'] = bbox.join(',');\n        return appendParams(/** @type {string} */ (this.url_), params);\n    };\n    /**\n     * Return the URL used for this WMS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageWMS.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageWMS.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.image_ = null;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    ImageWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return ImageWMS;\n}(ImageSource));\nexport default ImageWMS;\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            attributionsCollapsible: false,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/TileWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport { appendParams } from '../uri.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { buffer, createEmpty } from '../extent.js';\nimport { buffer as bufferSize, scale as scaleSize, toSize } from '../size.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { compareVersions } from '../string.js';\nimport { get as getProjection, transform, transformExtent } from '../proj.js';\nimport { modulo } from '../math.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /** @class */ (function (_super) {\n    __extends(TileWMS, _super);\n    /**\n     * @param {Options=} [opt_options] Tile WMS options.\n     */\n    function TileWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : /** @type {Options} */ ({});\n        var params = options.params || {};\n        var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: !transparent,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = params;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.updateV13_();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    TileWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projectionObj);\n        }\n        var z = tileGrid.getZForResolution(resolution, this.zDirection);\n        var tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n            tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS'],\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n        var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Return the GetLegendGraphic URL, optionally optimized for the passed\n     * resolution and possibly including any passed specific parameters. Returns\n     * `undefined` if the GetLegendGraphic URL cannot be constructed.\n     *\n     * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n     *     will not be calculated and included in URL.\n     * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n     *     request is generated for this wms layer, else it will try to use the\n     *     configured wms layer. Default `FORMAT` is `image/png`.\n     *     `VERSION` should not be specified here.\n     * @return {string|undefined} GetLegendGraphic URL.\n     * @api\n     */\n    TileWMS.prototype.getLegendUrl = function (resolution, params) {\n        if (this.urls[0] === undefined) {\n            return undefined;\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetLegendGraphic',\n            'FORMAT': 'image/png',\n        };\n        if (params === undefined || params['LAYER'] === undefined) {\n            var layers = this.params_.LAYERS;\n            var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n            if (!isSingleLayer) {\n                return undefined;\n            }\n            baseParams['LAYER'] = layers;\n        }\n        if (resolution !== undefined) {\n            var mpu = this.getProjection()\n                ? this.getProjection().getMetersPerUnit()\n                : 1;\n            var pixelSize = 0.00028;\n            baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n        }\n        assign(baseParams, params);\n        return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileWMS.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileWMS.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        params['WIDTH'] = tileSize[0];\n        params['HEIGHT'] = tileSize[1];\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 52); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox = tileExtent;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            var tmp = void 0;\n            tmp = tileExtent[0];\n            bbox[0] = tileExtent[1];\n            bbox[1] = tmp;\n            tmp = tileExtent[2];\n            bbox[2] = tileExtent[3];\n            bbox[3] = tmp;\n        }\n        params['BBOX'] = bbox.join(',');\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        return appendParams(url, params);\n    };\n    /**\n     * Get the tile pixel ratio for this source.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileWMS.prototype.getTilePixelRatio = function (pixelRatio) {\n        return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileWMS.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.setKey(this.getKeyForParams_());\n    };\n    /**\n     * @private\n     */\n    TileWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n     * @param {number} pixelRatio The pixel ratio\n     * @param {import(\"../proj/Projection.js\").default} projection The projection\n     * @return {string|undefined} The tile URL\n     * @override\n     */\n    TileWMS.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projection);\n        }\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (pixelRatio != 1) {\n            tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n        };\n        assign(baseParams, this.params_);\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n    };\n    return TileWMS;\n}(TileImage));\nexport default TileWMS;\n//# sourceMappingURL=TileWMS.js.map","export {Collection, Map, View, Feature } from 'ol';\n\n\nimport { unByKey } from 'ol/Observable';\nimport { Observable } from 'ol';\nObservable.unByKey = unByKey;\n\nexport { Observable };\n\nimport { Control, Zoom, Attribution, ScaleLine} from 'ol/control';\nimport LayerSwitcher from 'ol-layerswitcher';\nlet control = { Control, Zoom, Attribution, ScaleLine, LayerSwitcher };\nexport { control };\n\nimport * as interaction from 'ol/interaction';\nexport { interaction };\n\nimport * as sphere from 'ol/sphere';\nexport { sphere };\n\nimport { GeoJSON, KML, MVT } from 'ol/format';\nlet format = {\n\tGeoJSON: GeoJSON,\n\tKML: KML,\n\tMVT: MVT,\n};\nexport { format };\n\nimport { Tile, Group, Vector as VectorLayer, VectorTile, WebGLPoints, Heatmap, Image } from 'ol/layer';\nlet layer = {\n\tGroup: Group,\n\tTile: Tile,\n\tVector: VectorLayer,\n\tVectorTile: VectorTile,\n\tWebGLPoints: WebGLPoints,\n\tHeatmap: Heatmap,\n\tImage: Image,\n};\nexport { layer };\n\nimport { toLonLat, fromLonLat } from 'ol/proj';\nlet proj = {\n\ttoLonLat: toLonLat,\n\tfromLonLat: fromLonLat,\n};\nexport { proj };\n\nimport { LineString, Point, MultiPoint } from 'ol/geom';\nlet geom = {\n\tLineString: LineString,\n\tPoint: Point,\n\tMultiPoint: MultiPoint,\n};\nexport { geom };\n\n//import $Style from 'ol/style/Style';\n//\nimport { Style, Text, Stroke, Fill, Circle, Icon } from 'ol/style';\nlet style = {\n\tIcon: Icon,\n\tStyle: Style,\n\tText: Text,\n\tStroke: Stroke,\n\tFill: Fill,\n\tCircle: Circle,\n};\nexport { style };\n\nimport { OSM, XYZ, TileWMS, BingMaps, Vector as VectorSource, VectorTile as VTS, ImageWMS} from 'ol/source';\nlet source = {\n\tOSM: OSM,\n\tXYZ: XYZ,\n\tTileWMS: TileWMS,\n\tBingMaps: BingMaps,\n\tVector: VectorSource,\n\tVectorTile: VTS,\n\tImageWMS: ImageWMS,\n};\nexport {source};\n\n"],"names":["abstract","Error","uidCounter_","getUid","obj","ol_uid","String","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","this","constructor","create","AssertionError","_super","code","_this","message","split","name","BaseEvent","type","propagationStopped","target","preventDefault","stopPropagation","Disposable","disposed","dispose","disposeInternal","numberSafeCompareFunction","a","includes","arr","indexOf","linearFindNearest","direction","n","length","i","reverseSubArray","begin","end","tmp","extend","data","extension","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","assign","var_sources","TypeError","output","ii","arguments","source","key","clear","object","property","getValues","values","push","isEmpty","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","Event","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","listen","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","listenOnce","unlistenByKey","Observable","revision_","changed","EventType","getRevision","on","len","once","ol_key","un","unByKey","EventTarget","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","getChangeEventType","ObjectEventType","set","opt_silent","applyProperties","unset","changeEventTypeCache","Property","CollectionEvent","opt_element","opt_index","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","array","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","j","opt_except","assert","assertion","errorCode","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","styles_1","createStyleFunction","setId","id","Units","METERS_PER_UNIT","Math","PI","tmp_","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","e","coordinate","x","y","scale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","mat","det","toString","join","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","slice","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","Corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","applyTransform","transformFn","opt_stops","width","height","xs","ys","l","_boundingExtentXYs","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","clamp","cosh","exp","log2","log","LOG2E","squaredSegmentDistance","t","squaredDistance","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","r","lerp","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","cache","transforms","add","destination","sourceCode","destinationCode","getDistance","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","getLengthInternal","getAreaInternal","projection","getType","GeometryType","coords","jj","getCoordinates","geometries","getGeometries","abs","distance","bearing","lon1","dByR","lat","asin","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","closestOnSegment","segment","start","along","coordinate1","coordinate2","rotate","cosAngle","sinAngle","coord1","coord2","squaredDistanceToSegment","wrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","getWorldsAway","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","replace","opt_units","pointResolution","getter","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","projections2","forwardTransform","inverseTransform","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","transform2D","opt_dest","dest","anchor","anchorX","anchorY","deltaX","deltaY","k","translate","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmpTransform","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","nextArgs","arrayEquals","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","opt_sy","opt_anchor","simplify","tolerance","intersectsExtent","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","GeometryLayout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","snap","round","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","forEachSegment","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","startAngle","makeRegular","getRadius","Fill","color_","color","getColor","setColor","interpolatePoint","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","num","opt_size","ratio","toSize","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","load","unlistenImageChange","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","document","createElement","body","appendChild","rgb","getComputedStyle","removeChild","fromString","cacheSize","s","g","exec","hasAlpha","substr","normalize","map","Number","fromStringInternal_","asArray","asColorLike","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultLineDash","defaultPadding","checkedFonts","setSize","console","warn","measureFont","div","measureContext","textHeights","registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","margin","padding","position","left","offsetHeight","measureAndCacheTextWidth","rotateAtOffset","context","offsetX","offsetY","drawImageOrLabel","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","createTransformStringCanvas","createTransformString","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","render","getFill","getPoints","getRadius2","getAngle","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","ImageState","strokeStyle","strokeWidth","imageSize","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","drawHitDetectionCanvas_","CircleStyle","setRadius","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","image","renderer_","renderer","text_","zIndex_","zIndex","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","concat","Text","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","TextPlacement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","BaseLayer","LayerProperty","visible","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","zindex","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","setMap","handleSourcePropertyChange_","setSource","states","getSource","getState","SourceState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","prepareFrame","renderFrame","RenderEventType","layerStatesArray","layerState","some","arrayLayerState","createRenderer","hasRenderer","inView","viewState","zoom","quickselect","compare","quickselectStep","z","sd","newLeft","newRight","swap","defaultCompare","RBush","[object Object]","maxEntries","_maxEntries","_minEntries","ceil","_all","bbox","result","toBBox","nodesToSearch","children","child","childBBox","leaf","contains","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","items","N","M","calcBBox","pow","N2","N1","multiSelect","compareMinX","right2","compareMinY","right3","level","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","bboxMargin","siblings","destNode","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","setRenderOrder","renderOrder","styleFunction","toStyleFunction","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","opt_sharedData","hitDetectionImage","origin","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","top","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Circle","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoints","getFlatInteriorPoints","saveTextStates_","p0","p1","p2","p3","pixelRatio_1","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","imageState","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","moveTo","clipUnrotated","inverted","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","renderPixel","layerExtent","pixelToCoordinateTransform","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","drawTextOnPath","startM","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","delta","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","test","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","measureTextWidths","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","args","imageArgs","imageDeclutterBox","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","ORDER","BuilderType","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","getPixelIndexArray","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","getKey","src","crossOrigin","shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","maxCacheSize","ImageBase","getResolution","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","loadHandler","errorHandler","img","promise","listening_1","then","catch","listenerKeys","taintedTestContext","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","imgData","putImageData","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","iconImageCache","getIconImage","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","createHitDetectionImageData","features","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","canvas_1","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","renderWorlds","executorGroup","vectorSource","viewHints","ViewHint","multiWorld","getWrapX","endWorld","world","layerIndex","makeScale","transformToString","clipped","parseFloat","Promise","resolve","lastIndexOf","executorGroups","all","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","declutterBuilderGroup","CanvasBuilderGroup","getRenderTolerance","loadFeatures","getSquaredRenderTolerance","dirty","userTransform","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","opt_maxEntries","rbush_","RBush_","items_","extents","uid","update","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","rbush","Source","projection_","attributions_","adaptAttributions","attributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","getAttributions","getAttributionsCollapsible","getResolutions","getContextOptions","refresh","setAttributions","setState","attributionLike","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","FormatType","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","VectorSourceEvent","opt_feature","opt_features","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","filter","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","easeIn","easeOut","inAndOut","linear","Tile","interimTile","hifi","transition_","transition","transitionStarts_","release","getInterimTile","TileState","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","Date","now","lastIndex","firstIndex","duration","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","callback_1","order","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","CLASS_UNSELECTABLE","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers","previousElement","oldChildren","childNodes","oldChild","newChild","replaceChildren","display","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","MapEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","enumerable","configurable","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","clientX","clientY","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","none","getViewportClampedResolution","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","disable","View","hints_","animations_","updateAnimationKey_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","rotationNone","theta","createRotationConstraint","constraints_","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","series","animation","complete","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","opt_rotation","setViewportSize","ViewProperty","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","coordinatesEqual","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","MapProperty","view","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","getTarget","getTargetElement","getView","getOverlayById","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","elementFromPoint","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","lowOnFrameBudget","targetElement","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","usedTiles","MapEventType","setLayerGroup","setView","computedStyle","offsetWidth","Control","target_","mapEvent","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","lastChild","removeChildren","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","LEADING_DIGITS","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","steps","scaleBarText_","dpi_","dpi","setDpi","pointResolutionUnits","ProjUnits","nominalCount","suffix","metersPerDegree","decimalCount","html","decimal","createScaleBar","toFixed","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","Interaction","setActive","InteractionProperty","active","zoomByDelta","DoubleClickZoom","delta_","stopEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","centroid","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","hasAttribute","activeElement","focus","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","mapExtent","boxPixelExtent","scaleFromCenter","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","pan","KeyboardZoom","charCode","charCodeAt","Mode","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDropEventType","DragAndDropEvent","file","opt_projection","DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","setCenterAndRadius","getRadiusSquared_","lineStrings","appendLineString","multiLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","douglasPeuckerArray","intersectsLineStringArray","appendPoint","multiPoint","getPoint","linearRingss","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","linearRingssCenter","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","DrawEventType","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","type_","mode","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","Constructor_1","mode_1","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","move","addToDrawing_","startDrawing_","atFinish_","finishDrawing","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","appendCoordinates","newDrawing","ending","sketchFeatures","overlaySource","ExtentEventType","ExtentEvent","Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","tempExtent","tempSegment","ModifyEventType","ModifyEvent","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","getDefaultStyleFunction","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","writer","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","segmentData","depth","rings","centerSegmentData","circumferenceSegmentData","featureSegments","geometry_1","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestOnSegmentData","insertVertex_","opt_coordinate","nodes","hitPointGeometry","bufferExtent","projectedDistanceToSegmentDataSquared","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layers_1","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","getFeatureFromEvent","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","currentMap","closestSegmentData","projectedCoordinate","isCircle","closestOnCircle","TranslateEventType","TranslateEvent","startCoordinate","Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","geom","oldMap","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaultControls","defaultInteractions","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","opt_tileCoord","getKeyZXY","fromKey","hash","TileCache","expireCache","pruneExceptNewestZ","TileRange","containsTileRange","canvasPool","VectorRenderTile","urlTileCoord","getSourceTiles","declutterExecutorGroups","loadingSourceTiles","errorSourceTileKeys","hitDetectionImageData","replayState_","sourceTiles","wantedResolution","sourceZ","wrappedTileCoord","hasContext","getReplayState","renderedRenderOrder","renderedRevision","renderedTileResolution","renderedTileRevision","renderedZ","renderedTileZ","VectorTile","onLoad","setFeatures","onError","module","ol_Observable","createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","CSS_PREFIX","LayerSwitcher","_Control","instance","classCallCheck","collapseTipLabel","ReferenceError","possibleConstructorReturn","getPrototypeOf","activationMode","startActive","groupSelectStyle","getGroupSelectStyle","mapListeners","hiddenClassName","isTouchDevice_","shownClassName","panel","enableTouchScroll_","onclick","hidePanel","showPanel","onmouseover","onmouseout","relatedTarget","subClass","superClass","inherits","_this2","receiver","Function","desc","getOwnPropertyDescriptor","renderPanel","render_event","ensureTopVisibleBaseLayerShown","forEachRecursive","_idx","_a","setGroupVisibility","setChildVisibility","ul","renderLayers_","_changedLyr","rendercomplete_event","grp","lyrs","getGroupsAndLayers","isBaseGroup","descendantVisibility","every","v","group","groupVisible","groupIndeterminate","lastVisibleBaseLyr","lyr","_arr","setVisible_","filterFn","_lyr","li","lyrTitle","checkboxId","uuid","btn","toggleFold_","checked","indeterminate","onchange","htmlFor","_input","rsl","elm","renderLayer_","random","scrollStartPos","scrollTop","touches","pageY","createEvent","factory","require$$0","require$$1","require$$2","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","equivalentProjection","decimals","power_1","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertySetter","opt_property","localName","makeChildAppender","nodeWriter","makeSimpleNodeFactory","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","pushSerializeAndPop","serializersNS","nodeFactory","opt_keys","serialize","xmlSerializer_","document_","implementation","createDocument","XMLFeature","XMLSerializer","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readDecimal","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","string","toPrecision","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_NO_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","TEXTAREA","GX_NAMESPACE_URIS","NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","LINK_PARSERS","href","readURI","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","defaultIconUrlFunction","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction_","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","getAttribute","sharedStyles","drawName","multiGeometryPoints","featureStyle","findStyle","styleValue","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","baseURI","location","URL","fs","readName","readNameFromDocument","readNameFromNode","name_1","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","setAttributeNS","readColor","hexColor","readFlatCoordinates","re","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","flatLinearRing","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","Pbf","buf","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","utf8TextDecoder","readPackedEnd","pbf","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","ieee754","readDouble","readVarintRemainder","readVarint64","readSVarint","subarray","readUtf8TextDecoder","str","b3","b0","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","midpoint","MVT","featureClass_","featureClass","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","ctor","PBF","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","version","featurePBFReader","supportedExtensions","CONTEXT_IDS","opt_attributes","BufferUsage","WebGLArrayBuffer","opt_usage","usage","ofSize","getArrayClassForType","fromArray","from","fromArrayBuffer","getUsage","Float32Array","Uint32Array","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","texture","uniform3f","uniform4f","uniform1f","fromTransform","mat4","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","bufferCache_","currentProgram_","getSupportedExtensions","getExtension","ContextEventType","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","postProcessPasses_","postProcesses","shaderCompileErrors_","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","bufferCacheEntry","isContextLost","prepareDraw","getCanvas","applyFrameState","prepareDrawToRenderTarget","renderTarget","opt_disableAlphaBlend","getFramebuffer","getTexture","ZERO","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","resetTransform","scaleTransform","offsetRotateMatrix","rotateTransform","setUniformMatrixValue","setUniformFloatValue","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderInfoLog","getShaderCompileErrors","getAttributeLocation","makeProjectionTransform","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attributes","attr","getByteSizeFromType","computeAttributesStride","opt_data","opt_texture","BYTES_PER_ELEMENT","Uint16Array","WebGLWorkerMessageType","WebGLLayerRenderer","helper","tmpArray4","WebGLRenderTarget","helper_","texture_","framebuffer_","data_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","blob","Blob","createObjectURL","WebGLPointsLayerRenderer","projectionMatrixTransform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitProgram_","customAttributes","attribute","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","worker_","Worker","received","projectionTransform","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","renderCount","renderHitDetection","viewNotMoving","extentChanged","sourceChanged","BaseVector","rebuildBuffers_","multiplyTransform","featureCache","totalInstructionsCount","totalHitInstructionsCount","hitColor","tmpCoords","tmpColor","renderIndex","hitIndex","featureUid","radix","customAttributesCount","postMessage","hitMessage","colorDecodeId","terminate","DEFAULT_GRADIENT","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","u_size","u_blurSlope","u_gradientTexture","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageExtent","imageResolution","imagePixelRatio","viewCenter","size_1","dw","dh","previousAlpha","ImageLayer","CanvasTileLayerRenderer","tileLayer","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getTile","getPreload","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","postRenderFunction","preload","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","IMAGE_REPLAYS","ReplayType","hybrid","vector","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderTileImageQueue_","tileListenerKeys_","tmpTransform_","prepareTile","queue","tileUid","updateExecutorGroup_","tileImageNeedsRender_","listenerKey","getRenderMode","VectorTileRenderType","renderTileImage_","layerRevision","builderState","sourceTileGrid","getTileGrid","tileExtent","layerUid","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","CanvasExecutorGroup","_loop_2","reject","getTileCoordForCoordAndResolution","extent_1","tilePixel","reduce","tileSize","getTileSize","getTileRenderTransform","worldOffset","renderQueuedTileImages_","renderMode","replayTypes","replayState","renderPixelRatio","renderScale","pixelScale","translateTransform","VectorTileLayer","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","tmpTileCoord","TileGrid","opt_strict","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","createOrUpdateTileRange","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","createOrUpdateTileCoord","getTileCoordResolution","getFullTileRange","fullTileRanges","getForProjection","createForProjection","createXYZ","xyzOptions","gridOptions","resolutionsFromExtent","opt_maxZoom","opt_tileSize","opt_maxResolution","opt_corner","createForExtent","extentFromProjection","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","scaleSize","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTileUrlFunctions","tileUrlFunctions","tileCoordHash","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","expandUrl","templates","createFromTemplates","defaultLoadFunction","loadingTiles_","sourceTileCache","tileClass","tileGrids_","tileFeatures","candidate","sourceExtent","loadedZ","previousSourceTiles","tileUrl","listenChange","sourceTileKey","errorTileCount","coordKey","empty","newTile","brokenDiagonalRendering_","BaseTileLayer","TileLayer","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","IMAGE_SMOOTHING_DISABLED","msImageSmoothingEnabled","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","renderReprojected","leftToLoad_1","sourceListenKey_1","unlistenSources_","TileImage","defaultTileLoadFunction","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","ValueTypes","Operators","getValueType","valueArr","operator","getReturnType","numberToGlsl","arrayToGlsl","getStringNumberEquivalent","stringLiteralsMap","expressionToGlsl","typeHint","toGlsl","valueType","stringToGlsl","assertNumber","assertNumbers","assertString","assertBoolean","assertArgsCount","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","assertUniqueInferredType","types","getEqualOperator","getDecisionOperator","arg","inFragmentShader","variables","parsedArgs","opt_typeHint","interpolation","outputType","stop1","output1","stop2","fallback","assertArgsOdd","ShaderBuilder","varyings","sizeExpression","rotationExpression","offsetExpression","colorExpression","texCoordExpression","discardExpression","addUniform","addAttribute","addVarying","expression","setSizeExpression","setRotationExpression","setSymbolOffsetExpression","setColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","setSymbolRotateWithView","getSizeExpression","getOffsetExpression","getColorExpression","getTextureCoordinateExpression","getFragmentDiscardExpression","getSymbolVertexShader","forHitDetection","offsetMatrix","varying","getSymbolFragmentShader","hitDetectionBypass","WebGLPointsLayer","parseResult_","symbStyle","symbol","texCoord","textureCoord","vertContext","parsedSize","parsedOffset","parsedTexCoord","parsedRotation","fragContext","parsedColor","parsedOpacity","opacityFilter","visibleSize","symbolType","st","builder","parsedFilter","varName","attrName","attributeName","parseLiteralStyle","hitDetectionDisabled_","disableHitDetection","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","requestJSONP","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","mask","quadKey","imageryProviders","transform_1","imageryProvider","intersecting","coverageAreas","coverageArea","XYZ","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","defaultImageLoadFunction","appendParams","uri","params","keyParams","encodeURIComponent","qs","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","params_","v13_","updateV13_","serverType_","ratio_","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","VERSION","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getLegendUrl","LAYERS","getParams","viewExtent","requestExtent","getImageLoadFunction","WMSServerType","setImageLoadFunction","updateParams","OSM","TileWMS","transparent","tmpExtent_","getKeyForParams_","bufferSize","transformExtent","Group","Vector","WebGLPoints","toLonLat","lonLat","lon","fromLonLat","VTS"],"mappings":"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"}