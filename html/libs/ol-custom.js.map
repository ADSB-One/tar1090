{"version":3,"file":"ol-custom.js","sources":["node_modules/ol/util.js","node_modules/ol/AssertionError.js","node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/Object.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/asserts.js","node_modules/ol/Feature.js","node_modules/ol/geom/GeometryLayout.js","node_modules/ol/geom/GeometryType.js","node_modules/ol/proj/Units.js","node_modules/ol/transform.js","node_modules/ol/extent/Corner.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/proj/Projection.js","node_modules/ol/math.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/sphere.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/proj.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/render/EventType.js","node_modules/ol/style/Fill.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/style/Stroke.js","node_modules/ol/ImageState.js","node_modules/ol/size.js","node_modules/ol/style/Image.js","node_modules/ol/color.js","node_modules/ol/colorlike.js","node_modules/ol/has.js","node_modules/ol/dom.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Style.js","node_modules/ol/style/TextPlacement.js","node_modules/ol/style/Text.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/source/State.js","node_modules/ol/layer/Layer.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/Event.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/render/canvas/BuilderType.js","node_modules/rbush/rbush.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/ViewHint.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/style/IconAnchorUnits.js","node_modules/ol/style/IconOrigin.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/ImageBase.js","node_modules/ol/Image.js","node_modules/ol/style/IconImage.js","node_modules/ol/style/Icon.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/layer/Vector.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/Source.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/format/FormatType.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","node_modules/ol/TileState.js","node_modules/ol/easing.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/Kinetic.js","node_modules/ol/renderer/Map.js","node_modules/ol/render.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/ViewProperty.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/View.js","node_modules/ol/tilegrid/common.js","node_modules/ol/PluggableMap.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/ScaleLine.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/KeyCode.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/DragAndDrop.js","node_modules/ol/interaction/DragRotateAndZoom.js","node_modules/ol/geom/Circle.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/geom/flat/center.js","node_modules/ol/interaction/Draw.js","node_modules/ol/interaction/Extent.js","node_modules/ol/interaction/Modify.js","node_modules/ol/interaction/Select.js","node_modules/ol/interaction/Snap.js","node_modules/ol/interaction/Translate.js","node_modules/ol/interaction.js","node_modules/ol/Map.js","node_modules/ol/control.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/TileRange.js","node_modules/ol-layerswitcher/dist/ol-layerswitcher.js","node_modules/ol/format/Feature.js","node_modules/ol/format/JSONFeature.js","node_modules/ol/geom/GeometryCollection.js","node_modules/ol/format/GeoJSON.js","node_modules/ol/xml.js","node_modules/ol/format/XMLFeature.js","node_modules/ol/format/xsd.js","node_modules/ol/format/KML.js","node_modules/ol/webgl.js","node_modules/ol/webgl/Buffer.js","node_modules/ol/webgl/ContextEventType.js","node_modules/ol/webgl/PostProcessingPass.js","node_modules/ol/vec/mat4.js","node_modules/ol/webgl/Helper.js","node_modules/ol/renderer/webgl/Layer.js","node_modules/ol/webgl/RenderTarget.js","node_modules/ol/worker/webgl.js","node_modules/ol/renderer/webgl/PointsLayer.js","node_modules/ol/layer/Heatmap.js","node_modules/ol/layer/BaseImage.js","node_modules/ol/renderer/canvas/ImageLayer.js","node_modules/ol/layer/Image.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/source/TileEventType.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/reproj.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/layer/Tile.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/source/common.js","node_modules/ol/reproj/Tile.js","node_modules/ol/reproj/common.js","node_modules/ol/source/TileImage.js","node_modules/ol/style/expressions.js","node_modules/ol/webgl/ShaderBuilder.js","node_modules/ol/layer/WebGLPoints.js","node_modules/ol/source/BingMaps.js","node_modules/ol/net.js","node_modules/ol/source/XYZ.js","node_modules/ol/reproj/Image.js","node_modules/ol/source/Image.js","node_modules/ol/uri.js","node_modules/ol/source/WMSServerType.js","node_modules/ol/source/ImageWMS.js","node_modules/ol/source/OSM.js","node_modules/ol/source/TileWMS.js","main.js"],"sourcesContent":["/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.4.3';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.hasProperties() ? this.getProperties() : null);\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (halfSize * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width\n        ? numberString\n        : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2,\n                point[1],\n                point[0] + resolution / 2,\n                point[1],\n                point[0],\n                point[1] - resolution / 2,\n                point[0],\n                point[1] + resolution / 2,\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // https://stackoverflow.com/a/1180256/2389327\n    // https://en.wikipedia.org/wiki/Curve_orientation#Orientation_of_a_simple_polygon\n    var firstVertexRepeated = true;\n    for (var i = 0; i < stride; ++i) {\n        if (flatCoordinates[offset + i] !== flatCoordinates[end - stride + i]) {\n            firstVertexRepeated = false;\n            break;\n        }\n    }\n    if (firstVertexRepeated) {\n        end -= stride;\n    }\n    var iMinVertex = findCornerVertex(flatCoordinates, offset, end, stride);\n    // Orientation matrix:\n    //     [ 1  xa  ya ]\n    // O = | 1  xb  yb |\n    //     [ 1  xc  yc ]\n    var iPreviousVertex = iMinVertex - stride;\n    if (iPreviousVertex < offset) {\n        iPreviousVertex = end - stride;\n    }\n    var iNextVertex = iMinVertex + stride;\n    if (iNextVertex >= end) {\n        iNextVertex = offset;\n    }\n    var aX = flatCoordinates[iPreviousVertex];\n    var aY = flatCoordinates[iPreviousVertex + 1];\n    var bX = flatCoordinates[iMinVertex];\n    var bY = flatCoordinates[iMinVertex + 1];\n    var cX = flatCoordinates[iNextVertex];\n    var cY = flatCoordinates[iNextVertex + 1];\n    var determinant = bX * cY + aX * bY + aY * cX - (aY * bX + bY * cX + aX * cY);\n    return determinant < 0;\n}\n// Find vertex along one edge of bounding box.\n// In this case, we find smallest y; in case of tie also smallest x.\nfunction findCornerVertex(flatCoordinates, offset, end, stride) {\n    var iMinVertex = -1;\n    var minY = Infinity;\n    var minXAtMinY = Infinity;\n    for (var i = offset; i < end; i += stride) {\n        var x = flatCoordinates[i];\n        var y = flatCoordinates[i + 1];\n        if (y > minY) {\n            continue;\n        }\n        if (y == minY) {\n            if (x >= minXAtMinY) {\n                continue;\n            }\n        }\n        // Minimum so far.\n        iMinVertex = i;\n        minY = y;\n        minXAtMinY = x;\n    }\n    return iMinVertex;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    var heights = textHeights;\n    return function (fontSpec) {\n        var height = heights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                textHeights[fontSpec] =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                heights[fontSpec] = height;\n                document.body.removeChild(div);\n            }\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            var renderOptions = this.createRenderOptions();\n            this.createHitDetectionCanvas_(renderOptions);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        if (!this.canvas_[pixelRatio || 1]) {\n            var renderOptions = this.createRenderOptions();\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio || 1, renderOptions.size * pixelRatio || 1);\n            this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n            this.canvas_[pixelRatio || 1] = context.canvas;\n        }\n        return this.canvas_[pixelRatio || 1];\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @returns {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var renderOptions = this.createRenderOptions();\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.draw_(renderOptions, context, 0, 0, 1);\n        this.canvas_[1] = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        var size = context.canvas.width;\n        var imageSize = size;\n        var displacement = this.getDisplacement();\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y, pixelRatio) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionCanvas_ = this.getImage(1);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding(),\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction, } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder',\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ =\n            options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ =\n            options.renderBuffer !== undefined ? options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ =\n            options.updateWhileAnimating !== undefined\n                ? options.updateWhileAnimating\n                : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ =\n            options.updateWhileInteracting !== undefined\n                ? options.updateWhileInteracting\n                : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n        this.styleFunction_ =\n            opt_style === null ? undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroups) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEndss,\n                geometry,\n                renderer,\n                inflateMultiCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.POLYGON ||\n            type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates =\n                type == GeometryType.POLYGON\n                    ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                    : geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnds,\n                geometry,\n                renderer,\n                inflateCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.LINE_STRING ||\n            type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n                inflateCoordinates,\n            ]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n            ]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        var extent = geometry.getExtent();\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            extent,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            extent,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            this.declutterGroups_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.declutterGroups_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            this.declutterGroups_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.declutterGroups_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroups Declutter.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroups) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroups_ = declutterGroups;\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        return _this;\n    }\n    /**\n     * @return {import(\"./Builder.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = geometry.getStride();\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                var declutterGroup = this.declutterGroups_\n                    ? o === 0\n                        ? this.declutterGroups_[0]\n                        : [].concat(this.declutterGroups_[0])\n                    : null;\n                this.drawChars_(begin, end, declutterGroup);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    stride = 2;\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                this.declutterGroups_,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                this.declutterGroups_,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            declutterGroup,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            declutterGroup,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../canvas.js\").DeclutterGroups} declutterGroups Declutter.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroups) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroups_ = declutterGroups;\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         * @private\n         */\n        this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        /** @type {Array<*>} */\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroups_;\n                /** @type {number} */ (declutter[0][0])++;\n            }\n            else {\n                declutter = [[1]];\n                this.declutterGroups_ = declutter;\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = global || self, global.RBush = factory());\n}(this, function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) { swap(arr, left, right); }\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) { i++; }\n            while (compare(arr[j], t) > 0) { j--; }\n        }\n\n        if (compare(arr[left], t) === 0) { swap(arr, left, j); }\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) { left = j + 1; }\n        if (k <= j) { right = j - 1; }\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nvar RBush = function RBush(maxEntries) {\n    if ( maxEntries === void 0 ) maxEntries = 9;\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n    this.clear();\n};\n\nRBush.prototype.all = function all () {\n    return this._all(this.data, []);\n};\n\nRBush.prototype.search = function search (bbox) {\n    var node = this.data;\n    var result = [];\n\n    if (!intersects(bbox, node)) { return result; }\n\n    var toBBox = this.toBBox;\n    var nodesToSearch = [];\n\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf) { result.push(child); }\n                else if (contains(bbox, childBBox)) { this._all(child, result); }\n                else { nodesToSearch.push(child); }\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return result;\n};\n\nRBush.prototype.collides = function collides (bbox) {\n    var node = this.data;\n\n    if (!intersects(bbox, node)) { return false; }\n\n    var nodesToSearch = [];\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? this.toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf || contains(bbox, childBBox)) { return true; }\n                nodesToSearch.push(child);\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return false;\n};\n\nRBush.prototype.load = function load (data) {\n    if (!(data && data.length)) { return this; }\n\n    if (data.length < this._minEntries) {\n        for (var i = 0; i < data.length; i++) {\n            this.insert(data[i]);\n        }\n        return this;\n    }\n\n    // recursively build the tree with the given data from scratch using OMT algorithm\n    var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n    if (!this.data.children.length) {\n        // save as is if tree is empty\n        this.data = node;\n\n    } else if (this.data.height === node.height) {\n        // split root if trees have the same height\n        this._splitRoot(this.data, node);\n\n    } else {\n        if (this.data.height < node.height) {\n            // swap trees if inserted one is bigger\n            var tmpNode = this.data;\n            this.data = node;\n            node = tmpNode;\n        }\n\n        // insert the small tree into the large tree at appropriate level\n        this._insert(node, this.data.height - node.height - 1, true);\n    }\n\n    return this;\n};\n\nRBush.prototype.insert = function insert (item) {\n    if (item) { this._insert(item, this.data.height - 1); }\n    return this;\n};\n\nRBush.prototype.clear = function clear () {\n    this.data = createNode([]);\n    return this;\n};\n\nRBush.prototype.remove = function remove (item, equalsFn) {\n    if (!item) { return this; }\n\n    var node = this.data;\n    var bbox = this.toBBox(item);\n    var path = [];\n    var indexes = [];\n    var i, parent, goingUp;\n\n    // depth-first iterative tree traversal\n    while (node || path.length) {\n\n        if (!node) { // go up\n            node = path.pop();\n            parent = path[path.length - 1];\n            i = indexes.pop();\n            goingUp = true;\n        }\n\n        if (node.leaf) { // check current node\n            var index = findItem(item, node.children, equalsFn);\n\n            if (index !== -1) {\n                // item found, remove the item and condense tree upwards\n                node.children.splice(index, 1);\n                path.push(node);\n                this._condense(path);\n                return this;\n            }\n        }\n\n        if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n            path.push(node);\n            indexes.push(i);\n            i = 0;\n            parent = node;\n            node = node.children[0];\n\n        } else if (parent) { // go right\n            i++;\n            node = parent.children[i];\n            goingUp = false;\n\n        } else { node = null; } // nothing found\n    }\n\n    return this;\n};\n\nRBush.prototype.toBBox = function toBBox (item) { return item; };\n\nRBush.prototype.compareMinX = function compareMinX (a, b) { return a.minX - b.minX; };\nRBush.prototype.compareMinY = function compareMinY (a, b) { return a.minY - b.minY; };\n\nRBush.prototype.toJSON = function toJSON () { return this.data; };\n\nRBush.prototype.fromJSON = function fromJSON (data) {\n    this.data = data;\n    return this;\n};\n\nRBush.prototype._all = function _all (node, result) {\n    var nodesToSearch = [];\n    while (node) {\n        if (node.leaf) { result.push.apply(result, node.children); }\n        else { nodesToSearch.push.apply(nodesToSearch, node.children); }\n\n        node = nodesToSearch.pop();\n    }\n    return result;\n};\n\nRBush.prototype._build = function _build (items, left, right, height) {\n\n    var N = right - left + 1;\n    var M = this._maxEntries;\n    var node;\n\n    if (N <= M) {\n        // reached leaf level; return leaf\n        node = createNode(items.slice(left, right + 1));\n        calcBBox(node, this.toBBox);\n        return node;\n    }\n\n    if (!height) {\n        // target height of the bulk-loaded tree\n        height = Math.ceil(Math.log(N) / Math.log(M));\n\n        // target number of root entries to maximize storage utilization\n        M = Math.ceil(N / Math.pow(M, height - 1));\n    }\n\n    node = createNode([]);\n    node.leaf = false;\n    node.height = height;\n\n    // split the items into M mostly square tiles\n\n    var N2 = Math.ceil(N / M);\n    var N1 = N2 * Math.ceil(Math.sqrt(M));\n\n    multiSelect(items, left, right, N1, this.compareMinX);\n\n    for (var i = left; i <= right; i += N1) {\n\n        var right2 = Math.min(i + N1 - 1, right);\n\n        multiSelect(items, i, right2, N2, this.compareMinY);\n\n        for (var j = i; j <= right2; j += N2) {\n\n            var right3 = Math.min(j + N2 - 1, right2);\n\n            // pack each entry recursively\n            node.children.push(this._build(items, j, right3, height - 1));\n        }\n    }\n\n    calcBBox(node, this.toBBox);\n\n    return node;\n};\n\nRBush.prototype._chooseSubtree = function _chooseSubtree (bbox, node, level, path) {\n    while (true) {\n        path.push(node);\n\n        if (node.leaf || path.length - 1 === level) { break; }\n\n        var minArea = Infinity;\n        var minEnlargement = Infinity;\n        var targetNode = (void 0);\n\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var area = bboxArea(child);\n            var enlargement = enlargedArea(bbox, child) - area;\n\n            // choose entry with the least area enlargement\n            if (enlargement < minEnlargement) {\n                minEnlargement = enlargement;\n                minArea = area < minArea ? area : minArea;\n                targetNode = child;\n\n            } else if (enlargement === minEnlargement) {\n                // otherwise choose one with the smallest area\n                if (area < minArea) {\n                    minArea = area;\n                    targetNode = child;\n                }\n            }\n        }\n\n        node = targetNode || node.children[0];\n    }\n\n    return node;\n};\n\nRBush.prototype._insert = function _insert (item, level, isNode) {\n    var bbox = isNode ? item : this.toBBox(item);\n    var insertPath = [];\n\n    // find the best node for accommodating the item, saving all nodes along the path too\n    var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n    // put the item into the node\n    node.children.push(item);\n    extend(node, bbox);\n\n    // split on node overflow; propagate upwards if necessary\n    while (level >= 0) {\n        if (insertPath[level].children.length > this._maxEntries) {\n            this._split(insertPath, level);\n            level--;\n        } else { break; }\n    }\n\n    // adjust bboxes along the insertion path\n    this._adjustParentBBoxes(bbox, insertPath, level);\n};\n\n// split overflowed node into two\nRBush.prototype._split = function _split (insertPath, level) {\n    var node = insertPath[level];\n    var M = node.children.length;\n    var m = this._minEntries;\n\n    this._chooseSplitAxis(node, m, M);\n\n    var splitIndex = this._chooseSplitIndex(node, m, M);\n\n    var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n    newNode.height = node.height;\n    newNode.leaf = node.leaf;\n\n    calcBBox(node, this.toBBox);\n    calcBBox(newNode, this.toBBox);\n\n    if (level) { insertPath[level - 1].children.push(newNode); }\n    else { this._splitRoot(node, newNode); }\n};\n\nRBush.prototype._splitRoot = function _splitRoot (node, newNode) {\n    // split root node\n    this.data = createNode([node, newNode]);\n    this.data.height = node.height + 1;\n    this.data.leaf = false;\n    calcBBox(this.data, this.toBBox);\n};\n\nRBush.prototype._chooseSplitIndex = function _chooseSplitIndex (node, m, M) {\n    var index;\n    var minOverlap = Infinity;\n    var minArea = Infinity;\n\n    for (var i = m; i <= M - m; i++) {\n        var bbox1 = distBBox(node, 0, i, this.toBBox);\n        var bbox2 = distBBox(node, i, M, this.toBBox);\n\n        var overlap = intersectionArea(bbox1, bbox2);\n        var area = bboxArea(bbox1) + bboxArea(bbox2);\n\n        // choose distribution with minimum overlap\n        if (overlap < minOverlap) {\n            minOverlap = overlap;\n            index = i;\n\n            minArea = area < minArea ? area : minArea;\n\n        } else if (overlap === minOverlap) {\n            // otherwise choose distribution with minimum area\n            if (area < minArea) {\n                minArea = area;\n                index = i;\n            }\n        }\n    }\n\n    return index || M - m;\n};\n\n// sorts node children by the best axis for split\nRBush.prototype._chooseSplitAxis = function _chooseSplitAxis (node, m, M) {\n    var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n    var compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n    var xMargin = this._allDistMargin(node, m, M, compareMinX);\n    var yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n    // if total distributions margin value is minimal for x, sort by minX,\n    // otherwise it's already sorted by minY\n    if (xMargin < yMargin) { node.children.sort(compareMinX); }\n};\n\n// total margin of all possible split distributions where each node is at least m full\nRBush.prototype._allDistMargin = function _allDistMargin (node, m, M, compare) {\n    node.children.sort(compare);\n\n    var toBBox = this.toBBox;\n    var leftBBox = distBBox(node, 0, m, toBBox);\n    var rightBBox = distBBox(node, M - m, M, toBBox);\n    var margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n    for (var i = m; i < M - m; i++) {\n        var child = node.children[i];\n        extend(leftBBox, node.leaf ? toBBox(child) : child);\n        margin += bboxMargin(leftBBox);\n    }\n\n    for (var i$1 = M - m - 1; i$1 >= m; i$1--) {\n        var child$1 = node.children[i$1];\n        extend(rightBBox, node.leaf ? toBBox(child$1) : child$1);\n        margin += bboxMargin(rightBBox);\n    }\n\n    return margin;\n};\n\nRBush.prototype._adjustParentBBoxes = function _adjustParentBBoxes (bbox, path, level) {\n    // adjust bboxes along the given tree path\n    for (var i = level; i >= 0; i--) {\n        extend(path[i], bbox);\n    }\n};\n\nRBush.prototype._condense = function _condense (path) {\n    // go through the path, removing empty nodes and updating bboxes\n    for (var i = path.length - 1, siblings = (void 0); i >= 0; i--) {\n        if (path[i].children.length === 0) {\n            if (i > 0) {\n                siblings = path[i - 1].children;\n                siblings.splice(siblings.indexOf(path[i]), 1);\n\n            } else { this.clear(); }\n\n        } else { calcBBox(path[i], this.toBBox); }\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) { return items.indexOf(item); }\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) { return i; }\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) { destNode = createNode(null); }\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k; i < p; i++) {\n        var child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX);\n    var minY = Math.max(a.minY, b.minY);\n    var maxX = Math.min(a.maxX, b.maxX);\n    var maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) { continue; }\n\n        var mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\nreturn RBush;\n\n}));\n","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var result = [];\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var rotatedCoordinates = rotate(flatCoordinates, offset, end, stride, rotation, [flatCoordinates[offset], flatCoordinates[offset + 1]]);\n        reverse =\n            rotatedCoordinates[0] >\n                rotatedCoordinates[rotatedCoordinates.length - stride];\n    }\n    else {\n        reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    }\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var angleChanged = false;\n    var index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text[index];\n        var charLength = scale * measureAndCacheTextWidth(font, char, cache);\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            angleChanged = angleChanged || delta !== 0;\n            delta +=\n                delta > Math.PI ? -2 * Math.PI : delta < -Math.PI ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result[index] = [x, y, charLength / 2, angle, char];\n        startM += charLength;\n    }\n    return angleChanged\n        ? result\n        : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport RBush from 'rbush/rbush.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, getHeight, getWidth, intersects, } from '../../extent.js';\nimport { defaultPadding, defaultTextBaseline, drawImageOrLabel, } from '../canvas.js';\nimport { defaultTextAlign, measureAndCacheTextWidth, measureTextHeight, measureTextWidths, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @type {Array<*>}\n         */\n        this.declutterItems = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        this.renderBuffer_ = renderBuffer;\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var lines = text.split('\\n');\n        var numLines = lines.length;\n        var widths = [];\n        var width = measureTextWidths(textState.font, lines, widths);\n        var lineHeight = measureTextHeight(textState.font);\n        var height = lineHeight * numLines;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        contextInstructions.push('font', textState.font);\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var i;\n        if (strokeKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('strokeText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        if (fillKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('fillText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @param {boolean} declutter Declutter.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction, declutter) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            if (declutter) {\n                context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (fillInstruction[1]);\n            }\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, x, y, imageOrLabel, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        x -= anchorX;\n        y -= anchorY;\n        var w = width + originX > imageOrLabel.width\n            ? imageOrLabel.width - originX\n            : width;\n        var h = height + originY > imageOrLabel.height\n            ? imageOrLabel.height - originY\n            : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var renderBufferX = 0;\n        var renderBufferY = 0;\n        if (declutterGroup) {\n            var renderBuffer = this.renderBuffer_;\n            renderBuffer[0] = Math.max(renderBuffer[0], getWidth(tmpExtent));\n            renderBufferX = renderBuffer[0];\n            renderBuffer[1] = Math.max(renderBuffer[1], getHeight(tmpExtent));\n            renderBufferY = renderBuffer[1];\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * scale[0]) / 2\n            : 0;\n        var intersects = tmpExtent[0] - strokePadding <=\n            (canvas.width + renderBufferX) / contextScale &&\n            tmpExtent[2] + strokePadding >= -renderBufferX / contextScale &&\n            tmpExtent[1] - strokePadding <=\n                (canvas.height + renderBufferY) / contextScale &&\n            tmpExtent[3] + strokePadding >= -renderBufferY / contextScale;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[0] == 1) {\n                return false;\n            }\n            var declutterArgs = intersects\n                ? [\n                    context,\n                    transform ? transform.slice(0) : null,\n                    opacity,\n                    imageOrLabel,\n                    originX,\n                    originY,\n                    w,\n                    h,\n                    x,\n                    y,\n                    scale,\n                    tmpExtent.slice(),\n                ]\n                : null;\n            if (declutterArgs) {\n                if (fillStroke) {\n                    declutterArgs.push(fillInstruction, strokeInstruction, p1.slice(0), p2.slice(0), p3.slice(0), p4.slice(0));\n                }\n                declutterGroup.push(declutterArgs);\n            }\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction), false);\n            }\n            drawImageOrLabel(context, transform, opacity, imageOrLabel, originX, originY, w, h, x, y, scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} opacity Layer opacity.\n     * @param {?} declutterTree Declutter tree.\n     * @return {?} Declutter tree.\n     */\n    Executor.prototype.renderDeclutter = function (declutterGroup, feature, opacity, declutterTree) {\n        /** @type {Array<import(\"../../structs/RBush.js\").Entry>} */\n        var boxes = [];\n        for (var i = 1, ii = declutterGroup.length; i < ii; ++i) {\n            var declutterData = declutterGroup[i];\n            var box = declutterData[11];\n            boxes.push({\n                minX: box[0],\n                minY: box[1],\n                maxX: box[2],\n                maxY: box[3],\n                value: feature,\n            });\n        }\n        if (!declutterTree) {\n            declutterTree = new RBush(9);\n        }\n        var collides = false;\n        for (var i = 0, ii = boxes.length; i < ii; ++i) {\n            if (declutterTree.collides(boxes[i])) {\n                collides = true;\n                break;\n            }\n        }\n        if (!collides) {\n            declutterTree.load(boxes);\n            for (var j = 1, jj = declutterGroup.length; j < jj; ++j) {\n                var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                var context = declutterData[0];\n                var currentAlpha = context.globalAlpha;\n                if (currentAlpha !== opacity) {\n                    context.globalAlpha = opacity;\n                }\n                if (declutterData.length > 12) {\n                    this.replayTextBackground_(declutterData[0], declutterData[14], declutterData[15], declutterData[16], declutterData[17], declutterData[12], declutterData[13], true);\n                }\n                drawImageOrLabel.apply(undefined, declutterData);\n                if (currentAlpha !== opacity) {\n                    context.globalAlpha = currentAlpha;\n                }\n            }\n        }\n        declutterGroup.length = 1;\n        return declutterTree;\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        this.declutterItems.length = 0;\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, declutterGroups, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, instruction[3])) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroups = featureCallback ? null : instruction[6];\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[7] = height;\n                        width = image.width;\n                        instruction[14] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    var declutterGroupIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        if (declutterGroups) {\n                            var index = Math.floor(declutterGroupIndex);\n                            declutterGroup =\n                                declutterGroups.length < index + 1\n                                    ? [declutterGroups[0][0]]\n                                    : declutterGroups[index];\n                        }\n                        var rendered = this.replayImageOrLabel_(context, contextScale, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill\n                            ? /** @type {Array<*>} */ (lastFillInstruction)\n                            : null, backgroundStroke\n                            ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                            : null);\n                        if (rendered &&\n                            declutterGroup &&\n                            declutterGroups[declutterGroups.length - 1] !== declutterGroup) {\n                            declutterGroups.push(declutterGroup);\n                        }\n                        if (declutterGroup) {\n                            if (declutterGroup.length - 1 === declutterGroup[0]) {\n                                this.declutterItems.push(this, declutterGroup, feature);\n                            }\n                            declutterGroupIndex += 1 / declutterGroup[0];\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : instruction[4];\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[14]),\n                        /** @type {number} */ (instruction[14]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        if (parts) {\n                            var rendered = false;\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    rendered =\n                                        this.replayImageOrLabel_(context, contextScale, \n                                        /** @type {number} */ (part[0]), \n                                        /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                        /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null) || rendered;\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    rendered =\n                                        this.replayImageOrLabel_(context, contextScale, \n                                        /** @type {number} */ (part[0]), \n                                        /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                        /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null) || rendered;\n                                }\n                            }\n                            if (rendered) {\n                                this.declutterItems.push(this, declutterGroup, feature);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            var renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions, renderBuffer);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        if (!this.hitDetectionContext_) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize)\n                .data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures &&\n                                (builderType == BuilderType.IMAGE ||\n                                    builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE ||\n                            builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, contextScale, transform, viewRotation, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]],\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\n    var zs = Object.keys(declutterReplays)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        var currentExecutor = void 0;\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            var transform = executorData[i++];\n            executor.execute(context, 1, transform, rotation, snapToPixel);\n            if (executor !== currentExecutor && executor.declutterItems.length > 0) {\n                currentExecutor = executor;\n                declutterItems.push({\n                    items: executor.declutterItems,\n                    opacity: opacity,\n                });\n            }\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: this.pixelRatio_ *\n                    (strokeStyleWidth !== undefined\n                        ? strokeStyleWidth\n                        : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageSize = imageStyle.getSize();\n            if (!imageSize) {\n                this.image_ = null;\n            }\n            else {\n                var imageAnchor = imageStyle.getAnchor();\n                // FIXME pixel ratio\n                var imageImage = imageStyle.getImage(1);\n                var imageOrigin = imageStyle.getOrigin();\n                var imageScale = imageStyle.getScaleArray();\n                this.imageAnchorX_ = imageAnchor[0];\n                this.imageAnchorY_ = imageAnchor[1];\n                this.imageHeight_ = imageSize[1];\n                this.image_ = imageImage;\n                this.imageOpacity_ = imageStyle.getOpacity();\n                this.imageOriginX_ = imageOrigin[0];\n                this.imageOriginY_ = imageOrigin[1];\n                this.imageRotateWithView_ = imageStyle.getRotateWithView();\n                this.imageRotation_ = imageStyle.getRotation();\n                this.imageScale_ = [\n                    this.pixelRatio_ * imageScale[0],\n                    this.pixelRatio_ * imageScale[1],\n                ];\n                this.imageWidth_ = imageSize[0];\n            }\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ || this.canvas_[pixelRatio]) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        if (this.isTainted_()) {\n            // If reading from the canvas throws a SecurityError the same effect can be\n            // achieved with globalCompositeOperation.\n            // This could be used as the default, but it is not fully supported by all\n            // browsers. E. g. Internet Explorer 11 does not support the multiply\n            // operation and the resulting image shape will be completelly filled with\n            // the provided color.\n            // So this is only used as a fallback. It is still better than having no icon\n            // at all.\n            var c = this.color_;\n            ctx.globalCompositeOperation = 'multiply';\n            ctx.fillStyle = 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')';\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n            return;\n        }\n        var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ration of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        var displacement = this.getDisplacement();\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        offset[0] += displacement[0];\n        offset[1] += displacement[1];\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup, { replayDeclutter, } from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, 0);\n        var declutterReplays = this.getLayer().getDeclutter() ? {} : null;\n        replayGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, declutterReplays);\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n                replayGroup.execute(context, 1, transform_1, rotation, snapToPixel, undefined, declutterReplays);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n                replayGroup.execute(context, 1, transform_2, rotation, snapToPixel, undefined, declutterReplays);\n                startX -= worldWidth;\n            }\n        }\n        if (declutterReplays) {\n            var viewHints_1 = frameState.viewHints;\n            var hifi = !(viewHints_1[ViewHint.ANIMATING] || viewHints_1[ViewHint.INTERACTING]);\n            replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : String(opacity);\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(function (resolve, reject) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.renderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] / 2;\n                var height = size[1] / 2;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback(feature, layer_1);\n                }\n            }, layer_1.getDeclutter() ? declutteredFeatures : null);\n            return result;\n        }\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorLayer.getDeclutter());\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/render/canvas/hitdetet\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] / 2;\n    var height = size[1] / 2;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var canvas_1 = document.createElement('canvas');\n                canvas_1.width = imgSize[0];\n                canvas_1.height = imgSize[1];\n                var imgContext = canvas_1.getContext('2d', { alpha: false });\n                imgContext.fillStyle = color;\n                var img = imgContext.canvas;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                var width_1 = imgSize ? imgSize[0] : img.width;\n                var height_1 = imgSize ? imgSize[1] : img.height;\n                var iconContext = createCanvasContext2D(width_1, height_1);\n                iconContext.drawImage(img, 0, 0);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    size: image.getSize(),\n                    opacity: image.getOpacity(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = Number(style.getZIndex());\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry && intersects(extent, geometry.getExtent())) {\n                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n            }\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush/rbush.js';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml',\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport { VOID } from './functions.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        xhr.withCredentials = withCredentials;\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection,\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, \n    /* FIXME handle error */ VOID);\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray();\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @return {string} Key.\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { renderDeclutterItems } from '../render.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            return callback.call(thisArg, feature, managed ? layer : null);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, declutteredFeatures);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform, } from './transform.js';\nimport { getSquaredTolerance } from './renderer/vector.js';\nimport { getTransformFromProjections, getUserProjection } from './proj.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    var squaredTolerance = getSquaredTolerance(frameState.viewState.resolution, frameState.pixelRatio);\n    var userTransform;\n    var userProjection = getUserProjection();\n    if (userProjection) {\n        userTransform = getTransformFromProjections(userProjection, frameState.viewState.projection);\n    }\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation, squaredTolerance, userTransform);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var item = items[z];\n        var zIndexItems = item.items;\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            this.dragListenerKeys_.push(listen(document, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(document, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode &&\n                this.element_.getRootNode() !== document) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = assign({ size: this.getViewportSize_() }, opt_options || {});\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSize_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenterInternal([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined\n            ? opt_options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined\n            ? options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined\n            ? opt_options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : document;\n            var target = rootNode === document\n                ? /** @type {Node} */ (originalEvent.target)\n                : /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === document ? document.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState\n                    ? previousFrameState.declutterItems\n                    : [],\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ &&\n                source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { METERS_PER_UNIT, getPointResolution } from '../proj.js';\nimport { assert } from '../asserts.js';\nimport { getChangeEventType } from '../Object.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us',\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @const\n * @type {number}\n */\nvar DEFAULT_DPI = 25.4 / 0.28;\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options=} opt_options Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined\n            ? options.className\n            : options.bar\n                ? 'ol-scale-bar'\n                : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        _this.addEventListener(getChangeEventType(UNITS_PROP), _this.handleUnitsChanged_);\n        _this.setUnits(options.units || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.dpi_ = options.dpi || undefined;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {import(\"./ScaleLine.js\").Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * Specify the dpi of output device such as printer.\n     * @param {number|undefined} dpi The dpi of output device.\n     * @api\n     */\n    ScaleLine.prototype.setDpi = function (dpi) {\n        this.dpi_ = dpi;\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var minWidth = (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n        var nominalCount = minWidth * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'nm';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'μm';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            else if (width >= minWidth) {\n                break;\n            }\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @returns {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = '#ffffff';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar\" ' +\n                'style=' +\n                '\"width: ' +\n                stepWidth +\n                'px;' +\n                'background-color: ' +\n                backgroundColor +\n                ';\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2\n                    ? this.createStepText(i, width, false, scale, suffix)\n                    : '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                {\n                    /*render text at the end */\n                }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch colors of steps between black and white\n            if (backgroundColor === '#ffffff') {\n                backgroundColor = '#000000';\n            }\n            else {\n                backgroundColor = '#ffffff';\n            }\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText =\n                '<div ' +\n                    'class=\"ol-scale-text\" ' +\n                    'style=\"width: ' +\n                    width +\n                    'px;\">' +\n                    mapScale +\n                    '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position - The position, absolute or relative\n     * @param {number} i - The iterator\n     * @returns {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return ('<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' +\n            position +\n            ';' +\n            'top: ' +\n            top +\n            'px;\"' +\n            '></div>');\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i - The iterator\n     * @param {number} width - The width the scalebar will currently use\n     * @param {boolean} isLast - Flag indicating if we add the last step text\n     * @param {number} scale - The current scale for the whole scalebar\n     * @param {string} suffix - The suffix for the scale\n     * @returns {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n        var minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n        return ('<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' +\n            margin +\n            'px;' +\n            'text-align: ' +\n            (i === 0 ? 'left' : 'center') +\n            '; ' +\n            'min-width: ' +\n            minWidth +\n            'px;' +\n            'left: ' +\n            (isLast ? width + 'px' : 'unset') +\n            ';\"' +\n            '>' +\n            lengthString +\n            '</div>');\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = getPointResolution(this.viewState_.projection, this.viewState_.resolution, this.viewState_.center);\n        var dpi = this.dpi_ || DEFAULT_DPI;\n        var mpu = this.viewState_.projection.getMetersPerUnit();\n        var inchesPerMeter = 39.37;\n        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n    };\n    /**\n     * Update the scale line element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    ScaleLine.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            this.viewState_ = null;\n        }\n        else {\n            this.viewState_ = frameState.viewState;\n        }\n        this.updateElement_();\n    };\n    return ScaleLine;\n}(Control));\nexport default ScaleLine;\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                mapBrowserEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                mapBrowserEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { get as getProjection } from '../proj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n    /**\n     * Triggered when features are added\n     * @event DragAndDropEvent#addfeatures\n     * @api\n     */\n    ADD_FEATURES: 'addfeatures',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */ (function (_super) {\n    __extends(DragAndDropEvent, _super);\n    /**\n     * @param {DragAndDropEventType} type Type.\n     * @param {File} file File.\n     * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     */\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features parsed from dropped data.\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        /**\n         * The dropped file.\n         * @type {File}\n         * @api\n         */\n        _this.file = file;\n        /**\n         * The feature projection.\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         * @api\n         */\n        _this.projection = opt_projection;\n        return _this;\n    }\n    return DragAndDropEvent;\n}(Event));\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */ (function (_super) {\n    __extends(DragAndDrop, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragAndDrop(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            handleEvent: TRUE,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<typeof import(\"../format/Feature.js\").default>}\n         */\n        _this.formatConstructors_ = options.formatConstructors\n            ? options.formatConstructors\n            : [];\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = options.projection\n            ? getProjection(options.projection)\n            : null;\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.dropListenKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../source/Vector.js\").default}\n         */\n        _this.source_ = options.source || null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target = options.target ? options.target : null;\n        return _this;\n    }\n    /**\n     * @param {File} file File.\n     * @param {Event} event Load event.\n     * @private\n     */\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\n        var result = event.target.result;\n        var map = this.getMap();\n        var projection = this.projection_;\n        if (!projection) {\n            var view = map.getView();\n            projection = view.getProjection();\n        }\n        var formatConstructors = this.formatConstructors_;\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n            var format = new formatConstructors[i]();\n            var features = this.tryReadFeatures_(format, result, {\n                featureProjection: projection,\n            });\n            if (features && features.length > 0) {\n                if (this.source_) {\n                    this.source_.clear();\n                    this.source_.addFeatures(features);\n                }\n                this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n                break;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.registerListeners_ = function () {\n        var map = this.getMap();\n        if (map) {\n            var dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                listen(dropArea, EventType.DROP, this.handleDrop, this),\n                listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n                listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n                listen(dropArea, EventType.DROP, this.handleStop, this),\n            ];\n        }\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    DragAndDrop.prototype.setActive = function (active) {\n        if (!this.getActive() && active) {\n            this.registerListeners_();\n        }\n        if (this.getActive() && !active) {\n            this.unregisterListeners_();\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    DragAndDrop.prototype.setMap = function (map) {\n        this.unregisterListeners_();\n        _super.prototype.setMap.call(this, map);\n        if (this.getActive()) {\n            this.registerListeners_();\n        }\n    };\n    /**\n     * @param {import(\"../format/Feature.js\").default} format Format.\n     * @param {string} text Text.\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n     * @private\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n        try {\n            return (\n            /** @type {Array<import(\"../Feature.js\").default>} */\n            (format.readFeatures(text, options)));\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.unregisterListeners_ = function () {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach(unlistenByKey);\n            this.dropListenKeys_ = null;\n        }\n    };\n    /**\n     * @param {DragEvent} event Event.\n     */\n    DragAndDrop.prototype.handleDrop = function (event) {\n        var files = event.dataTransfer.files;\n        for (var i = 0, ii = files.length; i < ii; ++i) {\n            var file = files.item(i);\n            var reader = new FileReader();\n            reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n            reader.readAsText(file);\n        }\n    };\n    /**\n     * @param {DragEvent} event Event.\n     */\n    DragAndDrop.prototype.handleStop = function (event) {\n        event.stopPropagation();\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n    };\n    return DragAndDrop;\n}(Interaction));\nexport default DragAndDrop;\n//# sourceMappingURL=DragAndDrop.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport { mouseOnly, shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /** @class */ (function (_super) {\n    __extends(DragRotateAndZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotateAndZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastMagnitude_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var deltaX = offset[0] - size[0] / 2;\n        var deltaY = size[1] / 2 - offset[1];\n        var theta = Math.atan2(deltaY, deltaX);\n        var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        var view = map.getView();\n        if (this.lastAngle_ !== undefined) {\n            var angleDelta = this.lastAngle_ - theta;\n            view.adjustRotationInternal(angleDelta);\n        }\n        this.lastAngle_ = theta;\n        if (this.lastMagnitude_ !== undefined) {\n            view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n        }\n        if (this.lastMagnitude_ !== undefined) {\n            this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n        }\n        this.lastMagnitude_ = magnitude;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n        view.endInteraction(this.duration_, direction);\n        this.lastScaleDelta_ = 0;\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (this.condition_(mapBrowserEvent)) {\n            mapBrowserEvent.map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            this.lastMagnitude_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotateAndZoom;\n}(PointerInteraction));\nexport default DragRotateAndZoom;\n//# sourceMappingURL=DragRotateAndZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { always, noModifierKeys, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../extent.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromUserCoordinate, getUserProjection } from '../proj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=,\n *     import(\"../proj/Projection.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle',\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend',\n    /**\n     * Triggered upon feature draw abortion\n     * @event DrawEvent#drawabort\n     * @api\n     */\n    DRAWABORT: 'drawabort',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {import(\"../geom/GeometryType.js\").default}\n         * @private\n         */\n        _this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints\n            ? options.minPoints\n            : _this.mode_ === Mode.POLYGON\n                ? 3\n                : 2;\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition\n            ? options.finishCondition\n            : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            if (_this.type_ === GeometryType.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry, projection) {\n                    var circle = opt_geometry\n                        ? /** @type {Circle} */ (opt_geometry)\n                        : new Circle([NaN, NaN]);\n                    var center = fromUserCoordinate(coordinates[0], projection);\n                    var squaredLength = squaredCoordinateDistance(center, fromUserCoordinate(coordinates[1], projection));\n                    circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n                    var userProjection = getUserProjection();\n                    if (userProjection) {\n                        circle.transform(projection, userProjection);\n                    }\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                var mode_1 = _this.mode_;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry, projection) {\n                    var geometry = opt_geometry;\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([\n                                    coordinates[0].concat([coordinates[0][0]]),\n                                ]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ =\n            options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature<LineString>}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance\n            ? options.clickTolerance * options.clickTolerance\n            : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false,\n            }),\n            style: options.style ? options.style : getDefaultStyleFunction(),\n            updateWhileInteracting: true,\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition\n                ? options.freehandCondition\n                : shiftKeyOnly;\n        }\n        _this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_);\n        return _this;\n    }\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.preventDefault();\n        }\n        this.freehand_ =\n            this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ &&\n            this.lastDragTime_ &&\n            event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event.coordinate);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                this.handlePointerMove_(event);\n                if (this.shouldHandle_) {\n                    // Avoid page scrolling when freehand drawing on mobile\n                    event.preventDefault();\n                }\n            }\n            else if (event.originalEvent.pointerType == 'mouse' ||\n                (event.type === MapBrowserEventType.POINTERDRAG &&\n                    this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserEvent(MapBrowserEventType.POINTERMOVE, event.map, event.originalEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.downTimeout_) {\n            clearTimeout(this.downTimeout_);\n            this.downTimeout_ = undefined;\n        }\n        this.handlePointerMove_(event);\n        var circleMode = this.mode_ === Mode.CIRCLE;\n        if (this.shouldHandle_) {\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n                if (this.mode_ === Mode.POINT) {\n                    this.finishDrawing();\n                }\n            }\n            else if (this.freehand_ || circleMode) {\n                this.finishDrawing();\n            }\n            else if (this.atFinish_(event)) {\n                if (this.finishCondition_(event)) {\n                    this.finishDrawing();\n                }\n            }\n            else {\n                this.addToDrawing_(event.coordinate);\n            }\n            pass = false;\n        }\n        else if (this.freehand_) {\n            this.abortDrawing();\n        }\n        if (!pass && this.stopClick_) {\n            event.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_\n                ? squaredDistance > this.squaredClickTolerance_\n                : squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (event) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            if (this.mode_ === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (this.mode_ === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [\n                    sketchCoords[0][0],\n                    sketchCoords[0][sketchCoords[0].length - 2],\n                ];\n            }\n            if (potentiallyDone) {\n                var map = event.map;\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var pixel = event.pixel;\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (event) {\n        var start = event.coordinate;\n        var projection = event.map.getView().getProjection();\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_, undefined, projection);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = event.map.getView().getProjection();\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(event)) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(\n        /** @type {!LineCoordType} */ (this.sketchCoords_), geometry, projection);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (geometry.getType() == GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            if (!this.sketchLine_) {\n                this.sketchLine_ = new Feature();\n            }\n            var ring = geometry.getLinearRing(0);\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            if (!sketchLineGeom) {\n                sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n                this.sketchLine_.setGeometry(sketchLineGeom);\n            }\n            else {\n                sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n                sketchLineGeom.changed();\n            }\n        }\n        else if (this.sketchLineCoords_) {\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {!PointCoordType} coordinate Coordinate\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (coordinate) {\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var done;\n        var coordinates;\n        if (this.mode_ === Mode.LINE_STRING) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var coordinates;\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (this.mode_ === Mode.LINE_STRING) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            this.geometryFunction_(coordinates, geometry, projection);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n            }\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        if (coordinates.length === 0) {\n            this.abortDrawing();\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = sketchFeature.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        this.sketchFeature_ = null;\n        this.sketchPoint_ = null;\n        this.sketchLine_ = null;\n        this.overlay_.getSource().clear(true);\n        return sketchFeature;\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @api\n     */\n    Draw.prototype.abortDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (sketchFeature) {\n            this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n        }\n    };\n    /**\n     * Append coordinates to the end of the geometry that is currently being drawn.\n     * This can be used when drawing LineStrings or Polygons. Coordinates will\n     * either be appended to the current LineString or the outer ring of the current\n     * Polygon.\n     * @param {!LineCoordType} coordinates Linear coordinates to be appended into\n     * the coordinate array.\n     * @api\n     */\n    Draw.prototype.appendCoordinates = function (coordinates) {\n        var mode = this.mode_;\n        var sketchCoords = [];\n        if (mode === Mode.LINE_STRING) {\n            sketchCoords = /** @type {LineCoordType} */ this.sketchCoords_;\n        }\n        else if (mode === Mode.POLYGON) {\n            sketchCoords =\n                this.sketchCoords_ && this.sketchCoords_.length\n                    ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n                    : [];\n        }\n        // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n        var ending = sketchCoords.pop();\n        // Append coordinate list\n        for (var i = 0; i < coordinates.length; i++) {\n            this.addToDrawing_(coordinates[i]);\n        }\n        // Duplicate last coordinate for sketch drawing\n        this.addToDrawing_(ending);\n    };\n    /**\n     * Initiate draw mode by starting from an existing geometry which will\n     * receive new additional points. This only works on features with\n     * `LineString` geometries, where the interaction will extend lines by adding\n     * points to the end of the coordinates array.\n     * This will change the original feature, instead of drawing a copy.\n     *\n     * The function will dispatch a `drawstart` event.\n     *\n     * @param {!Feature<LineString>} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = geometry;\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry, projection) {\n        var center = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[0], projection);\n        var end = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[1], projection);\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry\n            ? /** @type {Polygon} */ (opt_geometry)\n            : fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n        }\n        makeRegular(geometry, center, radius, angle);\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return function (coordinates, opt_geometry, projection) {\n        var extent = boundingExtent(\n        /** @type {LineCoordType} */ (coordinates).map(function (coordinate) {\n            return fromUserCoordinate(coordinate, projection);\n        }));\n        var boxCoordinates = [\n            [\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent),\n            ],\n        ];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT || type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return /** @type {!Mode} */ (mode);\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEvent#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */ (function (_super) {\n    __extends(ExtentEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */ (function (_super) {\n    __extends(Extent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Extent(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * Condition\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.boxStyle\n                ? opt_options.boxStyle\n                : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.pointerStyle\n                ? opt_options.pointerStyle\n                : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    Extent.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n        var sortByDistance = function (a, b) {\n            return (squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b));\n        };\n        var extent = this.getExtentInternal();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n            var vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex =\n                        squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @returns {Feature} extent as featrue\n     * @private\n     */\n    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @returns {Feature} vertex as feature\n     * @private\n     */\n    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Extent.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtentInternal();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n            var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtentInternal();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Extent.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection (or user projection if set)\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtent = function () {\n        return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtentInternal = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    Extent.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentEvent(this.extent_));\n    };\n    return Extent;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POLYGON];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [\n            [extent[0], extent[1]],\n            [extent[0], extent[3]],\n        ],\n        [\n            [extent[0], extent[3]],\n            [extent[2], extent[3]],\n        ],\n        [\n            [extent[2], extent[3]],\n            [extent[2], extent[1]],\n        ],\n        [\n            [extent[2], extent[1]],\n            [extent[0], extent[1]],\n        ],\n    ];\n}\nexport default Extent;\n//# sourceMappingURL=Extent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { altKeyOnly, always, primaryAction, singleClick, } from '../events/condition.js';\nimport { boundingExtent, buffer as bufferExtent, createOrUpdateFromCoordinate as createExtent, } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, equals as coordinatesEqual, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { equals } from '../array.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from '../proj.js';\nimport { getUid } from '../util.js';\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\nvar tempExtent = [0, 0, 0, 0];\nvar tempSegment = [];\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n    /**\n     * Triggered upon feature modification start\n     * @event ModifyEvent#modifystart\n     * @api\n     */\n    MODIFYSTART: 'modifystart',\n    /**\n     * Triggered upon feature modification end\n     * @event ModifyEvent#modifyend\n     * @api\n     */\n    MODIFYEND: 'modifyend',\n};\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nvar ModifyEvent = /** @class */ (function (_super) {\n    __extends(ModifyEvent, _super);\n    /**\n     * @param {ModifyEventType} type Type.\n     * @param {Collection<Feature>} features\n     * The features modified.\n     * @param {import(\"../MapBrowserEvent.js\").default} MapBrowserEvent\n     * Associated {@link module:ol/MapBrowserEvent}.\n     */\n    function ModifyEvent(type, features, MapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being modified.\n         * @type {Collection<Feature>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = MapBrowserEvent;\n        return _this;\n    }\n    return ModifyEvent;\n}(Event));\nexport { ModifyEvent };\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /** @class */ (function (_super) {\n    __extends(Modify, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Modify(options) {\n        var _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /** @private */\n        _this.boundHandleFeatureChange_ = _this.handleFeatureChange_.bind(_this);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : primaryAction;\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n            return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n        };\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.deleteCondition_ = options.deleteCondition\n            ? options.deleteCondition\n            : _this.defaultDeleteCondition_;\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.insertVertexCondition_ = options.insertVertexCondition\n            ? options.insertVertexCondition\n            : always;\n        /**\n         * Editing vertex.\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        /**\n         * Segments intersecting {@link this.vertexFeature_} by segment uid.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.vertexSegments_ = null;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.lastPixel_ = [0, 0];\n        /**\n         * Tracks if the next `singleclick` event should be ignored to prevent\n         * accidental deletion right after vertex creation.\n         * @type {boolean}\n         * @private\n         */\n        _this.ignoreNextSingleClick_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.modified_ = false;\n        /**\n         * Segment RTree for each layer\n         * @type {RBush<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Indicate whether the interaction is currently changing a feature's\n         * coordinates.\n         * @type {boolean}\n         * @private\n         */\n        _this.changingFeature_ = false;\n        /**\n         * @type {Array}\n         * @private\n         */\n        _this.dragSegments_ = [];\n        /**\n         * Draw overlay where sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!options.wrapX,\n            }),\n            style: options.style ? options.style : getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        /**\n         * @const\n         * @private\n         * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_.bind(_this),\n            'LineString': _this.writeLineStringGeometry_.bind(_this),\n            'LinearRing': _this.writeLineStringGeometry_.bind(_this),\n            'Polygon': _this.writePolygonGeometry_.bind(_this),\n            'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),\n            'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),\n            'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),\n            'Circle': _this.writeCircleGeometry_.bind(_this),\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this),\n        };\n        /**\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = null;\n        var features;\n        if (options.source) {\n            _this.source_ = options.source;\n            features = new Collection(_this.source_.getFeatures());\n            _this.source_.addEventListener(VectorEventType.ADDFEATURE, _this.handleSourceAdd_.bind(_this));\n            _this.source_.addEventListener(VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_.bind(_this));\n        }\n        else {\n            features = options.features;\n        }\n        if (!features) {\n            throw new Error('The modify interaction requires features or a source');\n        }\n        /**\n         * @type {Collection<Feature>}\n         * @private\n         */\n        _this.features_ = features;\n        _this.features_.forEach(_this.addFeature_.bind(_this));\n        _this.features_.addEventListener(CollectionEventType.ADD, _this.handleFeatureAdd_.bind(_this));\n        _this.features_.addEventListener(CollectionEventType.REMOVE, _this.handleFeatureRemove_.bind(_this));\n        /**\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @private\n         */\n        _this.lastPointerEvent_ = null;\n        return _this;\n    }\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.addFeature_ = function (feature) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var writer = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (writer) {\n                writer(feature, geometry);\n            }\n        }\n        var map = this.getMap();\n        if (map && map.isRendered() && this.getActive()) {\n            this.handlePointerAtPixel_(this.lastPixel_, map);\n        }\n        feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event\n     * @private\n     */\n    Modify.prototype.willModifyFeatures_ = function (evt) {\n        if (!this.modified_) {\n            this.modified_ = true;\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt));\n        }\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeature_ = function (feature) {\n        this.removeFeatureSegmentData_(feature);\n        // Remove the vertex feature if the collection of canditate features is empty.\n        if (this.vertexFeature_ && this.features_.getLength() === 0) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        feature.removeEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeatureSegmentData_ = function (feature) {\n        var rBush = this.rBush_;\n        /** @type {Array<SegmentData>} */\n        var nodesToRemove = [];\n        rBush.forEach(\n        /**\n         * @param {SegmentData} node RTree node.\n         */\n        function (node) {\n            if (feature === node.feature) {\n                nodesToRemove.push(node);\n            }\n        });\n        for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n            var nodeToRemove = nodesToRemove[i];\n            for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n                if (this.dragSegments_[j][0] === nodeToRemove) {\n                    this.dragSegments_.splice(j, 1);\n                }\n            }\n            rBush.remove(nodeToRemove);\n        }\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Modify.prototype.setActive = function (active) {\n        if (this.vertexFeature_ && !active) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Modify.prototype.setMap = function (map) {\n        this.overlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Modify.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceAdd_ = function (event) {\n        if (event.feature) {\n            this.features_.push(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceRemove_ = function (event) {\n        if (event.feature) {\n            this.features_.remove(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureAdd_ = function (evt) {\n        this.addFeature_(/** @type {Feature} */ (evt.element));\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureChange_ = function (evt) {\n        if (!this.changingFeature_) {\n            var feature = /** @type {Feature} */ (evt.target);\n            this.removeFeature_(feature);\n            this.addFeature_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = /** @type {Feature} */ (evt.element);\n        this.removeFeature_(feature);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {Point} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        /** @type {SegmentData} */\n        var segmentData = {\n            feature: feature,\n            geometry: geometry,\n            segment: [coordinates, coordinates],\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            /** @type {SegmentData} */\n            var segmentData = {\n                feature: feature,\n                geometry: geometry,\n                depth: [i],\n                index: i,\n                segment: [coordinates, coordinates],\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            /** @type {SegmentData} */\n            var segmentData = {\n                feature: feature,\n                geometry: geometry,\n                index: i,\n                segment: segment,\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                /** @type {SegmentData} */\n                var segmentData = {\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                /** @type {SegmentData} */\n                var segmentData = {\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    /** @type {SegmentData} */\n                    var segmentData = {\n                        feature: feature,\n                        geometry: geometry,\n                        depth: [j, k],\n                        index: i,\n                        segment: segment,\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * We convert a circle into two segments.  The segment at index\n     * {@link CIRCLE_CENTER_INDEX} is the\n     * circle's center (a point).  The segment at index\n     * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n     * the circumference, and is not a line segment.\n     *\n     * @param {Feature} feature Feature.\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCenter();\n        /** @type {SegmentData} */\n        var centerSegmentData = {\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CENTER_INDEX,\n            segment: [coordinates, coordinates],\n        };\n        /** @type {SegmentData} */\n        var circumferenceSegmentData = {\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CIRCUMFERENCE_INDEX,\n            segment: [coordinates, coordinates],\n        };\n        var featureSegments = [centerSegmentData, circumferenceSegmentData];\n        centerSegmentData.featureSegments = featureSegments;\n        circumferenceSegmentData.featureSegments = featureSegments;\n        this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n        var circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n        var userProjection = getUserProjection();\n        if (userProjection && this.getMap()) {\n            var projection = this.getMap().getView().getProjection();\n            circleGeometry = circleGeometry\n                .clone()\n                .transform(userProjection, projection);\n            circleGeometry = fromCircle(\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)).transform(projection, userProjection);\n        }\n        this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var geometry_1 = geometries[i];\n            var writer = this.SEGMENT_WRITERS_[geometry_1.getType()];\n            writer(feature, geometry_1);\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @return {Feature} Vertex feature.\n     * @private\n     */\n    Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(coordinates));\n            this.vertexFeature_ = vertexFeature;\n            this.overlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(coordinates);\n        }\n        return vertexFeature;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Modify.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        this.lastPointerEvent_ = mapBrowserEvent;\n        var handled;\n        if (!mapBrowserEvent.map.getView().getInteracting() &&\n            mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n            if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n                !this.ignoreNextSingleClick_) {\n                handled = this.removePoint();\n            }\n            else {\n                handled = true;\n            }\n        }\n        if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n            this.ignoreNextSingleClick_ = false;\n        }\n        return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     */\n    Modify.prototype.handleDragEvent = function (evt) {\n        this.ignoreNextSingleClick_ = false;\n        this.willModifyFeatures_(evt);\n        var vertex = evt.coordinate;\n        for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n            var dragSegment = this.dragSegments_[i];\n            var segmentData = dragSegment[0];\n            var depth = segmentData.depth;\n            var geometry = segmentData.geometry;\n            var coordinates = void 0;\n            var segment = segmentData.segment;\n            var index = dragSegment[1];\n            while (vertex.length < geometry.getStride()) {\n                vertex.push(segment[index][vertex.length]);\n            }\n            switch (geometry.getType()) {\n                case GeometryType.POINT:\n                    coordinates = vertex;\n                    segment[0] = vertex;\n                    segment[1] = vertex;\n                    break;\n                case GeometryType.MULTI_POINT:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index] = vertex;\n                    segment[0] = vertex;\n                    segment[1] = vertex;\n                    break;\n                case GeometryType.LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.CIRCLE:\n                    segment[0] = vertex;\n                    segment[1] = vertex;\n                    if (segmentData.index === CIRCLE_CENTER_INDEX) {\n                        this.changingFeature_ = true;\n                        geometry.setCenter(vertex);\n                        this.changingFeature_ = false;\n                    }\n                    else {\n                        // We're dragging the circle's circumference:\n                        this.changingFeature_ = true;\n                        var projection = evt.map.getView().getProjection();\n                        var radius = coordinateDistance(fromUserCoordinate(geometry.getCenter(), projection), fromUserCoordinate(vertex, projection));\n                        var userProjection = getUserProjection();\n                        if (userProjection) {\n                            var circleGeometry = geometry\n                                .clone()\n                                .transform(userProjection, projection);\n                            circleGeometry.setRadius(radius);\n                            radius = circleGeometry\n                                .transform(projection, userProjection)\n                                .getRadius();\n                        }\n                        geometry.setRadius(radius);\n                        this.changingFeature_ = false;\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (coordinates) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n            }\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Modify.prototype.handleDownEvent = function (evt) {\n        if (!this.condition_(evt)) {\n            return false;\n        }\n        var pixelCoordinate = evt.coordinate;\n        this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n        this.dragSegments_.length = 0;\n        this.modified_ = false;\n        var vertexFeature = this.vertexFeature_;\n        if (vertexFeature) {\n            var projection = evt.map.getView().getProjection();\n            var insertVertices = [];\n            var vertex = vertexFeature.getGeometry().getCoordinates();\n            var vertexExtent = boundingExtent([vertex]);\n            var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n            var componentSegments = {};\n            segmentDataMatches.sort(compareIndexes);\n            for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n                var segmentDataMatch = segmentDataMatches[i];\n                var segment = segmentDataMatch.segment;\n                var uid = getUid(segmentDataMatch.geometry);\n                var depth = segmentDataMatch.depth;\n                if (depth) {\n                    uid += '-' + depth.join('-'); // separate feature components\n                }\n                if (!componentSegments[uid]) {\n                    componentSegments[uid] = new Array(2);\n                }\n                if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n                    segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch, projection);\n                    if (coordinatesEqual(closestVertex, vertex) &&\n                        !componentSegments[uid][0]) {\n                        this.dragSegments_.push([segmentDataMatch, 0]);\n                        componentSegments[uid][0] = segmentDataMatch;\n                    }\n                    continue;\n                }\n                if (coordinatesEqual(segment[0], vertex) &&\n                    !componentSegments[uid][0]) {\n                    this.dragSegments_.push([segmentDataMatch, 0]);\n                    componentSegments[uid][0] = segmentDataMatch;\n                    continue;\n                }\n                if (coordinatesEqual(segment[1], vertex) &&\n                    !componentSegments[uid][1]) {\n                    // prevent dragging closed linestrings by the connecting node\n                    if ((segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\n                        segmentDataMatch.geometry.getType() ===\n                            GeometryType.MULTI_LINE_STRING) &&\n                        componentSegments[uid][0] &&\n                        componentSegments[uid][0].index === 0) {\n                        continue;\n                    }\n                    this.dragSegments_.push([segmentDataMatch, 1]);\n                    componentSegments[uid][1] = segmentDataMatch;\n                    continue;\n                }\n                if (getUid(segment) in this.vertexSegments_ &&\n                    !componentSegments[uid][0] &&\n                    !componentSegments[uid][1] &&\n                    this.insertVertexCondition_(evt)) {\n                    insertVertices.push([segmentDataMatch, vertex]);\n                }\n            }\n            if (insertVertices.length) {\n                this.willModifyFeatures_(evt);\n            }\n            for (var j = insertVertices.length - 1; j >= 0; --j) {\n                this.insertVertex_.apply(this, insertVertices[j]);\n            }\n        }\n        return !!this.vertexFeature_;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Modify.prototype.handleUpEvent = function (evt) {\n        for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n            var segmentData = this.dragSegments_[i][0];\n            var geometry = segmentData.geometry;\n            if (geometry.getType() === GeometryType.CIRCLE) {\n                // Update a circle object in the R* bush:\n                var coordinates = geometry.getCenter();\n                var centerSegmentData = segmentData.featureSegments[0];\n                var circumferenceSegmentData = segmentData.featureSegments[1];\n                centerSegmentData.segment[0] = coordinates;\n                centerSegmentData.segment[1] = coordinates;\n                circumferenceSegmentData.segment[0] = coordinates;\n                circumferenceSegmentData.segment[1] = coordinates;\n                this.rBush_.update(createExtent(coordinates), centerSegmentData);\n                var circleGeometry = geometry;\n                var userProjection = getUserProjection();\n                if (userProjection) {\n                    var projection = evt.map.getView().getProjection();\n                    circleGeometry = circleGeometry\n                        .clone()\n                        .transform(userProjection, projection);\n                    circleGeometry = fromCircle(circleGeometry).transform(projection, userProjection);\n                }\n                this.rBush_.update(circleGeometry.getExtent(), circumferenceSegmentData);\n            }\n            else {\n                this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n            }\n        }\n        if (this.modified_) {\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handlePointerMove_ = function (evt) {\n        this.lastPixel_ = evt.pixel;\n        this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_coordinate The pixel Coordinate.\n     * @private\n     */\n    Modify.prototype.handlePointerAtPixel_ = function (pixel, map, opt_coordinate) {\n        var pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n        var projection = map.getView().getProjection();\n        var sortByDistance = function (a, b) {\n            return (projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n                projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection));\n        };\n        var viewExtent = fromUserExtent(createExtent(pixelCoordinate, tempExtent), projection);\n        var buffer = map.getView().getResolution() * this.pixelTolerance_;\n        var box = toUserExtent(bufferExtent(viewExtent, buffer, tempExtent), projection);\n        var rBush = this.rBush_;\n        var nodes = rBush.getInExtent(box);\n        if (nodes.length > 0) {\n            nodes.sort(sortByDistance);\n            var node = nodes[0];\n            var closestSegment = node.segment;\n            var vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            var dist = coordinateDistance(pixel, vertexPixel);\n            if (dist <= this.pixelTolerance_) {\n                /** @type {Object<string, boolean>} */\n                var vertexSegments = {};\n                if (node.geometry.getType() === GeometryType.CIRCLE &&\n                    node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    this.snappedToVertex_ = true;\n                    this.createOrUpdateVertexFeature_(vertex);\n                }\n                else {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                    if (this.snappedToVertex_) {\n                        vertex =\n                            squaredDist1 > squaredDist2\n                                ? closestSegment[1]\n                                : closestSegment[0];\n                    }\n                    this.createOrUpdateVertexFeature_(vertex);\n                    for (var i = 1, ii = nodes.length; i < ii; ++i) {\n                        var segment = nodes[i].segment;\n                        if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                            coordinatesEqual(closestSegment[1], segment[1])) ||\n                            (coordinatesEqual(closestSegment[0], segment[1]) &&\n                                coordinatesEqual(closestSegment[1], segment[0]))) {\n                            vertexSegments[getUid(segment)] = true;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n                vertexSegments[getUid(closestSegment)] = true;\n                this.vertexSegments_ = vertexSegments;\n                return;\n            }\n        }\n        if (this.vertexFeature_) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n    };\n    /**\n     * @param {SegmentData} segmentData Segment data.\n     * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n     * @private\n     */\n    Modify.prototype.insertVertex_ = function (segmentData, vertex) {\n        var segment = segmentData.segment;\n        var feature = segmentData.feature;\n        var geometry = segmentData.geometry;\n        var depth = segmentData.depth;\n        var index = segmentData.index;\n        var coordinates;\n        while (vertex.length < geometry.getStride()) {\n            vertex.push(0);\n        }\n        switch (geometry.getType()) {\n            case GeometryType.MULTI_LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.MULTI_POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates.splice(index + 1, 0, vertex);\n                break;\n            default:\n                return;\n        }\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var rTree = this.rBush_;\n        rTree.remove(segmentData);\n        this.updateSegmentIndices_(geometry, index, depth, 1);\n        /** @type {SegmentData} */\n        var newSegmentData = {\n            segment: [segment[0], vertex],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index,\n        };\n        rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        this.dragSegments_.push([newSegmentData, 1]);\n        /** @type {SegmentData} */\n        var newSegmentData2 = {\n            segment: [vertex, segment[1]],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index + 1,\n        };\n        rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n        this.dragSegments_.push([newSegmentData2, 0]);\n        this.ignoreNextSingleClick_ = true;\n    };\n    /**\n     * Removes the vertex currently being pointed.\n     * @return {boolean} True when a vertex was removed.\n     * @api\n     */\n    Modify.prototype.removePoint = function () {\n        if (this.lastPointerEvent_ &&\n            this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n            var evt = this.lastPointerEvent_;\n            this.willModifyFeatures_(evt);\n            var removed = this.removeVertex_();\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n            return removed;\n        }\n        return false;\n    };\n    /**\n     * Removes a vertex from all matching features.\n     * @return {boolean} True when a vertex was removed.\n     * @private\n     */\n    Modify.prototype.removeVertex_ = function () {\n        var dragSegments = this.dragSegments_;\n        var segmentsByFeature = {};\n        var deleted = false;\n        var component, coordinates, dragSegment, geometry, i, index, left;\n        var newIndex, right, segmentData, uid;\n        for (i = dragSegments.length - 1; i >= 0; --i) {\n            dragSegment = dragSegments[i];\n            segmentData = dragSegment[0];\n            uid = getUid(segmentData.feature);\n            if (segmentData.depth) {\n                // separate feature components\n                uid += '-' + segmentData.depth.join('-');\n            }\n            if (!(uid in segmentsByFeature)) {\n                segmentsByFeature[uid] = {};\n            }\n            if (dragSegment[1] === 0) {\n                segmentsByFeature[uid].right = segmentData;\n                segmentsByFeature[uid].index = segmentData.index;\n            }\n            else if (dragSegment[1] == 1) {\n                segmentsByFeature[uid].left = segmentData;\n                segmentsByFeature[uid].index = segmentData.index + 1;\n            }\n        }\n        for (uid in segmentsByFeature) {\n            right = segmentsByFeature[uid].right;\n            left = segmentsByFeature[uid].left;\n            index = segmentsByFeature[uid].index;\n            newIndex = index - 1;\n            if (left !== undefined) {\n                segmentData = left;\n            }\n            else {\n                segmentData = right;\n            }\n            if (newIndex < 0) {\n                newIndex = 0;\n            }\n            geometry = segmentData.geometry;\n            coordinates = geometry.getCoordinates();\n            component = coordinates;\n            deleted = false;\n            switch (geometry.getType()) {\n                case GeometryType.MULTI_LINE_STRING:\n                    if (coordinates[segmentData.depth[0]].length > 2) {\n                        coordinates[segmentData.depth[0]].splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.LINE_STRING:\n                    if (coordinates.length > 2) {\n                        coordinates.splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    component = component[segmentData.depth[1]];\n                /* falls through */\n                case GeometryType.POLYGON:\n                    component = component[segmentData.depth[0]];\n                    if (component.length > 4) {\n                        if (index == component.length - 1) {\n                            index = 0;\n                        }\n                        component.splice(index, 1);\n                        deleted = true;\n                        if (index === 0) {\n                            // close the ring again\n                            component.pop();\n                            component.push(component[0]);\n                            newIndex = component.length - 1;\n                        }\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (deleted) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n                var segments = [];\n                if (left !== undefined) {\n                    this.rBush_.remove(left);\n                    segments.push(left.segment[0]);\n                }\n                if (right !== undefined) {\n                    this.rBush_.remove(right);\n                    segments.push(right.segment[1]);\n                }\n                if (left !== undefined && right !== undefined) {\n                    /** @type {SegmentData} */\n                    var newSegmentData = {\n                        depth: segmentData.depth,\n                        feature: segmentData.feature,\n                        geometry: segmentData.geometry,\n                        index: newIndex,\n                        segment: segments,\n                    };\n                    this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n                }\n                this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n                if (this.vertexFeature_) {\n                    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n                    this.vertexFeature_ = null;\n                }\n                dragSegments.length = 0;\n            }\n        }\n        return deleted;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {Array} coordinates Coordinates.\n     * @private\n     */\n    Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\n        this.changingFeature_ = true;\n        geometry.setCoordinates(coordinates);\n        this.changingFeature_ = false;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} index Index.\n     * @param {Array<number>|undefined} depth Depth.\n     * @param {number} delta Delta (1 or -1).\n     * @private\n     */\n    Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\n        this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\n            if (segmentDataMatch.geometry === geometry &&\n                (depth === undefined ||\n                    segmentDataMatch.depth === undefined ||\n                    equals(segmentDataMatch.depth, depth)) &&\n                segmentDataMatch.index > index) {\n                segmentDataMatch.index += delta;\n            }\n        });\n    };\n    return Modify;\n}(PointerInteraction));\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n    return a.index - b.index;\n}\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(pointCoordinates, segmentData, projection) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n                    .clone()\n                    .transform(userProjection, projection));\n            }\n            var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), fromUserCoordinate(pointCoordinates, projection));\n            var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n            return distanceToCircumference * distanceToCircumference;\n        }\n    }\n    var coordinate = fromUserCoordinate(pointCoordinates, projection);\n    tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n    tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n    return squaredDistanceToSegment(coordinate, tempSegment);\n}\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE &&\n        segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n                .clone()\n                .transform(userProjection, projection));\n        }\n        return toUserCoordinate(circleGeometry.getClosestPoint(fromUserCoordinate(pointCoordinates, projection)), projection);\n    }\n    var coordinate = fromUserCoordinate(pointCoordinates, projection);\n    tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n    tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n    return toUserCoordinate(closestOnSegment(coordinate, tempSegment), projection);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\nexport default Modify;\n//# sourceMappingURL=Modify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select',\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object.<number, import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nvar originalFeatureStyles = {};\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         */\n        _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n        /**\n         * @private\n         */\n        _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition\n            ? options.removeCondition\n            : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition\n            ? options.toggleCondition\n            : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @private\n         * @type {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n         */\n        _this.style_ =\n            options.style !== undefined ? options.style : getDefaultStyleFunction();\n        /**\n         * @private\n         * @type {import(\"../Collection.js\").default}\n         */\n        _this.features_ = options.features || new Collection();\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {import('../layer/Vector.js').default} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return /** @type {import('../layer/Vector.js').default} */ (this\n            .featureLayerAssociation_[getUid(feature)]);\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        if (currentMap && this.style_) {\n            this.features_.forEach(this.restorePreviousStyle_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n            if (this.style_) {\n                this.features_.forEach(this.applySelectedStyle_.bind(this));\n            }\n        }\n        else {\n            this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.applySelectedStyle_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.restorePreviousStyle_(feature);\n        }\n    };\n    /**\n     * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n     */\n    Select.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.applySelectedStyle_ = function (feature) {\n        var key = getUid(feature);\n        if (!(key in originalFeatureStyles)) {\n            originalFeatureStyles[key] = feature.getStyle();\n        }\n        feature.setStyle(this.style_);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.restorePreviousStyle_ = function (feature) {\n        var key = getUid(feature);\n        var selectInteractions = /** @type {Array<Select>} */ (this.getMap()\n            .getInteractions()\n            .getArray()\n            .filter(function (interaction) {\n            return (interaction instanceof Select &&\n                interaction.getStyle() &&\n                interaction.getFeatures().getArray().indexOf(feature) !== -1);\n        }));\n        if (selectInteractions.length > 0) {\n            feature.setStyle(selectInteractions[selectInteractions.length - 1].getStyle());\n        }\n        else {\n            feature.setStyle(originalFeatureStyles[key]);\n            delete originalFeatureStyles[key];\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n     * selected state of features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {Select}\n     */\n    Select.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var add = this.addCondition_(mapBrowserEvent);\n        var remove = this.removeCondition_(mapBrowserEvent);\n        var toggle = this.toggleCondition_(mapBrowserEvent);\n        var set = !add && !remove && !toggle;\n        var map = mapBrowserEvent.map;\n        var features = this.getFeatures();\n        var deselected = [];\n        var selected = [];\n        if (set) {\n            // Replace the currently selected feature(s) with the feature(s) at the\n            // pixel, or clear the selected feature(s) if there is no feature at\n            // the pixel.\n            clear(this.featureLayerAssociation_);\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var i = features.getLength() - 1; i >= 0; --i) {\n                var feature = features.item(i);\n                var index = selected.indexOf(feature);\n                if (index > -1) {\n                    // feature is already selected\n                    selected.splice(index, 1);\n                }\n                else {\n                    features.remove(feature);\n                    deselected.push(feature);\n                }\n            }\n            if (selected.length !== 0) {\n                features.extend(selected);\n            }\n        }\n        else {\n            // Modify the currently selected feature(s).\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    if ((add || toggle) && !includes(features.getArray(), feature)) {\n                        selected.push(feature);\n                        this.addFeatureLayerAssociation_(feature, layer);\n                    }\n                    else if ((remove || toggle) &&\n                        includes(features.getArray(), feature)) {\n                        deselected.push(feature);\n                        this.removeFeatureLayerAssociation_(feature);\n                    }\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var j = deselected.length - 1; j >= 0; --j) {\n                features.remove(deselected[j]);\n            }\n            features.extend(selected);\n        }\n        if (selected.length > 0 || deselected.length > 0) {\n            this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n        }\n        return true;\n    };\n    return Select;\n}(Interaction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { closestOnCircle, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, getUserProjection, toUserCoordinate, } from '../proj.js';\nimport { getUid } from '../util.js';\nimport { getValues } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n    if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n            .feature;\n    }\n    else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n        return /** @type {import(\"../Feature.js\").default} */ (\n        /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n    }\n}\nvar tempSegment = [];\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nvar Snap = /** @class */ (function (_super) {\n    __extends(Snap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Snap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.handleDownEvent) {\n            pointerOptions.handleDownEvent = TRUE;\n        }\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {import(\"../source/Vector.js\").default}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\n        /**\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featuresListenerKeys_ = [];\n        /**\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featureChangeListenerKeys_ = {};\n        /**\n         * Extents are preserved so indexed segment can be quickly removed\n         * when its feature geometry changes\n         * @type {Object<string, import(\"../extent.js\").Extent>}\n         * @private\n         */\n        _this.indexedFeaturesExtents_ = {};\n        /**\n         * If a feature geometry changes while a pointer drag|move event occurs, the\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\n         * event fired.\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.pendingFeatures_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Segment RTree for each layer\n         * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @const\n         * @private\n         * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_.bind(_this),\n            'LineString': _this.writeLineStringGeometry_.bind(_this),\n            'LinearRing': _this.writeLineStringGeometry_.bind(_this),\n            'Polygon': _this.writePolygonGeometry_.bind(_this),\n            'MultiPoint': _this.writeMultiPointGeometry_.bind(_this),\n            'MultiLineString': _this.writeMultiLineStringGeometry_.bind(_this),\n            'MultiPolygon': _this.writeMultiPolygonGeometry_.bind(_this),\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_.bind(_this),\n            'Circle': _this.writeCircleGeometry_.bind(_this),\n        };\n        return _this;\n    }\n    /**\n     * Add a feature to the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {boolean=} opt_listen Whether to listen to the feature change or not\n     *     Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.addFeature = function (feature, opt_listen) {\n        var register = opt_listen !== undefined ? opt_listen : true;\n        var feature_uid = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (segmentWriter) {\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n                segmentWriter(feature, geometry);\n            }\n        }\n        if (register) {\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\n        this.removeFeature(feature);\n    };\n    /**\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    Snap.prototype.getFeatures_ = function () {\n        var features;\n        if (this.features_) {\n            features = this.features_;\n        }\n        else if (this.source_) {\n            features = this.source_.getFeatures();\n        }\n        return features;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Snap.prototype.handleEvent = function (evt) {\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n        if (result.snapped) {\n            evt.coordinate = result.vertex.slice(0, 2);\n            evt.pixel = result.vertexPixel;\n        }\n        return _super.prototype.handleEvent.call(this, evt);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.removeFeature(feature);\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureChange_ = function (evt) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n        if (this.handlingDownUpSequence) {\n            var uid = getUid(feature);\n            if (!(uid in this.pendingFeatures_)) {\n                this.pendingFeatures_[uid] = feature;\n            }\n        }\n        else {\n            this.updateFeature_(feature);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Snap.prototype.handleUpEvent = function (evt) {\n        var featuresToUpdate = getValues(this.pendingFeatures_);\n        if (featuresToUpdate.length) {\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\n            this.pendingFeatures_ = {};\n        }\n        return false;\n    };\n    /**\n     * Remove a feature from the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n     *     or not. Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n        var feature_uid = getUid(feature);\n        var extent = this.indexedFeaturesExtents_[feature_uid];\n        if (extent) {\n            var rBush = this.rBush_;\n            var nodesToRemove_1 = [];\n            rBush.forEachInExtent(extent, function (node) {\n                if (feature === node.feature) {\n                    nodesToRemove_1.push(node);\n                }\n            });\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n                rBush.remove(nodesToRemove_1[i]);\n            }\n        }\n        if (unregister) {\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n            delete this.featureChangeListenerKeys_[feature_uid];\n        }\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Snap.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var keys = this.featuresListenerKeys_;\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n        if (currentMap) {\n            keys.forEach(unlistenByKey);\n            keys.length = 0;\n            features.forEach(this.forEachFeatureRemove_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            if (this.features_) {\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n            }\n            else if (this.source_) {\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n            }\n            features.forEach(this.forEachFeatureAdd_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @return {Result} Snap result\n     */\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n        var lowerLeft = map.getCoordinateFromPixel([\n            pixel[0] - this.pixelTolerance_,\n            pixel[1] + this.pixelTolerance_,\n        ]);\n        var upperRight = map.getCoordinateFromPixel([\n            pixel[0] + this.pixelTolerance_,\n            pixel[1] - this.pixelTolerance_,\n        ]);\n        var box = boundingExtent([lowerLeft, upperRight]);\n        var segments = this.rBush_.getInExtent(box);\n        // If snapping on vertices only, don't consider circles\n        if (this.vertex_ && !this.edge_) {\n            segments = segments.filter(function (segment) {\n                return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\n            });\n        }\n        var snapped = false;\n        var vertex = null;\n        var vertexPixel = null;\n        if (segments.length === 0) {\n            return {\n                snapped: snapped,\n                vertex: vertex,\n                vertexPixel: vertexPixel,\n            };\n        }\n        var projection = map.getView().getProjection();\n        var projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n        var closestSegmentData;\n        var minSquaredDistance = Infinity;\n        for (var i = 0; i < segments.length; ++i) {\n            var segmentData = segments[i];\n            tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n            tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n            var delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n            if (delta < minSquaredDistance) {\n                closestSegmentData = segmentData;\n                minSquaredDistance = delta;\n            }\n        }\n        var closestSegment = closestSegmentData.segment;\n        if (this.vertex_ && !this.edge_) {\n            var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            var squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n            var squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n            var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            if (dist <= this.pixelTolerance_) {\n                snapped = true;\n                vertex =\n                    squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n        }\n        else if (this.edge_) {\n            var isCircle = closestSegmentData.feature.getGeometry().getType() ===\n                GeometryType.CIRCLE;\n            if (isCircle) {\n                var circleGeometry = closestSegmentData.feature.getGeometry();\n                var userProjection = getUserProjection();\n                if (userProjection) {\n                    circleGeometry = circleGeometry\n                        .clone()\n                        .transform(userProjection, projection);\n                }\n                vertex = toUserCoordinate(closestOnCircle(projectedCoordinate, \n                /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)), projection);\n            }\n            else {\n                tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n                tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n                vertex = toUserCoordinate(closestOnSegment(projectedCoordinate, tempSegment), projection);\n            }\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                snapped = true;\n                if (this.vertex_ && !isCircle) {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    if (dist <= this.pixelTolerance_) {\n                        vertex =\n                            squaredDist1 > squaredDist2\n                                ? closestSegment[1]\n                                : closestSegment[0];\n                        vertexPixel = map.getPixelFromCoordinate(vertex);\n                    }\n                }\n            }\n        }\n        if (snapped) {\n            vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n        }\n        return {\n            snapped: snapped,\n            vertex: vertex,\n            vertexPixel: vertexPixel,\n        };\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Snap.prototype.updateFeature_ = function (feature) {\n        this.removeFeature(feature, false);\n        this.addFeature(feature, false);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var projection = this.getMap().getView().getProjection();\n        var circleGeometry = geometry;\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry\n                .clone()\n                .transform(userProjection, projection));\n        }\n        var polygon = fromCircle(circleGeometry);\n        if (userProjection) {\n            polygon.transform(projection, userProjection);\n        }\n        var coordinates = polygon.getCoordinates()[0];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment,\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n            if (segmentWriter) {\n                segmentWriter(feature, geometries[i]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment,\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = {\n                feature: feature,\n                segment: [coordinates, coordinates],\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = {\n                        feature: feature,\n                        segment: segment,\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = {\n            feature: feature,\n            segment: [coordinates, coordinates],\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment,\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    return Snap;\n}(PointerInteraction));\nexport default Snap;\n//# sourceMappingURL=Snap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport { TRUE } from '../functions.js';\nimport { getChangeEventType } from '../Object.js';\nimport { includes } from '../array.js';\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n    /**\n     * Triggered upon feature translation start.\n     * @event TranslateEvent#translatestart\n     * @api\n     */\n    TRANSLATESTART: 'translatestart',\n    /**\n     * Triggered upon feature translation.\n     * @event TranslateEvent#translating\n     * @api\n     */\n    TRANSLATING: 'translating',\n    /**\n     * Triggered upon feature translation end.\n     * @event TranslateEvent#translateend\n     * @api\n     */\n    TRANSLATEEND: 'translateend',\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nvar TranslateEvent = /** @class */ (function (_super) {\n    __extends(TranslateEvent, _super);\n    /**\n     * @param {TranslateEventType} type Type.\n     * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     */\n    function TranslateEvent(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being translated.\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * The coordinate of the start position before translation started.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.startCoordinate = startCoordinate;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return TranslateEvent;\n}(Event));\nexport { TranslateEvent };\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /** @class */ (function (_super) {\n    __extends(Translate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Translate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * The last position we translated to.\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.lastCoordinate_ = null;\n        /**\n         * The start position before translation started.\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.startCoordinate_ = null;\n        /**\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features !== undefined ? options.features : null;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @type {import(\"../Feature.js\").default}\n         * @private\n         */\n        _this.lastFeature_ = null;\n        _this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), _this.handleActiveChanged_);\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Translate.prototype.handleDownEvent = function (event) {\n        this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n        if (!this.lastCoordinate_ && this.lastFeature_) {\n            this.startCoordinate_ = event.coordinate;\n            this.lastCoordinate_ = event.coordinate;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate, this.startCoordinate_, event));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Translate.prototype.handleUpEvent = function (event) {\n        if (this.lastCoordinate_) {\n            this.lastCoordinate_ = null;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate, this.startCoordinate_, event));\n            // cleanup\n            this.startCoordinate_ = null;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    Translate.prototype.handleDragEvent = function (event) {\n        if (this.lastCoordinate_) {\n            var newCoordinate = event.coordinate;\n            var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];\n            var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            features.forEach(function (feature) {\n                var geom = feature.getGeometry();\n                geom.translate(deltaX_1, deltaY_1);\n                feature.setGeometry(geom);\n            });\n            this.lastCoordinate_ = newCoordinate;\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate, this.startCoordinate_, event));\n        }\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    Translate.prototype.handleMoveEvent = function (event) {\n        var elem = event.map.getViewport();\n        // Change the cursor to grab/grabbing if hovering any of the features managed\n        // by the interaction\n        if (this.featuresAtPixel_(event.pixel, event.map)) {\n            elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n            elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n        }\n        else {\n            elem.classList.remove('ol-grab', 'ol-grabbing');\n        }\n    };\n    /**\n     * Tests to see if the given coordinates intersects any of our selected\n     * features.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n     * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n     * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n     * coordinates.\n     * @private\n     */\n    Translate.prototype.featuresAtPixel_ = function (pixel, map) {\n        return map.forEachFeatureAtPixel(pixel, function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                if (!this.features_ || includes(this.features_.getArray(), feature)) {\n                    return feature;\n                }\n            }\n        }.bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_,\n        });\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Translate.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        _super.prototype.setMap.call(this, map);\n        this.updateState_(oldMap);\n    };\n    /**\n     * @private\n     */\n    Translate.prototype.handleActiveChanged_ = function () {\n        this.updateState_(null);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n     * @private\n     */\n    Translate.prototype.updateState_ = function (oldMap) {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            map = map || oldMap;\n            if (map) {\n                var elem = map.getViewport();\n                elem.classList.remove('ol-grab', 'ol-grabbing');\n            }\n        }\n    };\n    return Translate;\n}(PointerInteraction));\nexport default Translate;\n//# sourceMappingURL=Translate.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('ol/control/Control'), require('ol/Observable')) :\n\ttypeof define === 'function' && define.amd ? define(['ol/control/Control', 'ol/Observable'], factory) :\n\t(global.LayerSwitcher = factory(global.ol.control.Control,global.ol.Observable));\n}(this, (function (Control,ol_Observable) { 'use strict';\n\nControl = 'default' in Control ? Control['default'] : Control;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar CSS_PREFIX = 'layer-switcher-';\n\n/**\n * OpenLayers Layer Switcher Control.\n * See [the examples](./examples) for usage.\n * @constructor\n * @extends {ol/control/Control~Control}\n * @param {Object} opt_options Control options, extends ol/control/Control~Control#options adding:\n * @param {boolean} opt_options.startActive Whether panel is open when created. Defaults to false.\n * @param {String} opt_options.activationMode Event to use on the button to collapse or expand the panel.\n *   `'mouseover'` (default) the layerswitcher panel stays expanded while button or panel are hovered.\n *   `'click'` a click on the button toggles the layerswitcher visibility.\n * @param {String} opt_options.collapseLabel Text label to use for the expanded layerswitcher button. E.g.:\n *   `'»'` (default) or `'\\u00BB'`, `'-'` or `'\\u2212'`. Not visible if activation mode is `'mouseover'`\n * @param {String} opt_options.label Text label to use for the collapsed layerswitcher button. E.g.:\n *   `''` (default), `'«'` or `'\\u00AB'`, `'+'`.\n * @param {String} opt_options.tipLabel the button tooltip.\n * @param {String} opt_options.collapseTipLabel the button tooltip when the panel is open.\n * @param {String} opt_options.groupSelectStyle either `'none'` - groups don't get a checkbox,\n *   `'children'` (default) groups have a checkbox and affect child visibility or\n *   `'group'` groups have a checkbox but do not alter child visibility (like QGIS).\n * @param {boolean} opt_options.reverse Reverse the layer order. Defaults to true.\n */\n\nvar LayerSwitcher = function (_Control) {\n  inherits(LayerSwitcher, _Control);\n\n  function LayerSwitcher(opt_options) {\n    classCallCheck(this, LayerSwitcher);\n\n    var options = opt_options || {};\n\n    // TODO Next: Rename to showButtonTitle\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Legend';\n\n    // TODO Next: Rename to hideButtonTitle\n    var collapseTipLabel = options.collapseTipLabel ? options.collapseTipLabel : 'Collapse legend';\n\n    var element = document.createElement('div');\n\n    var _this = possibleConstructorReturn(this, (LayerSwitcher.__proto__ || Object.getPrototypeOf(LayerSwitcher)).call(this, { element: element, target: options.target }));\n\n    _this.activationMode = options.activationMode || 'mouseover';\n\n    _this.startActive = options.startActive === true;\n\n    // TODO Next: Rename to showButtonContent\n    var label = options.label !== undefined ? options.label : '';\n\n    // TODO Next: Rename to hideButtonContent\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\xBB';\n\n    _this.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n\n    _this.reverse = options.reverse !== false;\n\n    _this.mapListeners = [];\n\n    _this.hiddenClassName = 'ol-unselectable ol-control layer-switcher';\n    if (LayerSwitcher.isTouchDevice_()) {\n      _this.hiddenClassName += ' touch';\n    }\n    _this.shownClassName = 'shown';\n\n    element.className = _this.hiddenClassName;\n\n    var button = document.createElement('button');\n    button.setAttribute('title', tipLabel);\n    button.setAttribute('aria-label', tipLabel);\n    element.appendChild(button);\n\n    _this.panel = document.createElement('div');\n    _this.panel.className = 'panel';\n    element.appendChild(_this.panel);\n    LayerSwitcher.enableTouchScroll_(_this.panel);\n\n    var this_ = _this;\n\n    button.textContent = label;\n\n    element.classList.add(CSS_PREFIX + 'group-select-style-' + _this.groupSelectStyle);\n\n    element.classList.add(CSS_PREFIX + 'activation-mode-' + _this.activationMode);\n\n    if (_this.activationMode === 'click') {\n      // TODO Next: Remove in favour of layer-switcher-activation-mode-click\n      element.classList.add('activationModeClick');\n      if (_this.startActive) {\n        button.textContent = collapseLabel;\n        button.setAttribute('title', collapseTipLabel);\n        button.setAttribute('aria-label', collapseTipLabel);\n      }\n      button.onclick = function (e) {\n        e = e || window.event;\n        if (this_.element.classList.contains(this_.shownClassName)) {\n          this_.hidePanel();\n          button.textContent = label;\n          button.setAttribute('title', tipLabel);\n          button.setAttribute('aria-label', tipLabel);\n        } else {\n          this_.showPanel();\n          button.textContent = collapseLabel;\n          button.setAttribute('title', collapseTipLabel);\n          button.setAttribute('aria-label', collapseTipLabel);\n        }\n        e.preventDefault();\n      };\n    } else {\n      button.onmouseover = function (e) {\n        this_.showPanel();\n      };\n\n      button.onclick = function (e) {\n        e = e || window.event;\n        this_.showPanel();\n        e.preventDefault();\n      };\n\n      this_.panel.onmouseout = function (e) {\n        e = e || window.event;\n        if (!this_.panel.contains(e.toElement || e.relatedTarget)) {\n          this_.hidePanel();\n        }\n      };\n    }\n    return _this;\n  }\n\n  /**\n   * Set the map instance the control is associated with.\n   * @param {ol/Map~Map} map The map instance.\n   */\n\n\n  createClass(LayerSwitcher, [{\n    key: 'setMap',\n    value: function setMap(map) {\n      // Clean up listeners associated with the previous map\n      for (var i = 0; i < this.mapListeners.length; i++) {\n        ol_Observable.unByKey(this.mapListeners[i]);\n      }\n      this.mapListeners.length = 0;\n      // Wire up listeners etc. and store reference to new map\n      get(LayerSwitcher.prototype.__proto__ || Object.getPrototypeOf(LayerSwitcher.prototype), 'setMap', this).call(this, map);\n      if (map) {\n        if (this.startActive) {\n          this.showPanel();\n        } else {\n          this.renderPanel();\n        }\n        if (this.activationMode !== 'click') {\n          var this_ = this;\n          this.mapListeners.push(map.on('pointerdown', function () {\n            this_.hidePanel();\n          }));\n        }\n      }\n    }\n\n    /**\n     * Show the layer panel.\n     */\n\n  }, {\n    key: 'showPanel',\n    value: function showPanel() {\n      if (!this.element.classList.contains(this.shownClassName)) {\n        this.element.classList.add(this.shownClassName);\n        this.renderPanel();\n      }\n    }\n\n    /**\n     * Hide the layer panel.\n     */\n\n  }, {\n    key: 'hidePanel',\n    value: function hidePanel() {\n      if (this.element.classList.contains(this.shownClassName)) {\n        this.element.classList.remove(this.shownClassName);\n      }\n    }\n\n    /**\n     * Re-draw the layer panel to represent the current state of the layers.\n     */\n\n  }, {\n    key: 'renderPanel',\n    value: function renderPanel() {\n      this.dispatchEvent({ type: 'render' });\n      LayerSwitcher.renderPanel(this.getMap(), this.panel, {\n        groupSelectStyle: this.groupSelectStyle,\n        reverse: this.reverse\n      });\n      this.dispatchEvent({ type: 'rendercomplete' });\n    }\n\n    /**\n     * **Static** Re-draw the layer panel to represent the current state of the layers.\n     * @param {ol/Map~Map} map The OpenLayers Map instance to render layers for\n     * @param {Element} panel The DOM Element into which the layer tree will be rendered\n     * @param {Object} options Options for panel, group, and layers\n     * @param {String} options.groupSelectStyle either `'none'` - groups don't get a checkbox,\n     *   `'children'` (default) groups have a checkbox and affect child visibility or\n     *   `'group'` groups have a checkbox but do not alter child visibility (like QGIS).\n     * @param {boolean} options.reverse Reverse the layer order. Defaults to true.\n     */\n\n  }], [{\n    key: 'renderPanel',\n    value: function renderPanel(map, panel, options) {\n      // Create the event.\n      var render_event = new Event('render');\n      // Dispatch the event.\n      panel.dispatchEvent(render_event);\n\n      options = options || {};\n\n      options.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n\n      LayerSwitcher.ensureTopVisibleBaseLayerShown_(map);\n\n      while (panel.firstChild) {\n        panel.removeChild(panel.firstChild);\n      }\n\n      // Reset indeterminate state for all layers and groups before\n      // applying based on groupSelectStyle\n      LayerSwitcher.forEachRecursive(map, function (l, idx, a) {\n        l.set('indeterminate', false);\n      });\n\n      if (options.groupSelectStyle === 'children' || options.groupSelectStyle === 'none') {\n        // Set visibile and indeterminate state of groups based on\n        // their children's visibility\n        LayerSwitcher.setGroupVisibility(map);\n      } else if (options.groupSelectStyle === 'group') {\n        // Set child indetermiate state based on their parent's visibility\n        LayerSwitcher.setChildVisibility(map);\n      }\n\n      var ul = document.createElement('ul');\n      panel.appendChild(ul);\n      // passing two map arguments instead of lyr as we're passing the map as the root of the layers tree\n      LayerSwitcher.renderLayers_(map, map, ul, options, function render(changedLyr) {\n        // console.log('render');\n        LayerSwitcher.renderPanel(map, panel, options);\n      });\n\n      // Create the event.\n      var rendercomplete_event = new Event('rendercomplete');\n      // Dispatch the event.\n      panel.dispatchEvent(rendercomplete_event);\n    }\n  }, {\n    key: 'isBaseGroup',\n    value: function isBaseGroup(lyr) {\n      var lyrs = lyr.getLayers ? lyr.getLayers().getArray() : [];\n      return lyrs.length && lyrs[0].get('type') === 'base';\n    }\n  }, {\n    key: 'setGroupVisibility',\n    value: function setGroupVisibility(map) {\n      // Get a list of groups, with the deepest first\n      var groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n        return l.getLayers && !l.get('combine') && !LayerSwitcher.isBaseGroup(l);\n      }).reverse();\n      // console.log(groups.map(g => g.get('title')));\n      groups.forEach(function (group) {\n        // TODO Can we use getLayersArray, is it public in the esm build?\n        var descendantVisibility = group.getLayersArray().map(function (l) {\n          var state = l.getVisible();\n          // console.log('>', l.get('title'), state);\n          return state;\n        });\n        // console.log(descendantVisibility);\n        if (descendantVisibility.every(function (v) {\n          return v === true;\n        })) {\n          group.setVisible(true);\n          group.set('indeterminate', false);\n        } else if (descendantVisibility.every(function (v) {\n          return v === false;\n        })) {\n          group.setVisible(false);\n          group.set('indeterminate', false);\n        } else {\n          group.setVisible(true);\n          group.set('indeterminate', true);\n        }\n      });\n    }\n  }, {\n    key: 'setChildVisibility',\n    value: function setChildVisibility(map) {\n      // console.log('setChildVisibility');\n      var groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n        return l.getLayers && !l.get('combine') && !LayerSwitcher.isBaseGroup(l);\n      });\n      groups.forEach(function (group) {\n        // console.log(group.get('title'));\n        var groupVisible = group.getVisible();\n        var groupIndeterminate = group.get('indeterminate');\n        group.getLayers().getArray().forEach(function (l) {\n          // console.log('>', l.get('title'));\n          l.set('indeterminate', false);\n          if ((!groupVisible || groupIndeterminate) && l.getVisible()) {\n            l.set('indeterminate', true);\n          }\n        });\n      });\n    }\n\n    /**\n     * **Static** Ensure only the top-most base layer is visible if more than one is visible.\n     * @param {ol/Map~Map} map The map instance.\n     * @private\n     */\n\n  }, {\n    key: 'ensureTopVisibleBaseLayerShown_',\n    value: function ensureTopVisibleBaseLayerShown_(map) {\n      var lastVisibleBaseLyr;\n      LayerSwitcher.forEachRecursive(map, function (l, idx, a) {\n        if (l.get('type') === 'base' && l.getVisible()) {\n          lastVisibleBaseLyr = l;\n        }\n      });\n      if (lastVisibleBaseLyr) LayerSwitcher.setVisible_(map, lastVisibleBaseLyr, true);\n    }\n  }, {\n    key: 'getGroupsAndLayers',\n    value: function getGroupsAndLayers(lyr, filterFn) {\n      var layers = [];\n      filterFn = filterFn || function (l, idx, a) {\n        return true;\n      };\n      LayerSwitcher.forEachRecursive(lyr, function (l, idx, a) {\n        if (l.get('title')) {\n          if (filterFn(l, idx, a)) {\n            layers.push(l);\n          }\n        }\n      });\n      return layers;\n    }\n\n    /**\n     * **Static** Toggle the visible state of a layer.\n     * Takes care of hiding other layers in the same exclusive group if the layer\n     * is toggle to visible.\n     * @private\n     * @param {ol/Map~Map} map The map instance.\n     * @param {ol/layer/Base~BaseLayer} lyr layer whose visibility will be toggled.\n     * @param {Boolean} visible Set whether the layer is shown\n     * @param {String} groupSelectStyle either:\n     *   `'none'` - groups don't get a checkbox,\n     *   `'children'` (default) groups have a checkbox and affect child visibility or\n     *   `'group'` groups have a checkbox but do not alter child visibility (like QGIS).\n     */\n\n  }, {\n    key: 'setVisible_',\n    value: function setVisible_(map, lyr, visible, groupSelectStyle) {\n      // console.log(lyr.get('title'), visible, groupSelectStyle);\n      lyr.setVisible(visible);\n      if (visible && lyr.get('type') === 'base') {\n        // Hide all other base layers regardless of grouping\n        LayerSwitcher.forEachRecursive(map, function (l, idx, a) {\n          if (l != lyr && l.get('type') === 'base') {\n            l.setVisible(false);\n          }\n        });\n      }\n      if (lyr.getLayers && !lyr.get('combine') && groupSelectStyle === 'children') {\n        lyr.getLayers().forEach(function (l) {\n          LayerSwitcher.setVisible_(map, l, lyr.getVisible(), groupSelectStyle);\n        });\n      }\n    }\n\n    /**\n     * **Static** Render all layers that are children of a group.\n     * @private\n     * @param {ol/Map~Map} map The map instance.\n     * @param {ol/layer/Base~BaseLayer} lyr Layer to be rendered (should have a title property).\n     * @param {Number} idx Position in parent group list.\n     * @param {Object} options Options for groups and layers\n     * @param {String} options.groupSelectStyle either `'none'` - groups don't get a checkbox,\n     *   `'children'` (default) groups have a checkbox and affect child visibility or\n     *   `'group'` groups have a checkbox but do not alter child visibility (like QGIS).\n     * @param {boolean} options.reverse Reverse the layer order. Defaults to true.\n     * @param {Function} render Callback for change event on layer\n     * @returns {HTMLElement} List item containing layer control markup\n     */\n\n  }, {\n    key: 'renderLayer_',\n    value: function renderLayer_(map, lyr, idx, options, render) {\n      var li = document.createElement('li');\n\n      var lyrTitle = lyr.get('title');\n\n      var checkboxId = LayerSwitcher.uuid();\n\n      var label = document.createElement('label');\n\n      if (lyr.getLayers && !lyr.get('combine')) {\n        var isBaseGroup = LayerSwitcher.isBaseGroup(lyr);\n\n        li.classList.add('group');\n        if (isBaseGroup) {\n          li.classList.add(CSS_PREFIX + 'base-group');\n        }\n\n        // Group folding\n        if (lyr.get('fold')) {\n          li.classList.add(CSS_PREFIX + 'fold');\n          li.classList.add(CSS_PREFIX + lyr.get('fold'));\n          var btn = document.createElement('button');\n          btn.onclick = function (e) {\n            e = e || window.event;\n            LayerSwitcher.toggleFold_(lyr, li);\n            e.preventDefault();\n          };\n          li.appendChild(btn);\n        }\n\n        if (!isBaseGroup && options.groupSelectStyle != 'none') {\n          var _input = document.createElement('input');\n          _input.type = 'checkbox';\n          _input.id = checkboxId;\n          _input.checked = lyr.getVisible();\n          _input.indeterminate = lyr.get('indeterminate');\n          _input.onchange = function (e) {\n            LayerSwitcher.setVisible_(map, lyr, e.target.checked, options.groupSelectStyle);\n            render(lyr);\n          };\n          li.appendChild(_input);\n          label.htmlFor = checkboxId;\n        }\n\n        label.innerHTML = lyrTitle;\n        li.appendChild(label);\n        var ul = document.createElement('ul');\n        li.appendChild(ul);\n\n        LayerSwitcher.renderLayers_(map, lyr, ul, options, render);\n      } else {\n        li.className = 'layer';\n        var input = document.createElement('input');\n        if (lyr.get('type') === 'base') {\n          input.type = 'radio';\n          input.name = 'base';\n        } else {\n          input.type = 'checkbox';\n        }\n        input.id = checkboxId;\n        input.checked = lyr.get('visible');\n        input.indeterminate = lyr.get('indeterminate');\n        input.onchange = function (e) {\n          LayerSwitcher.setVisible_(map, lyr, e.target.checked, options.groupSelectStyle);\n          render(lyr);\n        };\n        li.appendChild(input);\n\n        label.htmlFor = checkboxId;\n        label.innerHTML = lyrTitle;\n\n        var rsl = map.getView().getResolution();\n        if (rsl > lyr.getMaxResolution() || rsl < lyr.getMinResolution()) {\n          label.className += ' disabled';\n        }\n\n        li.appendChild(label);\n      }\n\n      return li;\n    }\n\n    /**\n     * **Static** Render all layers that are children of a group.\n     * @private\n     * @param {ol/Map~Map} map The map instance.\n     * @param {ol/layer/Group~LayerGroup} lyr Group layer whose children will be rendered.\n     * @param {Element} elm DOM element that children will be appended to.\n     * @param {Object} options Options for groups and layers\n     * @param {String} options.groupSelectStyle either `'none'` - groups don't get a checkbox,\n     *   `'children'` (default) groups have a checkbox and affect child visibility or\n     *   `'group'` groups have a checkbox but do not alter child visibility (like QGIS).\n     * @param {boolean} options.reverse Reverse the layer order. Defaults to true.\n     * @param {Function} render Callback for change event on layer\n     */\n\n  }, {\n    key: 'renderLayers_',\n    value: function renderLayers_(map, lyr, elm, options, render) {\n      var lyrs = lyr.getLayers().getArray().slice();\n      if (options.reverse) lyrs = lyrs.reverse();\n      for (var i = 0, l; i < lyrs.length; i++) {\n        l = lyrs[i];\n        if (l.get('title')) {\n          elm.appendChild(LayerSwitcher.renderLayer_(map, l, i, options, render));\n        }\n      }\n    }\n\n    /**\n     * **Static** Call the supplied function for each layer in the passed layer group\n     * recursing nested groups.\n     * @param {ol/layer/Group~LayerGroup} lyr The layer group to start iterating from.\n     * @param {Function} fn Callback which will be called for each `ol/layer/Base~BaseLayer`\n     * found under `lyr`. The signature for `fn` is the same as `ol/Collection~Collection#forEach`\n     */\n\n  }, {\n    key: 'forEachRecursive',\n    value: function forEachRecursive(lyr, fn) {\n      lyr.getLayers().forEach(function (lyr, idx, a) {\n        fn(lyr, idx, a);\n        if (lyr.getLayers) {\n          LayerSwitcher.forEachRecursive(lyr, fn);\n        }\n      });\n    }\n\n    /**\n     * **Static** Generate a UUID\n     * Adapted from http://stackoverflow.com/a/2117523/526860\n     * @returns {String} UUID\n     */\n\n  }, {\n    key: 'uuid',\n    value: function uuid() {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0,\n            v = c == 'x' ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n      });\n    }\n\n    /**\n     * @private\n     * @desc Apply workaround to enable scrolling of overflowing content within an\n     * element. Adapted from https://gist.github.com/chrismbarr/4107472\n     * @param {HTMLElement} elm Element on which to enable touch scrolling\n     */\n\n  }, {\n    key: 'enableTouchScroll_',\n    value: function enableTouchScroll_(elm) {\n      if (LayerSwitcher.isTouchDevice_()) {\n        var scrollStartPos = 0;\n        elm.addEventListener('touchstart', function (event) {\n          scrollStartPos = this.scrollTop + event.touches[0].pageY;\n        }, false);\n        elm.addEventListener('touchmove', function (event) {\n          this.scrollTop = scrollStartPos - event.touches[0].pageY;\n        }, false);\n      }\n    }\n\n    /**\n     * @private\n     * @desc Determine if the current browser supports touch events. Adapted from\n     * https://gist.github.com/chrismbarr/4107472\n     * @returns {Boolean} True if client can have 'TouchEvent' event\n     */\n\n  }, {\n    key: 'isTouchDevice_',\n    value: function isTouchDevice_() {\n      try {\n        document.createEvent('TouchEvent');\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    /**\n     * Fold/unfold layer group\n     * @private\n     * @param {ol/layer/Group~LayerGroup} lyr Layer group to fold/unfold\n     * @param {HTMLElement} li List item containing layer group\n     */\n\n  }, {\n    key: 'toggleFold_',\n    value: function toggleFold_(lyr, li) {\n      li.classList.remove(CSS_PREFIX + lyr.get('fold'));\n      lyr.set('fold', lyr.get('fold') === 'open' ? 'close' : 'open');\n      li.classList.add(CSS_PREFIX + lyr.get('fold'));\n    }\n\n    /**\n     * If a valid groupSelectStyle value is not provided then return the default\n     * @private\n     * @param {String} groupSelectStyle The string to check for validity\n     * @returns {String} The value groupSelectStyle, if valid, the default otherwise\n     */\n\n  }, {\n    key: 'getGroupSelectStyle',\n    value: function getGroupSelectStyle(groupSelectStyle) {\n      return ['none', 'children', 'group'].indexOf(groupSelectStyle) >= 0 ? groupSelectStyle : 'children';\n    }\n  }]);\n  return LayerSwitcher;\n}(Control);\n\nif (window.ol && window.ol.control) {\n  window.ol.control.LayerSwitcher = LayerSwitcher;\n}\n\nreturn LayerSwitcher;\n\n})));\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport { abstract } from '../util.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { closestSquaredDistanceXY, createOrUpdateEmpty, extend, getCenter, } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {\n        /** @type {Array<Geometry>} */\n        var geometriesArray = [];\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].getType() === this.getType()) {\n                geometriesArray = geometriesArray.concat(\n                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n            }\n            else {\n                geometriesArray.push(geometries[i]);\n            }\n        }\n        return geometriesArray;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {GeometryCollection} Simplified GeometryCollection.\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * Clean up.\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assert } from '../asserts.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection(options.dataProjection ? options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null,\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ &&\n            'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<Feature>} Features.\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @param {GeoJSONGeometry} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(object, opt_options);\n    };\n    /**\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else if (crs['type'] === 'EPSG') {\n                projection = getProjection('EPSG:' + crs['properties']['code']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null,\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        if (!feature.hasProperties()) {\n            return object;\n        }\n        var properties = feature.getProperties();\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n            delete properties[feature.getGeometryName()];\n        }\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects,\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(\n            /** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(\n            /** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(\n            /** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(\n            /** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(\n            /** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(\n            /** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(\n            /** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(\n            /** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(\n            /** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(\n            /** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(\n            /** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(\n            /** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: [],\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries,\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = [];\n                object[property] = array;\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName].call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\nvar xmlSerializer_ = undefined;\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n    xmlSerializer_ = xmlSerializer;\n}\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n    if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n        xmlSerializer_ = new XMLSerializer();\n    }\n    return xmlSerializer_;\n}\nvar document_ = undefined;\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n    document_ = document;\n}\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n    if (document_ === undefined && typeof document !== 'undefined') {\n        document_ = document.implementation.createDocument('', '', null);\n    }\n    return document_;\n}\n//# sourceMappingURL=xml.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport { getXMLSerializer, isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /** @class */ (function (_super) {\n    __extends(XMLFeature, _super);\n    function XMLFeature() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {XMLSerializer}\n         * @private\n         */\n        _this.xmlSerializer_ = getXMLSerializer();\n        return _this;\n    }\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    XMLFeature.prototype.getType = function () {\n        return FormatType.XML;\n    };\n    /**\n     * Read a single feature.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeatureFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n        var features = this.readFeaturesFromDocument(doc, opt_options);\n        if (features.length > 0) {\n            return features[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read all features from a feature collection.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\n        if (!source) {\n            return [];\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeaturesFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeaturesFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeaturesFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(features, this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readGeometryFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readGeometryFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readGeometryFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    XMLFeature.prototype.readProjection = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readProjectionFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n        return this.dataProjection;\n    };\n    /**\n     * @param {Element} node Node.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\n        return this.dataProjection;\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     */\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n        var node = this.writeFeatureNode(feature, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @protected\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     * @api\n     */\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n        var node = this.writeFeaturesNode(features, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     */\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        var node = this.writeGeometryNode(geometry, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n        return null; // not implemented\n    };\n    return XMLFeature;\n}(FeatureFormat));\nexport default XMLFeature;\n//# sourceMappingURL=XMLFeature.js.map","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, getDocument } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, bool ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(getDocument().createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() +\n        '-' +\n        padNumber(date.getUTCMonth() + 1, 2) +\n        '-' +\n        padNumber(date.getUTCDate(), 2) +\n        'T' +\n        padNumber(date.getUTCHours(), 2) +\n        ':' +\n        padNumber(date.getUTCMinutes(), 2) +\n        ':' +\n        padNumber(date.getUTCSeconds(), 2) +\n        'Z';\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(getDocument().createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, parse, parseNode, pushParseAndPop, pushSerializeAndPop, } from '../xml.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { extend, includes } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport { readBoolean, readDecimal, readString, writeBooleanTextNode, writeCDATASection, writeDecimalTextNode, writeStringTextNode, } from './xsd.js';\nimport { toRadians } from '../math.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {import(\"../style/IconAnchorUnits\").default} xunits\n * @property {number} y\n * @property {import(\"../style/IconAnchorUnits\").default} yunits\n * @property {import(\"../style/IconOrigin.js\").default} origin\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2',\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS,\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser,\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR,\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC,\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1,\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2,\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8,\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0,\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @type {HTMLTextAreaElement}\n */\nvar TEXTAREA;\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle\n            ? options.defaultStyle\n            : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ =\n            options.extractStyles !== undefined ? options.extractStyles : true;\n        /**\n         * @type {boolean}\n         */\n        _this.writeStyles_ =\n            options.writeStyles !== undefined ? options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ =\n            options.showPointNames !== undefined ? options.showPointNames : true;\n        /**\n         * @type {null|string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this),\n        });\n        /** @type {Array<Feature>} */\n        // @ts-ignore\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack, this);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle.call(this, node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [\n            this.getReadOptions(node, opt_options),\n        ]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @protected\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n            node: kml,\n        };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    var imageStyle = foundStyle.getImage();\n    if (imageStyle) {\n        var imageSize = imageStyle.getImageSize();\n        if (imageSize === null) {\n            imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        if (imageSize.length == 2) {\n            var imageScale = imageStyle.getScaleArray();\n            // Offset the label to be centered to the right of the icon,\n            // if there is one.\n            textOffset[0] = (imageScale[0] * imageSize[0]) / 2;\n            textOffset[1] = (-imageScale[1] * imageSize[1]) / 2;\n            textAlign = 'left';\n        }\n    }\n    var textStyle = foundStyle.getText();\n    if (textStyle) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        textStyle = textStyle.clone();\n        textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        image: imageStyle,\n        text: textStyle,\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        var name = '';\n        var multiGeometryPoints = [];\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var type = geometry.getType();\n                if (type === GeometryType.GEOMETRY_COLLECTION) {\n                    multiGeometryPoints = geometry\n                        .getGeometriesArrayRecursive()\n                        .filter(function (geometry) {\n                        var type = geometry.getType();\n                        return (type === GeometryType.POINT ||\n                            type === GeometryType.MULTI_POINT);\n                    });\n                    drawName = multiGeometryPoints.length > 0;\n                }\n                else {\n                    drawName =\n                        type === GeometryType.POINT || type === GeometryType.MULTI_POINT;\n                }\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n            // convert any html character codes\n            if (drawName && name.search(/&[^&]+;/) > -1) {\n                if (!TEXTAREA) {\n                    TEXTAREA = document.createElement('textarea');\n                }\n                TEXTAREA.innerHTML = name;\n                name = TEXTAREA.value;\n            }\n        }\n        var featureStyle = defaultStyle;\n        if (style) {\n            featureStyle = style;\n        }\n        else if (styleUrl) {\n            featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        }\n        if (drawName) {\n            var nameStyle = createNameStyleFunction(featureStyle[0], name);\n            if (multiGeometryPoints.length > 0) {\n                // in multigeometries restrict the name style to points and create a\n                // style without image or text for geometries requiring fill or stroke\n                // including any polygon specific style if there is one\n                nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n                var baseStyle = new Style({\n                    geometry: featureStyle[0].getGeometry(),\n                    image: null,\n                    fill: featureStyle[0].getFill(),\n                    stroke: featureStyle[0].getStroke(),\n                    text: null,\n                });\n                return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n            }\n            return nameStyle;\n        }\n        return featureStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        // KML files in the wild occasionally forget the leading `#` on styleUrls\n        // defined in the same document.  Add a leading `#` if it enables to find\n        // a style.\n        if (!(styleValue in sharedStyles) && '#' + styleValue in sharedStyles) {\n            styleValue = '#' + styleValue;\n        }\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255,\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin,\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'color': makeObjectPropertySetter(readColor),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n        anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n        anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n        anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        anchor = [0.5, 0];\n        anchorXUnits = IconAnchorUnits.FRACTION;\n        anchorYUnits = IconAnchorUnits.FRACTION;\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    var color = /** @type {Array<number>|undefined} */ (object['color']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n            if (scale === undefined) {\n                scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n            }\n        }\n        var imageStyle = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: this.crossOrigin_,\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: src,\n            color: color,\n        });\n        styleObject['imageStyle'] = imageStyle;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: \n            /** @type {import(\"../color.js\").Color} */\n            ('color' in object ? object['color'] : DEFAULT_COLOR),\n        }),\n        scale: /** @type {number|undefined} */ (object['scale']),\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        flatCoordinates.push(x, y, z, 0);\n    }\n    else {\n        flatCoordinates.push(0, 0, 0, 0);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser,\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        flatCoordinates: [],\n        whens: [],\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n        flatCoordinates[4 * i + 3] = whens[i];\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n            flatCoordinates.length,\n        ]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == GeometryType.POINT) {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.LINE_STRING) {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.POLYGON) {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack, this);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = \n    /** @type {Fill} */\n    ('fillStyle' in styleObject\n        ? styleObject['fillStyle']\n        : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = \n    /** @type {Text} */\n    ('textStyle' in styleObject\n        ? styleObject['textStyle']\n        : DEFAULT_TEXT_STYLE);\n    var strokeStyle = \n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        // if the polystyle specifies no outline two styles are needed,\n        // one for non-polygon geometries where linestrings require a stroke\n        // and one for polygons where there should be no stroke\n        return [\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        return new GeometryCollection(geometry\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return (type !== GeometryType.POLYGON &&\n                                type !== GeometryType.MULTI_POLYGON);\n                        }));\n                    }\n                    else if (type !== GeometryType.POLYGON &&\n                        type !== GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                image: imageStyle,\n                stroke: strokeStyle,\n                text: textStyle,\n                zIndex: undefined,\n            }),\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === GeometryType.GEOMETRY_COLLECTION) {\n                        return new GeometryCollection(geometry\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return (type === GeometryType.POLYGON ||\n                                type === GeometryType.MULTI_POLYGON);\n                        }));\n                    }\n                    else if (type === GeometryType.POLYGON ||\n                        type === GeometryType.MULTI_POLYGON) {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                stroke: null,\n                zIndex: undefined,\n            }),\n        ];\n    }\n    return [\n        new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined,\n        }),\n    ];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = false;\n    hasTessellate = false;\n    hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name && featureObject.displayName) {\n        featureObject[name] = {\n            value: featureObject.value,\n            displayName: featureObject.displayName,\n            toString: function () {\n                return featureObject.value;\n            },\n        };\n    }\n    else if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north']),\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings.push(flatLinearRing);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = rgba.length == 4 ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = hex.length == 1 ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName),\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['href'], makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale',\n    'heading',\n    'Icon',\n    'color',\n    'hotSpot',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'color': makeChildAppender(writeColorTextNode),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var /** @type {Object<string, any>} */ properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src,\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS,\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScale();\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var color = style.getColor();\n    if (color) {\n        properties['color'] = color;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'scale',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': Number(style.getWidth()) || 1,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry',\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries = [];\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type === GeometryType.GEOMETRY_COLLECTION) {\n        /** @type {GeometryCollection} */ (geometry)\n            .getGeometriesArrayRecursive()\n            .forEach(function (geometry) {\n            var type = geometry.getType();\n            if (type === GeometryType.MULTI_POINT) {\n                geometries = geometries.concat(\n                /** @type {MultiPoint} */ (geometry).getPoints());\n            }\n            else if (type === GeometryType.MULTI_LINE_STRING) {\n                geometries = geometries.concat(\n                /** @type {MultiLineString} */ (geometry).getLineStrings());\n            }\n            else if (type === GeometryType.MULTI_POLYGON) {\n                geometries = geometries.concat(\n                /** @type {MultiPolygon} */ (geometry).getPolygons());\n            }\n            else if (type === GeometryType.POINT ||\n                type === GeometryType.LINE_STRING ||\n                type === GeometryType.POLYGON) {\n                geometries.push(geometry);\n            }\n            else {\n                assert(false, 39); // Unknown geometry type\n            }\n        });\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_POINT) {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_LINE_STRING) {\n        geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type === GeometryType.MULTI_POLYGON) {\n        geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name',\n    'open',\n    'visibility',\n    'address',\n    'phoneNumber',\n    'description',\n    'styleUrl',\n    'Style',\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = {\n        'address': 1,\n        'description': 1,\n        'name': 1,\n        'open': 1,\n        'phoneNumber': 1,\n        'styleUrl': 1,\n        'visibility': 1,\n    };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {})\n        .sort()\n        .filter(function (v) {\n        return !filter[v];\n    });\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var styleArray = Array.isArray(styles) ? styles : [styles];\n            var pointStyles = styleArray;\n            if (feature.getGeometry()) {\n                pointStyles = styleArray.filter(function (style) {\n                    var geometry = style.getGeometryFunction()(feature);\n                    if (geometry) {\n                        var type = geometry.getType();\n                        if (type === GeometryType.GEOMETRY_COLLECTION) {\n                            return /** @type {GeometryCollection} */ (geometry)\n                                .getGeometriesArrayRecursive()\n                                .filter(function (geometry) {\n                                var type = geometry.getType();\n                                return (type === GeometryType.POINT ||\n                                    type === GeometryType.MULTI_POINT);\n                            }).length;\n                        }\n                        return (type === GeometryType.POINT || type === GeometryType.MULTI_POINT);\n                    }\n                });\n            }\n            if (this.writeStyles_) {\n                var lineStyles = styleArray;\n                var polyStyles = styleArray;\n                if (feature.getGeometry()) {\n                    lineStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === GeometryType.GEOMETRY_COLLECTION) {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return (type === GeometryType.LINE_STRING ||\n                                        type === GeometryType.MULTI_LINE_STRING);\n                                }).length;\n                            }\n                            return (type === GeometryType.LINE_STRING ||\n                                type === GeometryType.MULTI_LINE_STRING);\n                        }\n                    });\n                    polyStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === GeometryType.GEOMETRY_COLLECTION) {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return (type === GeometryType.POLYGON ||\n                                        type === GeometryType.MULTI_POLYGON);\n                                }).length;\n                            }\n                            return (type === GeometryType.POLYGON ||\n                                type === GeometryType.MULTI_POLYGON);\n                        }\n                    });\n                }\n                properties['Style'] = {\n                    pointStyles: pointStyles,\n                    lineStyles: lineStyles,\n                    polyStyles: polyStyles,\n                };\n            }\n            if (pointStyles.length && properties['name'] === undefined) {\n                var textStyle = pointStyles[0].getText();\n                if (textStyle) {\n                    properties['name'] = textStyle.getText();\n                }\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude',\n    'tessellate',\n    'altitudeMode',\n    'coordinates',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'fill',\n    'outline',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'fill': makeChildAppender(writeBooleanTextNode),\n    'outline': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var fill = style.getFill();\n    var stroke = style.getStroke();\n    var properties = {\n        'color': fill ? fill.getColor() : undefined,\n        'fill': fill ? undefined : false,\n        'outline': stroke ? undefined : false,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle',\n    'LabelStyle',\n    'LineStyle',\n    'PolyStyle',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle),\n});\n/**\n * @param {Node} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    if (styles.pointStyles.length) {\n        var textStyle = styles.pointStyles[0].getText();\n        if (textStyle) {\n            properties['LabelStyle'] = textStyle;\n        }\n        var imageStyle = styles.pointStyles[0].getImage();\n        if (imageStyle &&\n            typeof ( /** @type {?} */(imageStyle).getSrc) === 'function') {\n            properties['IconStyle'] = imageStyle;\n        }\n    }\n    if (styles.lineStyles.length) {\n        var strokeStyle = styles.lineStyles[0].getStroke();\n        if (strokeStyle) {\n            properties['LineStyle'] = strokeStyle;\n        }\n    }\n    if (styles.polyStyles.length) {\n        var strokeStyle = styles.polyStyles[0].getStroke();\n        if (strokeStyle && !properties['LineStyle']) {\n            properties['LineStyle'] = strokeStyle;\n        }\n        properties['PolyStyle'] = styles.polyStyles[0];\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n//# sourceMappingURL=KML.js.map","/**\n * @module ol/webgl\n */\n/**\n * Constants taken from goog.webgl\n */\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STREAM_DRAW = 0x88e0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STATIC_DRAW = 0x88e4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var DYNAMIC_DRAW = 0x88e8;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n    var ii = CONTEXT_IDS.length;\n    for (var i = 0; i < ii; ++i) {\n        try {\n            var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n            if (context) {\n                return /** @type {!WebGLRenderingContext} */ (context);\n            }\n        }\n        catch (e) {\n            // pass\n        }\n    }\n    return null;\n}\n/**\n * @type {Array<string>}\n */\nvar supportedExtensions;\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n    if (!supportedExtensions) {\n        var canvas = document.createElement('canvas');\n        var gl = getContext(canvas);\n        if (gl) {\n            supportedExtensions = gl.getSupportedExtensions();\n        }\n    }\n    return supportedExtensions;\n}\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport { ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER } from '../webgl.js';\nimport { DYNAMIC_DRAW, STATIC_DRAW, STREAM_DRAW } from '../webgl.js';\nimport { assert } from '../asserts.js';\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport var BufferUsage = {\n    STATIC_DRAW: STATIC_DRAW,\n    STREAM_DRAW: STREAM_DRAW,\n    DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nvar WebGLArrayBuffer = /** @class */ (function () {\n    /**\n     * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {number=} opt_usage Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n     * Default is `DYNAMIC_DRAW`.\n     */\n    function WebGLArrayBuffer(type, opt_usage) {\n        /**\n         * @private\n         * @type {Float32Array|Uint32Array}\n         */\n        this.array = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.type = type;\n        assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n    }\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {number} size Array size\n     */\n    WebGLArrayBuffer.prototype.ofSize = function (size) {\n        this.array = new (getArrayClassForType(this.type))(size);\n    };\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {Array<number>} array Numerical array\n     */\n    WebGLArrayBuffer.prototype.fromArray = function (array) {\n        this.array = getArrayClassForType(this.type).from(array);\n    };\n    /**\n     * Populates the buffer with a raw binary array buffer.\n     * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n     * initialized for the same typed array class.\n     */\n    WebGLArrayBuffer.prototype.fromArrayBuffer = function (buffer) {\n        this.array = new (getArrayClassForType(this.type))(buffer);\n    };\n    /**\n     * @return {number} Buffer type.\n     */\n    WebGLArrayBuffer.prototype.getType = function () {\n        return this.type;\n    };\n    /**\n     * Will return null if the buffer was not initialized\n     * @return {Float32Array|Uint32Array} Array.\n     */\n    WebGLArrayBuffer.prototype.getArray = function () {\n        return this.array;\n    };\n    /**\n     * @return {number} Usage.\n     */\n    WebGLArrayBuffer.prototype.getUsage = function () {\n        return this.usage;\n    };\n    /**\n     * Will return 0 if the buffer is not initialized\n     * @return {number} Array size\n     */\n    WebGLArrayBuffer.prototype.getSize = function () {\n        return this.array ? this.array.length : 0;\n    };\n    return WebGLArrayBuffer;\n}());\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @returns {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n    switch (type) {\n        case ARRAY_BUFFER:\n            return Float32Array;\n        case ELEMENT_ARRAY_BUFFER:\n            return Uint32Array;\n        default:\n            return Float32Array;\n    }\n}\nexport default WebGLArrayBuffer;\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    LOST: 'webglcontextlost',\n    RESTORED: 'webglcontextrestored',\n};\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function WebGLPostProcessingPass(options) {\n        this.gl_ = options.webGlContext;\n        var gl = this.gl_;\n        this.scaleRatio_ = options.scaleRatio || 1;\n        this.renderTargetTexture_ = gl.createTexture();\n        this.renderTargetTextureSize_ = null;\n        this.frameBuffer_ = gl.createFramebuffer();\n        // compile the program for the frame buffer\n        // TODO: make compilation errors show up\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n        gl.compileShader(vertexShader);\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n        gl.compileShader(fragmentShader);\n        this.renderTargetProgram_ = gl.createProgram();\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\n        gl.linkProgram(this.renderTargetProgram_);\n        // bind the vertices buffer for the frame buffer\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\n        var verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n        /**\n         * Holds info about custom uniforms used in the post processing pass\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        this.uniforms_ = [];\n        options.uniforms &&\n            Object.keys(options.uniforms).forEach(function (name) {\n                this.uniforms_.push({\n                    value: options.uniforms[name],\n                    location: gl.getUniformLocation(this.renderTargetProgram_, name),\n                });\n            }.bind(this));\n    }\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Initialize the render target texture of the post process, make sure it is at the\n     * right size and bind it as a render target for the next draw calls.\n     * The last step to be initialized will be the one where the primitives are rendered.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\n        var gl = this.getGL();\n        var textureSize = [\n            gl.drawingBufferWidth * this.scaleRatio_,\n            gl.drawingBufferHeight * this.scaleRatio_,\n        ];\n        // rendering goes to my buffer\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n        gl.viewport(0, 0, textureSize[0], textureSize[1]);\n        // if size has changed: adjust canvas & render target texture\n        if (!this.renderTargetTextureSize_ ||\n            this.renderTargetTextureSize_[0] !== textureSize[0] ||\n            this.renderTargetTextureSize_[1] !== textureSize[1]) {\n            this.renderTargetTextureSize_ = textureSize;\n            // create a new texture\n            var level = 0;\n            var internalFormat = gl.RGBA;\n            var border = 0;\n            var format = gl.RGBA;\n            var type = gl.UNSIGNED_BYTE;\n            var data = null;\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, textureSize[0], textureSize[1], border, format, type, data);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            // bind the texture to the framebuffer\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n        }\n    };\n    /**\n     * Render to the next postprocessing pass (or to the canvas if final pass).\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass) {\n        var gl = this.getGL();\n        var size = frameState.size;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n        // render the frame buffer to the canvas\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.useProgram(this.renderTargetProgram_);\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\n        this.applyUniforms(frameState);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    };\n    /**\n     * @returns {WebGLFramebuffer} Frame buffer\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n        return this.frameBuffer_;\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 1;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                if (value instanceof ImageData) {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n                }\n                else {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots\n                gl.uniform1i(uniform.location, textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(uniform.location, value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(uniform.location, value);\n            }\n        });\n    };\n    return WebGLPostProcessingPass;\n}());\nexport default WebGLPostProcessingPass;\n//# sourceMappingURL=PostProcessingPass.js.map","/**\n * @module ol/vec/mat4\n */\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n    mat4[0] = transform[0];\n    mat4[1] = transform[1];\n    mat4[4] = transform[2];\n    mat4[5] = transform[3];\n    mat4[12] = transform[4];\n    mat4[13] = transform[5];\n    return mat4;\n}\n//# sourceMappingURL=mat4.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport { FLOAT, UNSIGNED_BYTE, UNSIGNED_INT, UNSIGNED_SHORT, getContext, getSupportedExtensions, } from '../webgl.js';\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\nimport { compose as composeTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, } from '../transform.js';\nimport { create, fromTransform } from '../vec/mat4.js';\nimport { getUid } from '../util.js';\nimport { includes } from '../array.js';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer\n * @property {WebGLBuffer} webGlBuffer\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport var ShaderType = {\n    FRAGMENT_SHADER: 0x8b30,\n    VERTEX_SHADER: 0x8b31,\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport var DefaultUniform = {\n    PROJECTION_MATRIX: 'u_projectionMatrix',\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n    TIME: 'u_time',\n    ZOOM: 'u_zoom',\n    RESOLUTION: 'u_resolution',\n};\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport var AttributeType = {\n    UNSIGNED_BYTE: UNSIGNED_BYTE,\n    UNSIGNED_SHORT: UNSIGNED_SHORT,\n    UNSIGNED_INT: UNSIGNED_INT,\n    FLOAT: FLOAT,\n};\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue=} value Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray_} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nvar WebGLHelper = /** @class */ (function (_super) {\n    __extends(WebGLHelper, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WebGLHelper(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /** @private */\n        _this.boundHandleWebGLContextLost_ = _this.handleWebGLContextLost.bind(_this);\n        /** @private */\n        _this.boundHandleWebGLContextRestored_ = _this.handleWebGLContextRestored.bind(_this);\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = document.createElement('canvas');\n        _this.canvas_.style.position = 'absolute';\n        _this.canvas_.style.left = '0';\n        /**\n         * @private\n         * @type {WebGLRenderingContext}\n         */\n        _this.gl_ = getContext(_this.canvas_);\n        var gl = _this.getGL();\n        /**\n         * @private\n         * @type {!Object<string, BufferCacheEntry>}\n         */\n        _this.bufferCache_ = {};\n        /**\n         * @private\n         * @type {WebGLProgram}\n         */\n        _this.currentProgram_ = null;\n        assert(includes(getSupportedExtensions(), 'OES_element_index_uint'), 63);\n        gl.getExtension('OES_element_index_uint');\n        _this.canvas_.addEventListener(ContextEventType.LOST, _this.boundHandleWebGLContextLost_);\n        _this.canvas_.addEventListener(ContextEventType.RESTORED, _this.boundHandleWebGLContextRestored_);\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetRotateMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetScaleMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.tmpMat4_ = create();\n        /**\n         * @private\n         * @type {Object.<string, WebGLUniformLocation>}\n         */\n        _this.uniformLocations_ = {};\n        /**\n         * @private\n         * @type {Object.<string, number>}\n         */\n        _this.attribLocations_ = {};\n        /**\n         * Holds info about custom uniforms used in the post processing pass.\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        _this.uniforms_ = [];\n        if (options.uniforms) {\n            for (var name_1 in options.uniforms) {\n                _this.uniforms_.push({\n                    name: name_1,\n                    value: options.uniforms[name_1],\n                });\n            }\n        }\n        /**\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\n         * the frame buffer logic).\n         * @type {Array<WebGLPostProcessingPass>}\n         * @private\n         */\n        _this.postProcessPasses_ = options.postProcesses\n            ? options.postProcesses.map(function (options) {\n                return new WebGLPostProcessingPass({\n                    webGlContext: gl,\n                    scaleRatio: options.scaleRatio,\n                    vertexShader: options.vertexShader,\n                    fragmentShader: options.fragmentShader,\n                    uniforms: options.uniforms,\n                });\n            })\n            : [new WebGLPostProcessingPass({ webGlContext: gl })];\n        /**\n         * @type {string|null}\n         * @private\n         */\n        _this.shaderCompileErrors_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.startTime_ = Date.now();\n        return _this;\n    }\n    /**\n     * Just bind the buffer if it's in the cache. Otherwise create\n     * the WebGL buffer, bind it, populate it, and add an entry to\n     * the cache.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.bindBuffer = function (buffer) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buffer);\n        var bufferCache = this.bufferCache_[bufferKey];\n        if (!bufferCache) {\n            var webGlBuffer = gl.createBuffer();\n            bufferCache = {\n                buffer: buffer,\n                webGlBuffer: webGlBuffer,\n            };\n            this.bufferCache_[bufferKey] = bufferCache;\n        }\n        gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n    };\n    /**\n     * Update the data contained in the buffer array; this is required for the\n     * new data to be rendered\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.flushBufferData = function (buffer) {\n        var gl = this.getGL();\n        this.bindBuffer(buffer);\n        gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n    };\n    /**\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\n     */\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buf);\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\n        if (!gl.isContextLost()) {\n            gl.deleteBuffer(bufferCacheEntry.buffer);\n        }\n        delete this.bufferCache_[bufferKey];\n    };\n    /**\n     * Clean up.\n     */\n    WebGLHelper.prototype.disposeInternal = function () {\n        this.canvas_.removeEventListener(ContextEventType.LOST, this.boundHandleWebGLContextLost_);\n        this.canvas_.removeEventListener(ContextEventType.RESTORED, this.boundHandleWebGLContextRestored_);\n    };\n    /**\n     * Clear the buffer & set the viewport to draw.\n     * Post process passes will be initialized here, the first one being bound as a render target for\n     * subsequent draw calls.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.prepareDraw = function (frameState) {\n        var gl = this.getGL();\n        var canvas = this.getCanvas();\n        var size = frameState.size;\n        var pixelRatio = frameState.pixelRatio;\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n        gl.useProgram(this.currentProgram_);\n        // loop backwards in post processes list\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n            this.postProcessPasses_[i].init(frameState);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Clear the render target & bind it for future draw operations.\n     * This is similar to `prepareDraw`, only post processes will not be applied.\n     * Note: the whole viewport will be drawn to the render target, regardless of its size.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n     * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n     */\n    WebGLHelper.prototype.prepareDrawToRenderTarget = function (frameState, renderTarget, opt_disableAlphaBlend) {\n        var gl = this.getGL();\n        var size = renderTarget.getSize();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n     * @param {number} start Start index.\n     * @param {number} end End index.\n     * @api\n     */\n    WebGLHelper.prototype.drawElements = function (start, end) {\n        var gl = this.getGL();\n        var elementType = gl.UNSIGNED_INT;\n        var elementSize = 4;\n        var numItems = end - start;\n        var offsetInBytes = start * elementSize;\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n    };\n    /**\n     * Apply the successive post process passes which will eventually render to the actual canvas.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.finalizeDraw = function (frameState) {\n        // apply post processes using the next one as target\n        for (var i = 0; i < this.postProcessPasses_.length; i++) {\n            this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas.\n     * @api\n     */\n    WebGLHelper.prototype.getCanvas = function () {\n        return this.canvas_;\n    };\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLHelper.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n        if (rotation !== 0) {\n            rotateTransform(offsetRotateMatrix, -rotation);\n        }\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n        this.setUniformFloatValue(DefaultUniform.TIME, (Date.now() - this.startTime_) * 0.001);\n        this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n        this.setUniformFloatValue(DefaultUniform.RESOLUTION, frameState.viewState.resolution);\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 0;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement ||\n                value instanceof HTMLImageElement ||\n                value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.prevValue = undefined;\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                var imageReady = !(value instanceof HTMLImageElement) ||\n                    /** @type {HTMLImageElement} */ (value).complete;\n                if (imageReady && uniform.prevValue !== value) {\n                    uniform.prevValue = value;\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots by increasing index\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n            }\n            else if (Array.isArray(value) && value.length === 6) {\n                this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\n            }\n            else if (Array.isArray(value) && value.length <= 4) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\n            }\n        }.bind(this));\n    };\n    /**\n     * Use a program.  If the program is already in use, this will return `false`.\n     * @param {WebGLProgram} program Program.\n     * @return {boolean} Changed.\n     * @api\n     */\n    WebGLHelper.prototype.useProgram = function (program) {\n        if (program == this.currentProgram_) {\n            return false;\n        }\n        else {\n            var gl = this.getGL();\n            gl.useProgram(program);\n            this.currentProgram_ = program;\n            this.uniformLocations_ = {};\n            this.attribLocations_ = {};\n            return true;\n        }\n    };\n    /**\n     * Will attempt to compile a vertex or fragment shader based on source\n     * On error, the shader will be returned but\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n     * Use `gl.getShaderInfoLog(shader)` to have details\n     * @param {string} source Shader source\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n     * @return {WebGLShader} Shader object\n     */\n    WebGLHelper.prototype.compileShader = function (source, type) {\n        var gl = this.getGL();\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        return shader;\n    };\n    /**\n     * Create a program for a vertex and fragment shader. The shaders compilation may have failed:\n     * use `WebGLHelper.getShaderCompileErrors()`to have details if any.\n     * @param {string} fragmentShaderSource Fragment shader source.\n     * @param {string} vertexShaderSource Vertex shader source.\n     * @return {WebGLProgram} Program\n     * @api\n     */\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n        var gl = this.getGL();\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n        this.shaderCompileErrors_ = null;\n        if (gl.getShaderInfoLog(fragmentShader)) {\n            this.shaderCompileErrors_ = \"Fragment shader compilation failed:\\n\" + gl.getShaderInfoLog(fragmentShader);\n        }\n        if (gl.getShaderInfoLog(vertexShader)) {\n            this.shaderCompileErrors_ =\n                (this.shaderCompileErrors_ || '') +\n                    (\"Vertex shader compilation failed:\\n\" + gl.getShaderInfoLog(vertexShader));\n        }\n        var program = gl.createProgram();\n        gl.attachShader(program, fragmentShader);\n        gl.attachShader(program, vertexShader);\n        gl.linkProgram(program);\n        return program;\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors description, or null if last compilation was successful\n     * @api\n     */\n    WebGLHelper.prototype.getShaderCompileErrors = function () {\n        return this.shaderCompileErrors_;\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Uniform name\n     * @return {WebGLUniformLocation} uniformLocation\n     * @api\n     */\n    WebGLHelper.prototype.getUniformLocation = function (name) {\n        if (this.uniformLocations_[name] === undefined) {\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n        }\n        return this.uniformLocations_[name];\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Attribute name\n     * @return {number} attribLocation\n     * @api\n     */\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\n        if (this.attribLocations_[name] === undefined) {\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n        }\n        return this.attribLocations_[name];\n    };\n    /**\n     * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n     * The resulting transform can be used to convert world space coordinates to view coordinates.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../transform\").Transform} transform Transform to update.\n     * @return {import(\"../transform\").Transform} The updated transform object.\n     * @api\n     */\n    WebGLHelper.prototype.makeProjectionTransform = function (frameState, transform) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var resolution = frameState.viewState.resolution;\n        var center = frameState.viewState.center;\n        resetTransform(transform);\n        composeTransform(transform, 0, 0, 2 / (resolution * size[0]), 2 / (resolution * size[1]), -rotation, -center[0], -center[1]);\n        return transform;\n    };\n    /**\n     * Give a value for a standard float uniform\n     * @param {string} uniform Uniform name\n     * @param {number} value Value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a standard matrix4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Matrix value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n    };\n    /**\n     * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n     * internally.\n     * @param {string} attribName Attribute name\n     * @param {number} size Number of components per attributes\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\n     * @param {number} offset Offset in bytes\n     * @private\n     */\n    WebGLHelper.prototype.enableAttributeArray_ = function (attribName, size, type, stride, offset) {\n        var location = this.getAttributeLocation(attribName);\n        // the attribute has not been found in the shaders; do not enable it\n        if (location < 0) {\n            return;\n        }\n        this.getGL().enableVertexAttribArray(location);\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n    };\n    /**\n     * Will enable the following attributes to be read from the currently bound buffer,\n     * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n     * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n     * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n     * @api\n     */\n    WebGLHelper.prototype.enableAttributes = function (attributes) {\n        var stride = computeAttributesStride(attributes);\n        var offset = 0;\n        for (var i = 0; i < attributes.length; i++) {\n            var attr = attributes[i];\n            this.enableAttributeArray_(attr.name, attr.size, attr.type || FLOAT, stride, offset);\n            offset += attr.size * getByteSizeFromType(attr.type);\n        }\n    };\n    /**\n     * WebGL context was lost\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\n        clear(this.bufferCache_);\n        this.currentProgram_ = null;\n    };\n    /**\n     * WebGL context was restored\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextRestored = function () { };\n    /**\n     * Will create or reuse a given webgl texture and apply the given size. If no image data\n     * specified, the texture will be empty, otherwise image data will be used and the `size`\n     * parameter will be ignored.\n     * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n     * @param {Array<number>} size Expected size of the texture\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n     * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n     * @return {WebGLTexture} The generated texture\n     * @api\n     */\n    WebGLHelper.prototype.createTexture = function (size, opt_data, opt_texture) {\n        var gl = this.getGL();\n        var texture = opt_texture || gl.createTexture();\n        // set params & size\n        var level = 0;\n        var internalFormat = gl.RGBA;\n        var border = 0;\n        var format = gl.RGBA;\n        var type = gl.UNSIGNED_BYTE;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        if (opt_data) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, opt_data);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, size[0], size[1], border, format, type, null);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        return texture;\n    };\n    return WebGLHelper;\n}(Disposable));\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @returns {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n    var stride = 0;\n    for (var i = 0; i < attributes.length; i++) {\n        var attr = attributes[i];\n        stride += attr.size * getByteSizeFromType(attr.type);\n    }\n    return stride;\n}\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @returns {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n    switch (type) {\n        case AttributeType.UNSIGNED_BYTE:\n            return Uint8Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_SHORT:\n            return Uint16Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_INT:\n            return Uint32Array.BYTES_PER_ELEMENT;\n        case AttributeType.FLOAT:\n        default:\n            return Float32Array.BYTES_PER_ELEMENT;\n    }\n}\nexport default WebGLHelper;\n//# sourceMappingURL=Helper.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport WebGLHelper from '../../webgl/Helper.js';\n/**\n * @enum {string}\n */\nexport var WebGLWorkerMessageType = {\n    GENERATE_BUFFERS: 'GENERATE_BUFFERS',\n};\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar WebGLLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     * @param {Options=} [opt_options] Options.\n     */\n    function WebGLLayerRenderer(layer, opt_options) {\n        var _this = _super.call(this, layer) || this;\n        var options = opt_options || {};\n        /**\n         * @type {WebGLHelper}\n         * @protected\n         */\n        _this.helper = new WebGLHelper({\n            postProcesses: options.postProcesses,\n            uniforms: options.uniforms,\n        });\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    WebGLLayerRenderer.prototype.disposeInternal = function () {\n        this.helper.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors, or null if last compilation was successful\n     * @api\n     */\n    WebGLLayerRenderer.prototype.getShaderCompileErrors = function () {\n        return this.helper.getShaderCompileErrors();\n    };\n    return WebGLLayerRenderer;\n}(LayerRenderer));\nvar tmpArray_ = [];\nvar bufferPositions_ = { vertexPosition: 0, indexPosition: 0 };\nfunction writePointVertex(buffer, pos, x, y, index) {\n    buffer[pos + 0] = x;\n    buffer[pos + 1] = y;\n    buffer[pos + 2] = index;\n}\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(instructions, elementIndex, vertexBuffer, indexBuffer, customAttributesCount, bufferPositions) {\n    // This is for x, y and index\n    var baseVertexAttrsCount = 3;\n    var baseInstructionsCount = 2;\n    var stride = baseVertexAttrsCount + customAttributesCount;\n    var x = instructions[elementIndex + 0];\n    var y = instructions[elementIndex + 1];\n    // read custom numerical attributes on the feature\n    var customAttrs = tmpArray_;\n    customAttrs.length = customAttributesCount;\n    for (var i = 0; i < customAttrs.length; i++) {\n        customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n    }\n    var vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n    var iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n    var baseIndex = vPos / stride;\n    // push vertices for each of the four quad corners (first standard then custom attributes)\n    writePointVertex(vertexBuffer, vPos, x, y, 0);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, 1);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, 2);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    writePointVertex(vertexBuffer, vPos, x, y, 3);\n    customAttrs.length &&\n        vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n    vPos += stride;\n    indexBuffer[iPos++] = baseIndex;\n    indexBuffer[iPos++] = baseIndex + 1;\n    indexBuffer[iPos++] = baseIndex + 3;\n    indexBuffer[iPos++] = baseIndex + 1;\n    indexBuffer[iPos++] = baseIndex + 2;\n    indexBuffer[iPos++] = baseIndex + 3;\n    bufferPositions_.vertexPosition = vPos;\n    bufferPositions_.indexPosition = iPos;\n    return bufferPositions_;\n}\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n    var canvas = document.createElement('canvas');\n    var image = canvas.getContext('2d').createImageData(1, 1);\n    image.data[0] = 255;\n    image.data[1] = 255;\n    image.data[2] = 255;\n    image.data[3] = 255;\n    return image;\n}\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, opt_array) {\n    var array = opt_array || [];\n    var radix = 256;\n    var divide = radix - 1;\n    array[0] = Math.floor(id / radix / radix / radix) / divide;\n    array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n    array[2] = (Math.floor(id / radix) % radix) / divide;\n    array[3] = (id % radix) / divide;\n    return array;\n}\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n    var id = 0;\n    var radix = 256;\n    var mult = radix - 1;\n    id += Math.round(color[0] * radix * radix * radix * mult);\n    id += Math.round(color[1] * radix * radix * mult);\n    id += Math.round(color[2] * radix * mult);\n    id += Math.round(color[3] * mult);\n    return id;\n}\nexport default WebGLLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport { equals } from '../array.js';\n// for pixel color reading\nvar tmpArray4 = new Uint8Array(4);\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nvar WebGLRenderTarget = /** @class */ (function () {\n    /**\n     * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n     * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n     */\n    function WebGLRenderTarget(helper, opt_size) {\n        /**\n         * @private\n         * @type {import(\"./Helper.js\").default}\n         */\n        this.helper_ = helper;\n        var gl = helper.getGL();\n        /**\n         * @private\n         * @type {WebGLTexture}\n         */\n        this.texture_ = gl.createTexture();\n        /**\n         * @private\n         * @type {WebGLFramebuffer}\n         */\n        this.framebuffer_ = gl.createFramebuffer();\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.size_ = opt_size || [1, 1];\n        /**\n         * @type {Uint8Array}\n         * @private\n         */\n        this.data_ = new Uint8Array(0);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.dataCacheDirty_ = true;\n        this.updateSize_();\n    }\n    /**\n     * Changes the size of the render target texture. Note: will do nothing if the size\n     * is already the same.\n     * @param {Array<number>} size Expected size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.setSize = function (size) {\n        if (equals(size, this.size_)) {\n            return;\n        }\n        this.size_[0] = size[0];\n        this.size_[1] = size[1];\n        this.updateSize_();\n    };\n    /**\n     * Returns the size of the render target texture\n     * @return {Array<number>} Size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n     * render target into memory, which is an expensive operation.\n     * This content will be kept in cache but should be cleared after each new render.\n     * @api\n     */\n    WebGLRenderTarget.prototype.clearCachedData = function () {\n        this.dataCacheDirty_ = true;\n    };\n    /**\n     * Returns the full content of the frame buffer as a series of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * @return {Uint8Array} Integer array of color values\n     * @api\n     */\n    WebGLRenderTarget.prototype.readAll = function () {\n        if (this.dataCacheDirty_) {\n            var size = this.size_;\n            var gl = this.helper_.getGL();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n            gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.UNSIGNED_BYTE, this.data_);\n            this.dataCacheDirty_ = false;\n        }\n        return this.data_;\n    };\n    /**\n     * Reads one pixel of the frame buffer as an array of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * If x and/or y are outside of existing data, an array filled with 0 is returned.\n     * @param {number} x Pixel coordinate\n     * @param {number} y Pixel coordinate\n     * @returns {Uint8Array} Integer array with one color value (4 components)\n     * @api\n     */\n    WebGLRenderTarget.prototype.readPixel = function (x, y) {\n        if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n            tmpArray4[0] = 0;\n            tmpArray4[1] = 0;\n            tmpArray4[2] = 0;\n            tmpArray4[3] = 0;\n            return tmpArray4;\n        }\n        this.readAll();\n        var index = Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n        tmpArray4[0] = this.data_[index * 4];\n        tmpArray4[1] = this.data_[index * 4 + 1];\n        tmpArray4[2] = this.data_[index * 4 + 2];\n        tmpArray4[3] = this.data_[index * 4 + 3];\n        return tmpArray4;\n    };\n    /**\n     * @return {WebGLTexture} Texture to render to\n     */\n    WebGLRenderTarget.prototype.getTexture = function () {\n        return this.texture_;\n    };\n    /**\n     * @return {WebGLFramebuffer} Frame buffer of the render target\n     */\n    WebGLRenderTarget.prototype.getFramebuffer = function () {\n        return this.framebuffer_;\n    };\n    /**\n     * @private\n     */\n    WebGLRenderTarget.prototype.updateSize_ = function () {\n        var size = this.size_;\n        var gl = this.helper_.getGL();\n        this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture_, 0);\n        this.data_ = new Uint8Array(size[0] * size[1] * 4);\n    };\n    return WebGLRenderTarget;\n}());\nexport default WebGLRenderTarget;\n//# sourceMappingURL=RenderTarget.js.map","var source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,u){var a=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=u?u.vertexPosition:0,h=u?u.indexPosition:0,d=b/a;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=a,l,v,1),c.length&&i.set(c,b+3),o(i,b+=a,l,v,2),c.length&&i.set(c,b+3),o(i,b+=a,l,v,3),c.length&&i.set(c,b+3),b+=a,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o=r.customAttributesCount,s=2+o,u=new Float32Array(r.renderInstructions),a=u.length/s,l=4*a*(o+3),v=new Uint32Array(6*a),c=new Float32Array(l),g=null,b=0;b<u.length;b+=s)g=i(u,b,c,v,o,g);var h=e({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[c.buffer,v.buffer,u.buffer])}};\";\nvar blob = new Blob([source], { type: 'application/javascript' });\nvar url = URL.createObjectURL(blob);\nexport function create() {\n    return new Worker(url);\n}\n//# sourceMappingURL=webgl.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer, { WebGLWorkerMessageType, colorDecodeId, colorEncodeId, } from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport { ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER } from '../../webgl.js';\nimport { AttributeType, DefaultUniform } from '../../webgl/Helper.js';\nimport { apply as applyTransform, create as createTransform, makeInverse as makeInverseTransform, multiply as multiplyTransform, } from '../../transform.js';\nimport { assert } from '../../asserts.js';\nimport { buffer, createEmpty, equals } from '../../extent.js';\nimport { create as createWebGLWorker } from '../../worker/webgl.js';\nimport { getUid } from '../../util.js';\nimport { listen, unlistenByKey } from '../../events.js';\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n/**\n * @typedef {Object} Options\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nvar WebGLPointsLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLPointsLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     * @param {Options} options Options.\n     */\n    function WebGLPointsLayerRenderer(layer, options) {\n        var _this = this;\n        var uniforms = options.uniforms || {};\n        var projectionMatrixTransform = createTransform();\n        uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n        _this = _super.call(this, layer, {\n            uniforms: uniforms,\n            postProcesses: options.postProcesses,\n        }) || this;\n        _this.sourceRevision_ = -1;\n        _this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n        _this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n        _this.indicesBuffer_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, DYNAMIC_DRAW);\n        _this.program_ = _this.helper.getProgram(options.fragmentShader, options.vertexShader);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.hitDetectionEnabled_ =\n            options.hitFragmentShader && options.hitVertexShader ? true : false;\n        _this.hitProgram_ =\n            _this.hitDetectionEnabled_ &&\n                _this.helper.getProgram(options.hitFragmentShader, options.hitVertexShader);\n        var customAttributes = options.attributes\n            ? options.attributes.map(function (attribute) {\n                return {\n                    name: 'a_' + attribute.name,\n                    size: 1,\n                    type: AttributeType.FLOAT,\n                };\n            })\n            : [];\n        /**\n         * A list of attributes used by the renderer. By default only the position and\n         * index of the vertex (0 to 3) are required.\n         * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n         */\n        _this.attributes = [\n            {\n                name: 'a_position',\n                size: 2,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_index',\n                size: 1,\n                type: AttributeType.FLOAT,\n            },\n        ].concat(customAttributes);\n        /**\n         * A list of attributes used for hit detection.\n         * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n         */\n        _this.hitDetectionAttributes = [\n            {\n                name: 'a_position',\n                size: 2,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_index',\n                size: 1,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_hitColor',\n                size: 4,\n                type: AttributeType.FLOAT,\n            },\n            {\n                name: 'a_featureUid',\n                size: 1,\n                type: AttributeType.FLOAT,\n            },\n        ].concat(customAttributes);\n        _this.customAttributes = options.attributes ? options.attributes : [];\n        _this.previousExtent_ = createEmpty();\n        /**\n         * This transform is updated on every frame and is the composition of:\n         * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n         * - current world->screen transform\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.currentTransform_ = projectionMatrixTransform;\n        /**\n         * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.renderTransform_ = createTransform();\n        /**\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.invertRenderTransform_ = createTransform();\n        /**\n         * @type {Float32Array}\n         * @private\n         */\n        _this.renderInstructions_ = new Float32Array(0);\n        /**\n         * These instructions are used for hit detection\n         * @type {Float32Array}\n         * @private\n         */\n        _this.hitRenderInstructions_ = new Float32Array(0);\n        /**\n         * @type {WebGLRenderTarget}\n         * @private\n         */\n        _this.hitRenderTarget_ =\n            _this.hitDetectionEnabled_ && new WebGLRenderTarget(_this.helper);\n        _this.worker_ = createWebGLWorker();\n        _this.worker_.addEventListener('message', function (event) {\n            var received = event.data;\n            if (received.type === WebGLWorkerMessageType.GENERATE_BUFFERS) {\n                var projectionTransform = received.projectionTransform;\n                if (received.hitDetection) {\n                    this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n                    this.helper.flushBufferData(this.hitVerticesBuffer_);\n                }\n                else {\n                    this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n                    this.helper.flushBufferData(this.verticesBuffer_);\n                }\n                this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n                this.helper.flushBufferData(this.indicesBuffer_);\n                this.renderTransform_ = projectionTransform;\n                makeInverseTransform(this.invertRenderTransform_, this.renderTransform_);\n                if (received.hitDetection) {\n                    this.hitRenderInstructions_ = new Float32Array(event.data.renderInstructions);\n                }\n                else {\n                    this.renderInstructions_ = new Float32Array(event.data.renderInstructions);\n                }\n                this.getLayer().changed();\n            }\n        }.bind(_this));\n        /**\n         * This object will be updated when the source changes. Key is uid.\n         * @type {Object<string, FeatureCacheItem>}\n         * @private\n         */\n        _this.featureCache_ = {};\n        /**\n         * Amount of features in the cache.\n         * @type {number}\n         * @private\n         */\n        _this.featureCount_ = 0;\n        var source = _this.getLayer().getSource();\n        _this.sourceListenKeys_ = [\n            listen(source, VectorEventType.ADDFEATURE, _this.handleSourceFeatureAdded_, _this),\n            listen(source, VectorEventType.CHANGEFEATURE, _this.handleSourceFeatureChanged_, _this),\n            listen(source, VectorEventType.REMOVEFEATURE, _this.handleSourceFeatureDelete_, _this),\n            listen(source, VectorEventType.CLEAR, _this.handleSourceFeatureClear_, _this),\n        ];\n        source.forEachFeature(function (feature) {\n            this.featureCache_[getUid(feature)] = {\n                feature: feature,\n                properties: feature.getProperties(),\n                geometry: feature.getGeometry(),\n            };\n            this.featureCount_++;\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureAdded_ = function (event) {\n        var feature = event.feature;\n        this.featureCache_[getUid(feature)] = {\n            feature: feature,\n            properties: feature.getProperties(),\n            geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n    };\n    /**\n     * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureChanged_ = function (event) {\n        var feature = event.feature;\n        this.featureCache_[getUid(feature)] = {\n            feature: feature,\n            properties: feature.getProperties(),\n            geometry: feature.getGeometry(),\n        };\n    };\n    /**\n     * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureDelete_ = function (event) {\n        var feature = event.feature;\n        delete this.featureCache_[getUid(feature)];\n        this.featureCount_--;\n    };\n    /**\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.handleSourceFeatureClear_ = function () {\n        this.featureCache_ = {};\n        this.featureCount_ = 0;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    WebGLPointsLayerRenderer.prototype.renderFrame = function (frameState) {\n        var renderCount = this.indicesBuffer_.getSize();\n        this.helper.drawElements(0, renderCount);\n        this.helper.finalizeDraw(frameState);\n        var canvas = this.helper.getCanvas();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = String(opacity);\n        }\n        if (this.hitDetectionEnabled_) {\n            this.renderHitDetection(frameState);\n            this.hitRenderTarget_.clearCachedData();\n        }\n        return canvas;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    WebGLPointsLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layer = this.getLayer();\n        var vectorSource = layer.getSource();\n        var viewState = frameState.viewState;\n        var viewNotMoving = !frameState.viewHints[ViewHint.ANIMATING] &&\n            !frameState.viewHints[ViewHint.INTERACTING];\n        var extentChanged = !equals(this.previousExtent_, frameState.extent);\n        var sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n        if (sourceChanged) {\n            this.sourceRevision_ = vectorSource.getRevision();\n        }\n        if (viewNotMoving && (extentChanged || sourceChanged)) {\n            var projection = viewState.projection;\n            var resolution = viewState.resolution;\n            var renderBuffer = layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n            var extent = buffer(frameState.extent, renderBuffer * resolution);\n            vectorSource.loadFeatures(extent, resolution, projection);\n            this.rebuildBuffers_(frameState);\n            this.previousExtent_ = frameState.extent.slice();\n        }\n        // apply the current projection transform with the invert of the one used to fill buffers\n        this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n        multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n        this.helper.useProgram(this.program_);\n        this.helper.prepareDraw(frameState);\n        // write new data\n        this.helper.bindBuffer(this.verticesBuffer_);\n        this.helper.bindBuffer(this.indicesBuffer_);\n        this.helper.enableAttributes(this.attributes);\n        return true;\n    };\n    /**\n     * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n     * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.rebuildBuffers_ = function (frameState) {\n        // saves the projection transform for the current frame state\n        var projectionTransform = createTransform();\n        this.helper.makeProjectionTransform(frameState, projectionTransform);\n        // here we anticipate the amount of render instructions that we well generate\n        // this can be done since we know that for normal render we only have x, y as base instructions,\n        // and x, y, r, g, b, a and featureUid for hit render instructions\n        // and we also know the amount of custom attributes to append to these\n        var totalInstructionsCount = (2 + this.customAttributes.length) * this.featureCount_;\n        if (!this.renderInstructions_ ||\n            this.renderInstructions_.length !== totalInstructionsCount) {\n            this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n        }\n        if (this.hitDetectionEnabled_) {\n            var totalHitInstructionsCount = (7 + this.customAttributes.length) * this.featureCount_;\n            if (!this.hitRenderInstructions_ ||\n                this.hitRenderInstructions_.length !== totalHitInstructionsCount) {\n                this.hitRenderInstructions_ = new Float32Array(totalHitInstructionsCount);\n            }\n        }\n        // loop on features to fill the buffer\n        var featureCache, geometry;\n        var tmpCoords = [];\n        var tmpColor = [];\n        var renderIndex = 0;\n        var hitIndex = 0;\n        var hitColor;\n        for (var featureUid in this.featureCache_) {\n            featureCache = this.featureCache_[featureUid];\n            geometry = /** @type {import(\"../../geom\").Point} */ (featureCache.geometry);\n            if (!geometry || geometry.getType() !== GeometryType.POINT) {\n                continue;\n            }\n            tmpCoords[0] = geometry.getFlatCoordinates()[0];\n            tmpCoords[1] = geometry.getFlatCoordinates()[1];\n            applyTransform(projectionTransform, tmpCoords);\n            hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n            this.renderInstructions_[renderIndex++] = tmpCoords[0];\n            this.renderInstructions_[renderIndex++] = tmpCoords[1];\n            // for hit detection, the feature uid is saved in the opacity value\n            // and the index of the opacity value is encoded in the color values\n            if (this.hitDetectionEnabled_) {\n                this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n                this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n                this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n                this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n            }\n            // pushing custom attributes\n            var value = void 0;\n            for (var j = 0; j < this.customAttributes.length; j++) {\n                value = this.customAttributes[j].callback(featureCache.feature, featureCache.properties);\n                this.renderInstructions_[renderIndex++] = value;\n                if (this.hitDetectionEnabled_) {\n                    this.hitRenderInstructions_[hitIndex++] = value;\n                }\n            }\n        }\n        /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n        var message = {\n            type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n            renderInstructions: this.renderInstructions_.buffer,\n            customAttributesCount: this.customAttributes.length,\n        };\n        // additional properties will be sent back as-is by the worker\n        message['projectionTransform'] = projectionTransform;\n        this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n        this.renderInstructions_ = null;\n        /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n        if (this.hitDetectionEnabled_) {\n            var hitMessage = {\n                type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n                renderInstructions: this.hitRenderInstructions_.buffer,\n                customAttributesCount: 5 + this.customAttributes.length,\n            };\n            hitMessage['projectionTransform'] = projectionTransform;\n            hitMessage['hitDetection'] = true;\n            this.worker_.postMessage(hitMessage, [\n                this.hitRenderInstructions_.buffer,\n            ]);\n            this.hitRenderInstructions_ = null;\n        }\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    WebGLPointsLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        assert(this.hitDetectionEnabled_, 66);\n        if (!this.hitRenderInstructions_) {\n            return;\n        }\n        var pixel = applyTransform(frameState.coordinateToPixelTransform, coordinate.slice());\n        var data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n        var color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n        var index = colorDecodeId(color);\n        var opacity = this.hitRenderInstructions_[index];\n        var uid = Math.floor(opacity).toString();\n        var source = this.getLayer().getSource();\n        var feature = source.getFeatureByUid(uid);\n        if (feature) {\n            return callback(feature, this.getLayer());\n        }\n    };\n    /**\n     * Render the hit detection data to the corresponding render target\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState current frame state\n     */\n    WebGLPointsLayerRenderer.prototype.renderHitDetection = function (frameState) {\n        // skip render entirely if vertex buffers not ready/generated yet\n        if (!this.hitVerticesBuffer_.getSize()) {\n            return;\n        }\n        this.hitRenderTarget_.setSize([\n            Math.floor(frameState.size[0] / 2),\n            Math.floor(frameState.size[1] / 2),\n        ]);\n        this.helper.useProgram(this.hitProgram_);\n        this.helper.prepareDrawToRenderTarget(frameState, this.hitRenderTarget_, true);\n        this.helper.bindBuffer(this.hitVerticesBuffer_);\n        this.helper.bindBuffer(this.indicesBuffer_);\n        this.helper.enableAttributes(this.hitDetectionAttributes);\n        var renderCount = this.indicesBuffer_.getSize();\n        this.helper.drawElements(0, renderCount);\n    };\n    /**\n     * Clean up.\n     */\n    WebGLPointsLayerRenderer.prototype.disposeInternal = function () {\n        this.worker_.terminate();\n        this.layer_ = null;\n        this.sourceListenKeys_.forEach(function (key) {\n            unlistenByKey(key);\n        });\n        this.sourceListenKeys_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return WebGLPointsLayerRenderer;\n}(WebGLLayerRenderer));\nexport default WebGLPointsLayerRenderer;\n//# sourceMappingURL=PointsLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Heatmap\n */\nimport VectorLayer from './Vector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getChangeEventType } from '../Object.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    BLUR: 'blur',\n    GRADIENT: 'gradient',\n    RADIUS: 'radius',\n};\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /** @class */ (function (_super) {\n    __extends(Heatmap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Heatmap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.gradient;\n        delete baseOptions.radius;\n        delete baseOptions.blur;\n        delete baseOptions.weight;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.gradient_ = null;\n        _this.addEventListener(getChangeEventType(Property.GRADIENT), _this.handleGradientChanged_);\n        _this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n        _this.setBlur(options.blur !== undefined ? options.blur : 15);\n        _this.setRadius(options.radius !== undefined ? options.radius : 8);\n        var weight = options.weight ? options.weight : 'weight';\n        if (typeof weight === 'string') {\n            _this.weightFunction_ = function (feature) {\n                return feature.get(weight);\n            };\n        }\n        else {\n            _this.weightFunction_ = weight;\n        }\n        // For performance reasons, don't sort the features before rendering.\n        // The render order is not relevant for a heatmap representation.\n        _this.setRenderOrder(null);\n        return _this;\n    }\n    /**\n     * Return the blur size in pixels.\n     * @return {number} Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getBlur = function () {\n        return /** @type {number} */ (this.get(Property.BLUR));\n    };\n    /**\n     * Return the gradient colors as array of strings.\n     * @return {Array<string>} Colors.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getGradient = function () {\n        return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n    };\n    /**\n     * Return the size of the radius in pixels.\n     * @return {number} Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getRadius = function () {\n        return /** @type {number} */ (this.get(Property.RADIUS));\n    };\n    /**\n     * @private\n     */\n    Heatmap.prototype.handleGradientChanged_ = function () {\n        this.gradient_ = createGradient(this.getGradient());\n    };\n    /**\n     * Set the blur size in pixels.\n     * @param {number} blur Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setBlur = function (blur) {\n        this.set(Property.BLUR, blur);\n    };\n    /**\n     * Set the gradient colors as array of strings.\n     * @param {Array<string>} colors Gradient.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setGradient = function (colors) {\n        this.set(Property.GRADIENT, colors);\n    };\n    /**\n     * Set the size of the radius in pixels.\n     * @param {number} radius Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setRadius = function (radius) {\n        this.set(Property.RADIUS, radius);\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {WebGLPointsLayerRenderer} A layer renderer.\n     */\n    Heatmap.prototype.createRenderer = function () {\n        return new WebGLPointsLayerRenderer(this, {\n            attributes: [\n                {\n                    name: 'weight',\n                    callback: function (feature) {\n                        var weight = this.weightFunction_(feature);\n                        return weight !== undefined ? clamp(weight, 0, 1) : 1;\n                    }.bind(this),\n                },\n            ],\n            vertexShader: \"\\n        precision mediump float;\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform float u_size;\\n        attribute vec2 a_position;\\n        attribute float a_index;\\n        attribute float a_weight;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\\n          v_texCoord = vec2(u, v);\\n          v_weight = a_weight;\\n        }\",\n            fragmentShader: \"\\n        precision mediump float;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\\n        }\",\n            hitVertexShader: \"\\n        precision mediump float;\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform float u_size;\\n        attribute vec2 a_position;\\n        attribute float a_index;\\n        attribute float a_weight;\\n        attribute vec4 a_hitColor;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n        varying vec4 v_hitColor;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\\n          v_texCoord = vec2(u, v);\\n          v_hitColor = a_hitColor;\\n          v_weight = a_weight;\\n        }\",\n            hitFragmentShader: \"\\n        precision mediump float;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_weight;\\n        varying vec4 v_hitColor;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\\n          if (alpha < 0.05) {\\n            discard;\\n          }\\n\\n          gl_FragColor = v_hitColor;\\n        }\",\n            uniforms: {\n                u_size: function () {\n                    return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n                }.bind(this),\n                u_blurSlope: function () {\n                    return (this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR)));\n                }.bind(this),\n            },\n            postProcesses: [\n                {\n                    fragmentShader: \"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",\n                    uniforms: {\n                        u_gradientTexture: function () {\n                            return this.gradient_;\n                        }.bind(this),\n                    },\n                },\n            ],\n        });\n    };\n    return Heatmap;\n}(VectorLayer));\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n    var width = 1;\n    var height = 256;\n    var context = createCanvasContext2D(width, height);\n    var gradient = context.createLinearGradient(0, 0, width, height);\n    var step = 1 / (colors.length - 1);\n    for (var i = 0, ii = colors.length; i < ii; ++i) {\n        gradient.addColorStop(i * step, colors[i]);\n    }\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, height);\n    return context.canvas;\n}\nexport default Heatmap;\n//# sourceMappingURL=Heatmap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { assign } from '../../obj.js';\nimport { compose as composeTransform, makeInverse } from '../../transform.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] &&\n            !hints[ViewHint.INTERACTING] &&\n            !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image && this.loadImage(image)) {\n                    this.image_ = image;\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = size_1;\n            height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersects(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution, (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution);\n        this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        assign(context, this.getLayer().getSource().getContextOptions());\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = this.context.globalAlpha;\n                this.context.globalAlpha = opacity;\n            }\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                this.context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction.bind(_this);\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\nimport { asArray, isStringColor } from '../color.js';\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['get', 'attributeName']` fetches a feature attribute (it will be prefixed by `a_` in the shader)\n *     Note: those will be taken from the attributes provided to the renderer\n *   * `['var', 'varName']` fetches a value from the style variables, or 0 if undefined\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['zoom']` returns the current zoom level\n *   * `['resolution']` returns the current resolution\n *\n * * Math operators:\n *   * `['*', value1, value2]` multiplies `value1` by `value2`\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2]` adds `value1` and `value2`\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n */\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport var ValueTypes = {\n    NUMBER: 1,\n    STRING: 2,\n    COLOR: 4,\n    BOOLEAN: 8,\n    NUMBER_ARRAY: 16,\n    ANY: 31,\n    NONE: 0,\n};\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes=): string} toGlsl Returns a GLSL-compatible string\n * Note: takes in an optional type hint as 3rd parameter\n */\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport var Operators = {};\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @returns {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n    if (typeof value === 'number') {\n        return ValueTypes.NUMBER;\n    }\n    if (typeof value === 'boolean') {\n        return ValueTypes.BOOLEAN;\n    }\n    if (typeof value === 'string') {\n        if (isStringColor(value)) {\n            return ValueTypes.COLOR | ValueTypes.STRING;\n        }\n        return ValueTypes.STRING;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Unhandled value type: \" + JSON.stringify(value));\n    }\n    var valueArr = /** @type {Array<*>} */ (value);\n    var onlyNumbers = valueArr.every(function (v) {\n        return typeof v === 'number';\n    });\n    if (onlyNumbers) {\n        if (valueArr.length === 3 || valueArr.length === 4) {\n            return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n        }\n        return ValueTypes.NUMBER_ARRAY;\n    }\n    if (typeof valueArr[0] !== 'string') {\n        throw new Error(\"Expected an expression operator but received: \" + JSON.stringify(valueArr));\n    }\n    var operator = Operators[valueArr[0]];\n    if (operator === undefined) {\n        throw new Error(\"Unrecognized expression operator: \" + JSON.stringify(valueArr));\n    }\n    return operator.getReturnType(valueArr.slice(1));\n}\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n    return Math.log2(valueType) % 1 === 0;\n}\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<string>} variables List of variables used in the expression; contains **unprefixed names**\n * @property {Array<string>} attributes List of attributes used in the expression; contains **unprefixed names**\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n */\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @returns {string} The value as string.\n */\nexport function numberToGlsl(v) {\n    var s = v.toString();\n    return s.indexOf('.') === -1 ? s + '.0' : s;\n}\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @returns {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n    if (array.length < 2 || array.length > 4) {\n        throw new Error('`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.');\n    }\n    return \"vec\" + array.length + \"(\" + array.map(numberToGlsl).join(', ') + \")\";\n}\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @returns {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n    var array = asArray(color).slice();\n    if (array.length < 4) {\n        array.push(1);\n    }\n    return arrayToGlsl(array.map(function (c, i) {\n        return i < 3 ? c / 255 : c;\n    }));\n}\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @returns {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n    if (context.stringLiteralsMap[string] === undefined) {\n        context.stringLiteralsMap[string] = Object.keys(context.stringLiteralsMap).length;\n    }\n    return context.stringLiteralsMap[string];\n}\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @returns {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n    return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [typeHint] Hint for the expected final type (can be several types combined)\n * @returns {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, typeHint) {\n    // operator\n    if (Array.isArray(value) && typeof value[0] === 'string') {\n        var operator = Operators[value[0]];\n        if (operator === undefined) {\n            throw new Error(\"Unrecognized expression operator: \" + JSON.stringify(value));\n        }\n        return operator.toGlsl(context, value.slice(1), typeHint);\n    }\n    else if ((getValueType(value) & ValueTypes.NUMBER) > 0) {\n        return numberToGlsl(/** @type {number} */ (value));\n    }\n    else if ((getValueType(value) & ValueTypes.BOOLEAN) > 0) {\n        return value.toString();\n    }\n    else if ((getValueType(value) & ValueTypes.STRING) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.STRING)) {\n        return stringToGlsl(context, value.toString());\n    }\n    else if ((getValueType(value) & ValueTypes.COLOR) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.COLOR)) {\n        return colorToGlsl(/** @type {number[]|string} */ (value));\n    }\n    else if ((getValueType(value) & ValueTypes.NUMBER_ARRAY) > 0) {\n        return arrayToGlsl(/** @type {number[]} */ (value));\n    }\n}\nfunction assertNumber(value) {\n    if (!(getValueType(value) & ValueTypes.NUMBER)) {\n        throw new Error(\"A numeric value was expected, got \" + JSON.stringify(value) + \" instead\");\n    }\n}\nfunction assertNumbers(values) {\n    for (var i = 0; i < values.length; i++) {\n        assertNumber(values[i]);\n    }\n}\nfunction assertString(value) {\n    if (!(getValueType(value) & ValueTypes.STRING)) {\n        throw new Error(\"A string value was expected, got \" + JSON.stringify(value) + \" instead\");\n    }\n}\nfunction assertBoolean(value) {\n    if (!(getValueType(value) & ValueTypes.BOOLEAN)) {\n        throw new Error(\"A boolean value was expected, got \" + JSON.stringify(value) + \" instead\");\n    }\n}\nfunction assertArgsCount(args, count) {\n    if (args.length !== count) {\n        throw new Error(\"Exactly \" + count + \" arguments were expected, got \" + args.length + \" instead\");\n    }\n}\nfunction assertArgsMinCount(args, count) {\n    if (args.length < count) {\n        throw new Error(\"At least \" + count + \" arguments were expected, got \" + args.length + \" instead\");\n    }\n}\nfunction assertArgsMaxCount(args, count) {\n    if (args.length > count) {\n        throw new Error(\"At most \" + count + \" arguments were expected, got \" + args.length + \" instead\");\n    }\n}\nfunction assertArgsEven(args) {\n    if (args.length % 2 !== 0) {\n        throw new Error(\"An even amount of arguments was expected, got \" + args + \" instead\");\n    }\n}\nfunction assertArgsOdd(args) {\n    if (args.length % 2 === 0) {\n        throw new Error(\"An even amount of arguments was expected, got \" + args + \" instead\");\n    }\n}\nfunction assertUniqueInferredType(args, types) {\n    if (!isTypeUnique(types)) {\n        throw new Error(\"Could not infer only one type from the following expression: \" + JSON.stringify(args));\n    }\n}\nOperators['get'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.attributes.indexOf(value) === -1) {\n            context.attributes.push(value);\n        }\n        var prefix = context.inFragmentShader ? 'v_' : 'a_';\n        return prefix + value;\n    },\n};\nOperators['var'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.variables.indexOf(value) === -1) {\n            context.variables.push(value);\n        }\n        return \"u_\" + value;\n    },\n};\nOperators['time'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_time';\n    },\n};\nOperators['zoom'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_zoom';\n    },\n};\nOperators['resolution'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_resolution';\n    },\n};\nOperators['*'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" * \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['/'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" / \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['+'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" + \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['-'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" - \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['clamp'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        return \"clamp(\" + expressionToGlsl(context, args[0]) + \", \" + min + \", \" + max + \")\";\n    },\n};\nOperators['%'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"mod(\" + expressionToGlsl(context, args[0]) + \", \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['^'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"pow(\" + expressionToGlsl(context, args[0]) + \", \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['>'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" > \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['>='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" >= \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['<'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" < \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nOperators['<='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\" + expressionToGlsl(context, args[0]) + \" <= \" + expressionToGlsl(context, args[1]) + \")\";\n    },\n};\nfunction getEqualOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsCount(args, 2);\n            // find common type\n            var type = ValueTypes.ANY;\n            for (var i = 0; i < args.length; i++) {\n                type = type & getValueType(args[i]);\n            }\n            if (type === 0) {\n                throw new Error(\"All arguments should be of compatible type, got \" + JSON.stringify(args) + \" instead\");\n            }\n            return \"(\" + expressionToGlsl(context, args[0], type) + \" \" + operator + \" \" + expressionToGlsl(context, args[1], type) + \")\";\n        },\n    };\n}\nOperators['=='] = getEqualOperator('==');\nOperators['!='] = getEqualOperator('!=');\nOperators['!'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertBoolean(args[0]);\n        return \"(!\" + expressionToGlsl(context, args[0]) + \")\";\n    },\n};\nfunction getDecisionOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsMinCount(args, 2);\n            for (var i = 0; i < args.length; i++) {\n                assertBoolean(args[i]);\n            }\n            var result = '';\n            result = args\n                .map(function (arg) { return expressionToGlsl(context, arg); })\n                .join(\" \" + operator + \" \");\n            result = \"(\" + result + \")\";\n            return result;\n        },\n    };\n}\nOperators['all'] = getDecisionOperator('&&');\nOperators['any'] = getDecisionOperator('||');\nOperators['between'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        var value = expressionToGlsl(context, args[0]);\n        return \"(\" + value + \" >= \" + min + \" && \" + value + \" <= \" + max + \")\";\n    },\n};\nOperators['array'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER_ARRAY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 2);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var parsedArgs = args.map(function (val) {\n            return expressionToGlsl(context, val, ValueTypes.NUMBER);\n        });\n        return \"vec\" + args.length + \"(\" + parsedArgs.join(', ') + \")\";\n    },\n};\nOperators['color'] = {\n    getReturnType: function (args) {\n        return ValueTypes.COLOR;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 3);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var array = /** @type {number[]} */ (args);\n        if (args.length === 3) {\n            array.push(1);\n        }\n        var parsedArgs = args.map(function (val, i) {\n            return (expressionToGlsl(context, val, ValueTypes.NUMBER) +\n                (i < 3 ? ' / 255.0' : ''));\n        });\n        return \"vec\" + args.length + \"(\" + parsedArgs.join(', ') + \")\";\n    },\n};\nOperators['interpolate'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.COLOR | ValueTypes.NUMBER;\n        for (var i = 3; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 6);\n        // validate interpolation type\n        var type = args[0];\n        var interpolation;\n        switch (type[0]) {\n            case 'linear':\n                interpolation = 1;\n                break;\n            case 'exponential':\n                interpolation = type[1];\n                break;\n            default:\n                interpolation = null;\n        }\n        if (!interpolation) {\n            throw new Error(\"Invalid interpolation type for \\\"interpolate\\\" operator, received: \" + JSON.stringify(type));\n        }\n        // compute input/output types\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['interpolate'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[1]);\n        var result = null;\n        for (var i = 2; i < args.length - 2; i += 2) {\n            var stop1 = expressionToGlsl(context, args[i]);\n            var output1 = expressionToGlsl(context, args[i + 1], outputType);\n            var stop2 = expressionToGlsl(context, args[i + 2]);\n            var output2 = expressionToGlsl(context, args[i + 3], outputType);\n            result = \"mix(\" + (result || output1) + \", \" + output2 + \", pow(clamp((\" + input + \" - \" + stop1 + \") / (\" + stop2 + \" - \" + stop1 + \"), 0.0, 1.0), \" + numberToGlsl(interpolation) + \"))\";\n        }\n        return result;\n    },\n};\nOperators['match'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 2; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 4);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['match'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[0]);\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 1; i -= 2) {\n            var match = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\" + input + \" == \" + match + \" ? \" + output + \" : \" + (result || fallback) + \")\";\n        }\n        return result;\n    },\n};\nOperators['case'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 1; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsOdd(args);\n        assertArgsMinCount(args, 3);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['case'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        for (var i = 0; i < args.length - 1; i += 2) {\n            assertBoolean(args[i]);\n        }\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 0; i -= 2) {\n            var condition = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\" + condition + \" ? \" + output + \" : \" + (result || fallback) + \")\";\n        }\n        return result;\n    },\n};\n//# sourceMappingURL=expressions.js.map","/**\n * Classes and utilities for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport { ValueTypes, expressionToGlsl, getStringNumberEquivalent, } from '../style/expressions.js';\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSizeExpression('...')\n *   .outputSymbolFragmentShader();\n * ```\n */\nvar ShaderBuilder = /** @class */ (function () {\n    function ShaderBuilder() {\n        /**\n         * Uniforms; these will be declared in the header (should include the type).\n         * @type {Array<string>}\n         * @private\n         */\n        this.uniforms = [];\n        /**\n         * Attributes; these will be declared in the header (should include the type).\n         * @type {Array<string>}\n         * @private\n         */\n        this.attributes = [];\n        /**\n         * Varyings with a name, a type and an expression.\n         * @type {Array<VaryingDescription>}\n         * @private\n         */\n        this.varyings = [];\n        /**\n         * @type {string}\n         * @private\n         */\n        this.sizeExpression = 'vec2(1.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.rotationExpression = '0.0';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.offsetExpression = 'vec2(0.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.colorExpression = 'vec4(1.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.texCoordExpression = 'vec4(0.0, 0.0, 1.0, 1.0)';\n        /**\n         * @type {string}\n         * @private\n         */\n        this.discardExpression = 'false';\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.rotateWithView = false;\n    }\n    /**\n     * Adds a uniform accessible in both fragment and vertex shaders.\n     * The given name should include a type, such as `sampler2D u_texture`.\n     * @param {string} name Uniform name\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.addUniform = function (name) {\n        this.uniforms.push(name);\n        return this;\n    };\n    /**\n     * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n     * The given name should include a type, such as `vec2 a_position`.\n     * @param {string} name Attribute name\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.addAttribute = function (name) {\n        this.attributes.push(name);\n        return this;\n    };\n    /**\n     * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n     * The type and expression of the varying have to be specified separately.\n     * @param {string} name Varying name\n     * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n     * @param {string} expression Expression used to assign a value to the varying.\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.addVarying = function (name, type, expression) {\n        this.varyings.push({\n            name: name,\n            type: type,\n            expression: expression,\n        });\n        return this;\n    };\n    /**\n     * Sets an expression to compute the size of the shape.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `vec2` value.\n     * @param {string} expression Size expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setSizeExpression = function (expression) {\n        this.sizeExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the rotation of the shape.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `float` value in radians.\n     * @param {string} expression Size expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setRotationExpression = function (expression) {\n        this.rotationExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the offset of the symbol from the point center.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `vec2` value.\n     * Note: will only be used for point geometry shaders.\n     * @param {string} expression Offset expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setSymbolOffsetExpression = function (expression) {\n        this.offsetExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the color of the shape.\n     * This expression can use all the uniforms, varyings and attributes available\n     * in the fragment shader, and should evaluate to a `vec4` value.\n     * @param {string} expression Color expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setColorExpression = function (expression) {\n        this.colorExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to compute the texture coordinates of the vertices.\n     * This expression can use all the uniforms and attributes available\n     * in the vertex shader, and should evaluate to a `vec4` value.\n     * @param {string} expression Texture coordinate expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setTextureCoordinateExpression = function (expression) {\n        this.texCoordExpression = expression;\n        return this;\n    };\n    /**\n     * Sets an expression to determine whether a fragment (pixel) should be discarded,\n     * i.e. not drawn at all.\n     * This expression can use all the uniforms, varyings and attributes available\n     * in the fragment shader, and should evaluate to a `bool` value (it will be\n     * used in an `if` statement)\n     * @param {string} expression Fragment discard expression\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setFragmentDiscardExpression = function (expression) {\n        this.discardExpression = expression;\n        return this;\n    };\n    /**\n     * Sets whether the symbols should rotate with the view or stay aligned with the map.\n     * Note: will only be used for point geometry shaders.\n     * @param {boolean} rotateWithView Rotate with view\n     * @return {ShaderBuilder} the builder object\n     */\n    ShaderBuilder.prototype.setSymbolRotateWithView = function (rotateWithView) {\n        this.rotateWithView = rotateWithView;\n        return this;\n    };\n    /**\n     * @returns {string} Previously set size expression\n     */\n    ShaderBuilder.prototype.getSizeExpression = function () {\n        return this.sizeExpression;\n    };\n    /**\n     * @returns {string} Previously set symbol offset expression\n     */\n    ShaderBuilder.prototype.getOffsetExpression = function () {\n        return this.offsetExpression;\n    };\n    /**\n     * @returns {string} Previously set color expression\n     */\n    ShaderBuilder.prototype.getColorExpression = function () {\n        return this.colorExpression;\n    };\n    /**\n     * @returns {string} Previously set texture coordinate expression\n     */\n    ShaderBuilder.prototype.getTextureCoordinateExpression = function () {\n        return this.texCoordExpression;\n    };\n    /**\n     * @returns {string} Previously set fragment discard expression\n     */\n    ShaderBuilder.prototype.getFragmentDiscardExpression = function () {\n        return this.discardExpression;\n    };\n    /**\n     * Generates a symbol vertex shader from the builder parameters,\n     * intended to be used on point geometries.\n     *\n     * Three uniforms are hardcoded in all shaders: `u_projectionMatrix`, `u_offsetScaleMatrix`,\n     * `u_offsetRotateMatrix`, `u_time`.\n     *\n     * The following attributes are hardcoded and expected to be present in the vertex buffers:\n     * `vec2 a_position`, `float a_index` (being the index of the vertex in the quad, 0 to 3).\n     *\n     * The following varyings are hardcoded and gives the coordinate of the pixel both in the quad and on the texture:\n     * `vec2 v_quadCoord`, `vec2 v_texCoord`\n     *\n     * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n     * (namely, hit color with encoded feature id).\n     * @returns {string} The full shader as a string.\n     */\n    ShaderBuilder.prototype.getSymbolVertexShader = function (forHitDetection) {\n        var offsetMatrix = this.rotateWithView\n            ? 'u_offsetScaleMatrix * u_offsetRotateMatrix'\n            : 'u_offsetScaleMatrix';\n        var attributes = this.attributes;\n        var varyings = this.varyings;\n        if (forHitDetection) {\n            attributes = attributes.concat('vec4 a_hitColor');\n            varyings = varyings.concat({\n                name: 'v_hitColor',\n                type: 'vec4',\n                expression: 'a_hitColor',\n            });\n        }\n        return \"precision mediump float;\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_time;\\nuniform float u_zoom;\\nuniform float u_resolution;\\n\" + this.uniforms\n            .map(function (uniform) {\n            return 'uniform ' + uniform + ';';\n        })\n            .join('\\n') + \"\\nattribute vec2 a_position;\\nattribute float a_index;\\n\" + attributes\n            .map(function (attribute) {\n            return 'attribute ' + attribute + ';';\n        })\n            .join('\\n') + \"\\nvarying vec2 v_texCoord;\\nvarying vec2 v_quadCoord;\\n\" + varyings\n            .map(function (varying) {\n            return 'varying ' + varying.type + ' ' + varying.name + ';';\n        })\n            .join('\\n') + \"\\nvoid main(void) {\\n  mat4 offsetMatrix = \" + offsetMatrix + \";\\n  vec2 halfSize = \" + this.sizeExpression + \" * 0.5;\\n  vec2 offset = \" + this.offsetExpression + \";\\n  float angle = \" + this.rotationExpression + \";\\n  float offsetX;\\n  float offsetY;\\n  if (a_index == 0.0) {\\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\\n  } else if (a_index == 1.0) {\\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y - halfSize.y) * sin(angle);\\n    offsetY = (offset.y - halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\\n  } else if (a_index == 2.0) {\\n    offsetX = (offset.x + halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x + halfSize.x) * sin(angle);\\n  } else {\\n    offsetX = (offset.x - halfSize.x) * cos(angle) + (offset.y + halfSize.y) * sin(angle);\\n    offsetY = (offset.y + halfSize.y) * cos(angle) - (offset.x - halfSize.x) * sin(angle);\\n  }\\n  vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  vec4 texCoord = \" + this.texCoordExpression + \";\\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\\n  v_texCoord = vec2(u, v);\\n  u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\\n  v = a_index == 2.0 || a_index == 3.0 ? 0.0 : 1.0;\\n  v_quadCoord = vec2(u, v);\\n\" + varyings\n            .map(function (varying) {\n            return '  ' + varying.name + ' = ' + varying.expression + ';';\n        })\n            .join('\\n') + \"\\n}\";\n    };\n    /**\n     * Generates a symbol fragment shader from the builder parameters,\n     * intended to be used on point geometries.\n     *\n     * Expects the following varyings to be transmitted by the vertex shader:\n     * `vec2 v_quadCoord`, `vec2 v_texCoord`\n     *\n     * @param {boolean} [forHitDetection] If true, the shader will be modified to include hit detection variables\n     * (namely, hit color with encoded feature id).\n     * @returns {string} The full shader as a string.\n     */\n    ShaderBuilder.prototype.getSymbolFragmentShader = function (forHitDetection) {\n        var hitDetectionBypass = forHitDetection\n            ? '  if (gl_FragColor.a < 0.1) { discard; } gl_FragColor = v_hitColor;'\n            : '';\n        var varyings = this.varyings;\n        if (forHitDetection) {\n            varyings = varyings.concat({\n                name: 'v_hitColor',\n                type: 'vec4',\n                expression: 'a_hitColor',\n            });\n        }\n        return \"precision mediump float;\\nuniform float u_time;\\nuniform float u_zoom;\\nuniform float u_resolution;\\n\" + this.uniforms\n            .map(function (uniform) {\n            return 'uniform ' + uniform + ';';\n        })\n            .join('\\n') + \"\\nvarying vec2 v_texCoord;\\nvarying vec2 v_quadCoord;\\n\" + varyings\n            .map(function (varying) {\n            return 'varying ' + varying.type + ' ' + varying.name + ';';\n        })\n            .join('\\n') + \"\\nvoid main(void) {\\n  if (\" + this.discardExpression + \") { discard; }\\n  gl_FragColor = \" + this.colorExpression + \";\\n  gl_FragColor.rgb *= gl_FragColor.a;\\n\" + hitDetectionBypass + \"\\n}\";\n    };\n    return ShaderBuilder;\n}());\nexport { ShaderBuilder };\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {Object.<string,import(\"./Helper\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../renderer/webgl/PointsLayer\").CustomAttribute>} attributes Attribute descriptions.\n */\n/**\n * Parses a {@link import(\"../style/LiteralStyle\").LiteralStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../style/LiteralStyle\").LiteralStyle} style Literal style.\n * @returns {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style) {\n    var symbStyle = style.symbol;\n    var size = symbStyle.size !== undefined ? symbStyle.size : 1;\n    var color = symbStyle.color || 'white';\n    var texCoord = symbStyle.textureCoord || [0, 0, 1, 1];\n    var offset = symbStyle.offset || [0, 0];\n    var opacity = symbStyle.opacity !== undefined ? symbStyle.opacity : 1;\n    var rotation = symbStyle.rotation !== undefined ? symbStyle.rotation : 0;\n    /**\n     * @type {import(\"../style/expressions.js\").ParsingContext}\n     */\n    var vertContext = {\n        inFragmentShader: false,\n        variables: [],\n        attributes: [],\n        stringLiteralsMap: {},\n    };\n    var parsedSize = expressionToGlsl(vertContext, size, ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER);\n    var parsedOffset = expressionToGlsl(vertContext, offset, ValueTypes.NUMBER_ARRAY);\n    var parsedTexCoord = expressionToGlsl(vertContext, texCoord, ValueTypes.NUMBER_ARRAY);\n    var parsedRotation = expressionToGlsl(vertContext, rotation, ValueTypes.NUMBER);\n    /**\n     * @type {import(\"../style/expressions.js\").ParsingContext}\n     */\n    var fragContext = {\n        inFragmentShader: true,\n        variables: vertContext.variables,\n        attributes: [],\n        stringLiteralsMap: vertContext.stringLiteralsMap,\n    };\n    var parsedColor = expressionToGlsl(fragContext, color, ValueTypes.COLOR);\n    var parsedOpacity = expressionToGlsl(fragContext, opacity, ValueTypes.NUMBER);\n    var opacityFilter = '1.0';\n    var visibleSize = \"vec2(\" + expressionToGlsl(fragContext, size, ValueTypes.NUMBER_ARRAY | ValueTypes.NUMBER) + \").x\";\n    switch (symbStyle.symbolType) {\n        case 'square':\n            break;\n        case 'image':\n            break;\n        // taken from https://thebookofshaders.com/07/\n        case 'circle':\n            opacityFilter = \"(1.0-smoothstep(1.-4./\" + visibleSize + \",1.,dot(v_quadCoord-.5,v_quadCoord-.5)*4.))\";\n            break;\n        case 'triangle':\n            var st = '(v_quadCoord*2.-1.)';\n            var a = \"(atan(\" + st + \".x,\" + st + \".y))\";\n            opacityFilter = \"(1.0-smoothstep(.5-3./\" + visibleSize + \",.5,cos(floor(.5+\" + a + \"/2.094395102)*2.094395102-\" + a + \")*length(\" + st + \")))\";\n            break;\n        default:\n            throw new Error('Unexpected symbol type: ' + symbStyle.symbolType);\n    }\n    var builder = new ShaderBuilder()\n        .setSizeExpression(\"vec2(\" + parsedSize + \")\")\n        .setRotationExpression(parsedRotation)\n        .setSymbolOffsetExpression(parsedOffset)\n        .setTextureCoordinateExpression(parsedTexCoord)\n        .setSymbolRotateWithView(!!symbStyle.rotateWithView)\n        .setColorExpression(\"vec4(\" + parsedColor + \".rgb, \" + parsedColor + \".a * \" + parsedOpacity + \" * \" + opacityFilter + \")\");\n    if (style.filter) {\n        var parsedFilter = expressionToGlsl(fragContext, style.filter, ValueTypes.BOOLEAN);\n        builder.setFragmentDiscardExpression(\"!\" + parsedFilter);\n    }\n    /** @type {Object.<string,import(\"../webgl/Helper\").UniformValue>} */\n    var uniforms = {};\n    // define one uniform per variable\n    fragContext.variables.forEach(function (varName) {\n        builder.addUniform(\"float u_\" + varName);\n        uniforms[\"u_\" + varName] = function () {\n            if (!style.variables || style.variables[varName] === undefined) {\n                throw new Error(\"The following variable is missing from the style: \" + varName);\n            }\n            var value = style.variables[varName];\n            if (typeof value === 'string') {\n                value = getStringNumberEquivalent(vertContext, value);\n            }\n            return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n        };\n    });\n    if (symbStyle.symbolType === 'image' && symbStyle.src) {\n        var texture = new Image();\n        texture.src = symbStyle.src;\n        builder\n            .addUniform('sampler2D u_texture')\n            .setColorExpression(builder.getColorExpression() + ' * texture2D(u_texture, v_texCoord)');\n        uniforms['u_texture'] = texture;\n    }\n    // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n    // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n    fragContext.attributes.forEach(function (attrName) {\n        if (vertContext.attributes.indexOf(attrName) === -1) {\n            vertContext.attributes.push(attrName);\n        }\n        builder.addVarying(\"v_\" + attrName, 'float', \"a_\" + attrName);\n    });\n    // for each feature attribute used in the vertex shader, define an attribute in the vertex shader.\n    vertContext.attributes.forEach(function (attrName) {\n        builder.addAttribute(\"float a_\" + attrName);\n    });\n    return {\n        builder: builder,\n        attributes: vertContext.attributes.map(function (attributeName) {\n            return {\n                name: attributeName,\n                callback: function (feature, props) {\n                    var value = props[attributeName];\n                    if (typeof value === 'string') {\n                        value = getStringNumberEquivalent(vertContext, value);\n                    }\n                    return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n                },\n            };\n        }),\n        uniforms: uniforms,\n    };\n}\n//# sourceMappingURL=ShaderBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/WebGLPoints\n */\nimport Layer from './Layer.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport { assign } from '../obj.js';\nimport { parseLiteralStyle } from '../webgl/ShaderBuilder.js';\n/**\n * @typedef {Object} Options\n * @property {import('../style/LiteralStyle.js').LiteralStyle} style Literal style to apply to the layer features.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n */\n/**\n * @classdesc\n * Layer optimized for rendering large point datasets. Takes a `style` property which\n * is a serializable JSON object describing how the layer should be rendered.\n *\n * Here are a few samples of literal style objects:\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'circle',\n *     size: 8,\n *     color: '#33AAFF',\n *     opacity: 0.9\n *   }\n * }\n * ```\n *\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'image',\n *     offset: [0, 12],\n *     size: [4, 8],\n *     src: '../static/exclamation-mark.png'\n *   }\n * }\n * ```\n *\n * **Important: a `WebGLPoints` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar WebGLPointsLayer = /** @class */ (function (_super) {\n    __extends(WebGLPointsLayer, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function WebGLPointsLayer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {import('../webgl/ShaderBuilder.js').StyleParseResult}\n         */\n        _this.parseResult_ = parseLiteralStyle(options.style);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hitDetectionDisabled_ = !!options.disableHitDetection;\n        return _this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {WebGLPointsLayerRenderer} A layer renderer.\n     */\n    WebGLPointsLayer.prototype.createRenderer = function () {\n        return new WebGLPointsLayerRenderer(this, {\n            vertexShader: this.parseResult_.builder.getSymbolVertexShader(),\n            fragmentShader: this.parseResult_.builder.getSymbolFragmentShader(),\n            hitVertexShader: !this.hitDetectionDisabled_ &&\n                this.parseResult_.builder.getSymbolVertexShader(true),\n            hitFragmentShader: !this.hitDetectionDisabled_ &&\n                this.parseResult_.builder.getSymbolFragmentShader(true),\n            uniforms: this.parseResult_.uniforms,\n            attributes: this.parseResult_.attributes,\n        });\n    };\n    /**\n     * Clean up.\n     */\n    WebGLPointsLayer.prototype.disposeInternal = function () {\n        this.getRenderer().disposeInternal();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return WebGLPointsLayer;\n}(Layer));\nexport default WebGLPointsLayer;\n//# sourceMappingURL=WebGLPoints.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport { jsonp as requestJSONP } from '../net.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            imageSmoothing: options.imageSmoothing,\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' +\n            _this.apiKey_ +\n            '&c=' +\n            _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight\n            ? resource.imageWidth / scale\n            : [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize,\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var z = tileGrid.getZForResolution(viewState.resolution, this.zDirection);\n                var tileCoord = tileGrid.getTileCoordForCoordAndZ(viewState.center, z);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin &&\n                            zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src =\n        url +\n            (url.indexOf('?') == -1 ? '?' : '&') +\n            (opt_callbackParam || 'callback') +\n            '=' +\n            key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceResolution, render as renderReprojected, } from '../reproj.js';\nimport { getCenter, getHeight, getIntersection, getWidth } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction, opt_contextOptions) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @return {HTMLCanvasElement} Image.\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [\n                {\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage(),\n                },\n            ], 0, undefined, this.contextOptions_);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED ||\n                        sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(\n        /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { abstract } from '../util.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport { linearFindNearest } from '../array.js';\n/**\n * @enum {string}\n */\nexport var ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ =\n            options.resolutions !== undefined ? options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    ImageSource.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this), this.contextOptions_);\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/WMSServerType\n */\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n    /**\n     * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n     * @api\n     */\n    CARMENTA_SERVER: 'carmentaserver',\n    /**\n     * HiDPI support for [GeoServer](https://geoserver.org/)\n     * @api\n     */\n    GEOSERVER: 'geoserver',\n    /**\n     * HiDPI support for [MapServer](https://mapserver.org/)\n     * @api\n     */\n    MAPSERVER: 'mapserver',\n    /**\n     * HiDPI support for [QGIS](https://qgis.org/)\n     * @api\n     */\n    QGIS: 'qgis',\n};\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { appendParams } from '../uri.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { compareVersions } from '../string.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth, } from '../extent.js';\nimport { get as getProjection, transform } from '../proj.js';\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */ (function (_super) {\n    __extends(ImageWMS, _super);\n    /**\n     * @param {Options=} [opt_options] ImageWMS options.\n     */\n    function ImageWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            imageSmoothing: options.imageSmoothing,\n            projection: options.projection,\n            resolutions: options.resolutions,\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ =\n            options.imageLoadFunction !== undefined\n                ? options.imageLoadFunction\n                : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        _this.updateV13_();\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    ImageWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS'],\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Return the GetLegendGraphic URL, optionally optimized for the passed\n     * resolution and possibly including any passed specific parameters. Returns\n     * `undefined` if the GetLegendGraphic URL cannot be constructed.\n     *\n     * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n     *     will not be calculated and included in URL.\n     * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n     *     request is generated for this wms layer, else it will try to use the\n     *     configured wms layer. Default `FORMAT` is `image/png`.\n     *     `VERSION` should not be specified here.\n     * @return {string|undefined} GetLegendGraphic URL.\n     * @api\n     */\n    ImageWMS.prototype.getLegendUrl = function (resolution, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetLegendGraphic',\n            'FORMAT': 'image/png',\n        };\n        if (params === undefined || params['LAYER'] === undefined) {\n            var layers = this.params_.LAYERS;\n            var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n            if (!isSingleLayer) {\n                return undefined;\n            }\n            baseParams['LAYER'] = layers;\n        }\n        if (resolution !== undefined) {\n            var mpu = this.getProjection()\n                ? this.getProjection().getMetersPerUnit()\n                : 1;\n            var dpi = 25.4 / 0.28;\n            var inchesPerMeter = 39.37;\n            baseParams['SCALE'] = resolution * mpu * inchesPerMeter * dpi;\n        }\n        assign(baseParams, params);\n        return appendParams(/** @type {string} */ (this.url_), baseParams);\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../Image.js\").default} Single image.\n     */\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var imageResolution = resolution / pixelRatio;\n        var center = getCenter(extent);\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [\n            viewWidth,\n            viewHeight,\n        ]);\n        var requestWidth = Math.ceil((this.ratio_ * getWidth(extent)) / imageResolution);\n        var requestHeight = Math.ceil((this.ratio_ * getHeight(extent)) / imageResolution);\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [\n            requestWidth,\n            requestHeight,\n        ]);\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), viewExtent)) {\n            return image;\n        }\n        var params = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n        };\n        assign(params, this.params_);\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageWMS.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 8); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        params['WIDTH'] = size[0];\n        params['HEIGHT'] = size[1];\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\n        }\n        else {\n            bbox = extent;\n        }\n        params['BBOX'] = bbox.join(',');\n        return appendParams(/** @type {string} */ (this.url_), params);\n    };\n    /**\n     * Return the URL used for this WMS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageWMS.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageWMS.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.image_ = null;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    ImageWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return ImageWMS;\n}(ImageSource));\nexport default ImageWMS;\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/TileWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport { appendParams } from '../uri.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { buffer, createEmpty } from '../extent.js';\nimport { buffer as bufferSize, scale as scaleSize, toSize } from '../size.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { compareVersions } from '../string.js';\nimport { get as getProjection, transform, transformExtent } from '../proj.js';\nimport { modulo } from '../math.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /** @class */ (function (_super) {\n    __extends(TileWMS, _super);\n    /**\n     * @param {Options=} [opt_options] Tile WMS options.\n     */\n    function TileWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : /** @type {Options} */ ({});\n        var params = options.params || {};\n        var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: !transparent,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = params;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.updateV13_();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    TileWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projectionObj);\n        }\n        var z = tileGrid.getZForResolution(resolution, this.zDirection);\n        var tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n            tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS'],\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n        var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Return the GetLegendGraphic URL, optionally optimized for the passed\n     * resolution and possibly including any passed specific parameters. Returns\n     * `undefined` if the GetLegendGraphic URL cannot be constructed.\n     *\n     * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n     *     will not be calculated and included in URL.\n     * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n     *     request is generated for this wms layer, else it will try to use the\n     *     configured wms layer. Default `FORMAT` is `image/png`.\n     *     `VERSION` should not be specified here.\n     * @return {string|undefined} GetLegendGraphic URL.\n     * @api\n     */\n    TileWMS.prototype.getLegendUrl = function (resolution, params) {\n        if (this.urls[0] === undefined) {\n            return undefined;\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetLegendGraphic',\n            'FORMAT': 'image/png',\n        };\n        if (params === undefined || params['LAYER'] === undefined) {\n            var layers = this.params_.LAYERS;\n            var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n            if (!isSingleLayer) {\n                return undefined;\n            }\n            baseParams['LAYER'] = layers;\n        }\n        if (resolution !== undefined) {\n            var mpu = this.getProjection()\n                ? this.getProjection().getMetersPerUnit()\n                : 1;\n            var dpi = 25.4 / 0.28;\n            var inchesPerMeter = 39.37;\n            baseParams['SCALE'] = resolution * mpu * inchesPerMeter * dpi;\n        }\n        assign(baseParams, params);\n        return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileWMS.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileWMS.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        params['WIDTH'] = tileSize[0];\n        params['HEIGHT'] = tileSize[1];\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 52); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox = tileExtent;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            var tmp = void 0;\n            tmp = tileExtent[0];\n            bbox[0] = tileExtent[1];\n            bbox[1] = tmp;\n            tmp = tileExtent[2];\n            bbox[2] = tileExtent[3];\n            bbox[3] = tmp;\n        }\n        params['BBOX'] = bbox.join(',');\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        return appendParams(url, params);\n    };\n    /**\n     * Get the tile pixel ratio for this source.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileWMS.prototype.getTilePixelRatio = function (pixelRatio) {\n        return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileWMS.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.setKey(this.getKeyForParams_());\n    };\n    /**\n     * @private\n     */\n    TileWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n     * @param {number} pixelRatio The pixel ratio\n     * @param {import(\"../proj/Projection.js\").default} projection The projection\n     * @return {string|undefined} The tile URL\n     * @override\n     */\n    TileWMS.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projection);\n        }\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (pixelRatio != 1) {\n            tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n        };\n        assign(baseParams, this.params_);\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n    };\n    return TileWMS;\n}(TileImage));\nexport default TileWMS;\n//# sourceMappingURL=TileWMS.js.map","export {Collection, Map, View, Feature } from 'ol';\n\n\nimport { unByKey } from 'ol/Observable';\nimport { Observable } from 'ol';\nObservable.unByKey = unByKey;\n\nexport { Observable };\n\nimport { Control, Zoom, Attribution, ScaleLine} from 'ol/control';\nimport LayerSwitcher from 'ol-layerswitcher';\nlet control = { Control, Zoom, Attribution, ScaleLine, LayerSwitcher };\nexport { control };\n\nimport * as interaction from 'ol/interaction';\nexport { interaction };\n\nimport * as sphere from 'ol/sphere';\nexport { sphere };\n\nimport { GeoJSON, KML } from 'ol/format';\nlet format = {\n\tGeoJSON: GeoJSON,\n\tKML: KML,\n};\nexport { format };\n\nimport { Tile, Group, Vector as VectorLayer, WebGLPoints, Heatmap, Image } from 'ol/layer';\nlet layer = {\n\tGroup: Group,\n\tTile: Tile,\n\tVector: VectorLayer,\n\tWebGLPoints: WebGLPoints,\n\tHeatmap: Heatmap,\n\tImage: Image,\n};\nexport { layer };\n\nimport { toLonLat, fromLonLat } from 'ol/proj';\nlet proj = {\n\ttoLonLat: toLonLat,\n\tfromLonLat: fromLonLat,\n};\nexport { proj };\n\nimport { LineString, Point, MultiPoint } from 'ol/geom';\nlet geom = {\n\tLineString: LineString,\n\tPoint: Point,\n\tMultiPoint: MultiPoint,\n};\nexport { geom };\n\n//import $Style from 'ol/style/Style';\n//\nimport { Style, Text, Stroke, Fill, Circle, Icon } from 'ol/style';\nlet style = {\n\tIcon: Icon,\n\tStyle: Style,\n\tText: Text,\n\tStroke: Stroke,\n\tFill: Fill,\n\tCircle: Circle,\n};\nexport { style };\n\nimport { OSM, XYZ, TileWMS, BingMaps, Vector as VectorSource, ImageWMS} from 'ol/source';\nlet source = {\n\tOSM: OSM,\n\tXYZ: XYZ,\n\tTileWMS: TileWMS,\n\tBingMaps: BingMaps,\n\tVector: VectorSource,\n\tImageWMS: ImageWMS,\n};\nexport {source};\n\n"],"names":["abstract","Error","uidCounter_","getUid","obj","ol_uid","String","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","AssertionError","_super","code","_this","message","split","call","name","BaseEvent","type","propagationStopped","target","preventDefault","stopPropagation","Disposable","disposed","dispose","disposeInternal","numberSafeCompareFunction","a","includes","arr","indexOf","linearFindNearest","direction","n","length","i","reverseSubArray","begin","end","tmp","extend","data","extension","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","assign","var_sources","TypeError","output","ii","arguments","source","key","clear","object","property","getValues","values","push","isEmpty","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","Event","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","listen","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","listenOnce","unlistenByKey","Observable","revision_","changed","EventType","getRevision","on","len","once","ol_key","un","unByKey","EventTarget","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","getChangeEventType","ObjectEventType","set","opt_silent","unset","changeEventTypeCache","Property","CollectionEvent","opt_element","opt_index","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","array","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","prev","setAt","j","opt_except","assert","assertion","errorCode","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","styles_1","createStyleFunction","setId","id","Units","METERS_PER_UNIT","Math","PI","tmp_","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","e","coordinate","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","mat","det","toString","join","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","slice","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","Corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","applyTransform","transformFn","opt_stops","width","height","xs","ys","l","_boundingExtentXYs","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","clamp","cosh","exp","log2","log","LOG2E","squaredSegmentDistance","t","squaredDistance","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","r","lerp","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","EPSG4326Projection","opt_axisOrientation","cache","transforms","add","destination","sourceCode","destinationCode","getDistance","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","getLengthInternal","getAreaInternal","projection","getType","GeometryType","coords","jj","getCoordinates","geometries","getGeometries","abs","distance","bearing","lon1","dByR","lat","asin","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","closestOnSegment","segment","start","along","coordinate1","coordinate2","rotate","cosAngle","sinAngle","coord1","coord2","squaredDistanceToSegment","wrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","getWorldsAway","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","opt_units","pointResolution","getter","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","projections2","forwardTransform","inverseTransform","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","transform2D","opt_dest","dest","anchor","anchorX","anchorY","deltaX","deltaY","k","translate","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmpTransform","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","nextArgs","arrayEquals","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","returnOrUpdate","scale","opt_sy","opt_anchor","simplify","tolerance","intersectsExtent","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","GeometryLayout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","snap","round","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","ret","point1","point2","intersectsLineString","coordinatesExtent","forEachSegment","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","linearRingIsClockwise","firstVertexRepeated","iMinVertex","minXAtMinY","findCornerVertex","iPreviousVertex","iNextVertex","aX","aY","bX","bY","cX","cY","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","polygon","startAngle","makeRegular","getRadius","Fill","color_","color","getColor","setColor","interpolatePoint","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","num","opt_size","ratio","toSize","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","load","unlistenImageChange","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromNamed","el","document","createElement","body","appendChild","rgb","getComputedStyle","removeChild","fromString","cacheSize","s","g","exec","hasAlpha","substr","normalize","map","Number","fromStringInternal_","asArray","asColorLike","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultLineDash","defaultPadding","checkedFonts","setSize","console","warn","measureFont","div","heights","measureContext","textHeights","registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","margin","padding","position","left","offsetHeight","measureAndCacheTextWidth","rotateAtOffset","context","offsetX","offsetY","drawImageOrLabel","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","createTransformStringCanvas","createTransformString","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","render","getFill","getPoints","getRadius2","getAngle","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","ImageState","strokeStyle","strokeWidth","imageSize","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","drawHitDetectionCanvas_","CircleStyle","setRadius","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","image","renderer_","renderer","text_","zIndex_","zIndex","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","concat","Text","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","TextPlacement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","BaseLayer","LayerProperty","visible","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","zindex","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","setMap","handleSourcePropertyChange_","setSource","states","getSource","getState","SourceState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","prepareFrame","renderFrame","RenderEventType","layerStatesArray","layerState","some","arrayLayerState","createRenderer","hasRenderer","inView","viewState","zoom","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","toStyleFunction","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","opt_declutterGroups","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","declutterGroups_","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","ceil","declutterGroups","hitDetectionImage","origin","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","top","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Circle","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","flatOffset","flatEnd","oo","range","declutterGroup","drawChars_","geometryWidths","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","saveTextStates_","p0","p1","p2","p3","pixelRatio_1","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","imageState","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","moveTo","clipUnrotated","inverted","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","renderPixel","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","module","quickselect","compare","quickselectStep","z","sd","newLeft","newRight","swap","defaultCompare","RBush","maxEntries","_maxEntries","_minEntries","findItem","items","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","multiSelect","all","_all","search","bbox","result","nodesToSearch","childBBox","collides","insert","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","pow","N2","N1","right2","right3","_chooseSubtree","level","minArea","minEnlargement","targetNode","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","bbox2","overlap","_allDistMargin","leftBBox","rightBBox","i$1","child$1","siblings","factory","drawTextOnPath","startM","rotatedCoordinates","previousAngle","numChars","segmentM","angleChanged","char","charLength","charM","segmentPos","delta","interpolate","tmpExtent","p4","Executor","overlaps","alignFill_","declutterItems","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","align","lines","numLines","widths","currentWidth","measureTextWidths","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","setStrokeStyle_","replayImageOrLabel_","contextScale","imageOrLabel","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","centerX","centerY","renderBufferX","renderBufferY","strokePadding","declutterArgs","origin_1","repeatSize","renderDeclutter","declutterTree","boxes","box","declutterData","currentAlpha","drawLabelWithPointPlacement_","execute_","featureCallback","opt_hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","labelWithAnchor","widthIndex","declutterGroupIndex","rendered","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ORDER","BuilderType","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","contextSize","hitExtent","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","imageData","i_1","j_1","result_1","executor","zs","opt_builderTypes","opt_declutterReplays","builderTypes","0","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","getKey","src","crossOrigin","asString","shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","maxCacheSize","ImageBase","getResolution","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","loadHandler","errorHandler","img","promise","listening_1","then","catch","listenerKeys","taintedTestContext","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","imgData","putImageData","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","iconImageCache","getIconImage","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","loading","renderGeometry","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","layerIndex","makeScale","canvasTransform","transformToString","vectorSource","clipped","layerExtent","viewHints","ViewHint","declutterReplays","getWrapX","world","transform_1","transform_2","viewHints_1","zz","executorData","currentExecutor","replayDeclutter","parseFloat","Promise","resolve","reject","features","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","canvas_1","imgContext","byGeometryType","replace","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","layer_1","features_1","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","getSquaredRenderTolerance","dirty","userTransform","userExtent","getFeaturesInExtent","replayGroupInstructions","executorGroup","getOverlaps","VectorLayer","opt_maxEntries","rbush_","RBush_","items_","extents","uid","update","getAll","getInExtent","forEach_","forEachInExtent","rbush","Source","projection_","attributions_","adaptAttributions","attributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","getAttributions","getAttributionsCollapsible","getResolutions","getContextOptions","refresh","setAttributions","setState","attributionLike","xhr","url","format","success","failure","XMLHttpRequest","open","FormatType","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","opt_feature","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","filter","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","easeIn","easeOut","inAndOut","linear","Tile","interimTile","hifi","transition_","transition","transitionStarts_","release","getInterimTile","TileState","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","Date","now","lastIndex","firstIndex","duration","MapRenderer","map_","declutterTree_","dispatchRenderEvent","calculateMatrices2D","pixelToCoordinateTransform","checkWrapped","thisArg","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","entry","tmpCoord","callback_1","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","zIndexItems","renderDeclutterItems","scheduleExpireIconCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","CLASS_UNSELECTABLE","getViewport","insertBefore","firstChild","children_","renderedVisible_","previousElement","oldChildren","childNodes","oldChild","newChild","replaceChildren","display","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","MapEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","enumerable","configurable","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","clientX","clientY","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","createExtent","onlyCenter","smooth","opt_isMoving","viewWidth","viewHeight","none","getViewportClampedResolution","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","disable","View","hints_","animations_","updateAnimationKey_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","rotationNone","theta","createRotationConstraint","constraints_","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","animationCallback","series","animation","complete","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","opt_rotation","setViewportSize","ViewProperty","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","getConstrainedCenter","centerOn","centerOnInternal","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","coordinatesEqual","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","MapProperty","view","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","getTarget","getTargetElement","getView","getOverlayById","getLoading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","elementFromPoint","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","lowOnFrameBudget","targetElement","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","usedTiles","MapEventType","setLayerGroup","setView","computedStyle","offsetWidth","Control","target_","mapEvent","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","updateElement_","lastChild","removeChildren","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","LEADING_DIGITS","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","steps","scaleBarText_","dpi_","dpi","setDpi","pointResolutionUnits","ProjUnits","nominalCount","suffix","metersPerDegree","decimalCount","html","decimal","createScaleBar","toFixed","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","Interaction","setActive","InteractionProperty","active","zoomByDelta","DoubleClickZoom","delta_","stopEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","centroid","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","hasAttribute","activeElement","focus","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom","out_","out","mapExtent","boxPixelExtent","scaleFromCenter","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyCode","KeyCode","mapUnitsDelta","pan","KeyboardZoom","charCode","charCodeAt","Mode","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDropEventType","DragAndDropEvent","file","opt_features","opt_projection","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","handleResult_","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsText","dropEffect","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","setCenterAndRadius","getRadiusSquared_","lineStrings","lineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","douglasPeuckerArray","intersectsLineStringArray","appendPoint","getPoint","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","linearRingssCenter","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","DrawEventType","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","mode","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","squaredCoordinateDistance","Constructor_1","mode_1","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","move","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","abortDrawing_","appendCoordinates","ending","sketchFeatures","overlaySource","ExtentEventType","ExtentEvent","Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","tempExtent","tempSegment","ModifyEventType","ModifyEvent","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","getDefaultStyleFunction","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","writer","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","segmentData","depth","rings","centerSegmentData","circumferenceSegmentData","featureSegments","geometry_1","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","closestOnSegmentData","insertVertex_","opt_coordinate","bufferExtent","nodes","projectedDistanceToSegmentDataSquared","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layers_1","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","selectInteractions","removeFeatureLayerAssociation_","getFeatureFromEvent","Snap","vertex_","edge_","edge","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","currentMap","closestSegmentData","projectedCoordinate","isCircle","closestOnCircle","TranslateEventType","TranslateEvent","startCoordinate","Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","geom","oldMap","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaultControls","defaultInteractions","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","opt_tileCoord","getKeyZXY","hash","TileCache","expireCache","pruneExceptNewestZ","fromKey","TileRange","containsTileRange","ol_Observable","createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","CSS_PREFIX","LayerSwitcher","_Control","instance","classCallCheck","collapseTipLabel","ReferenceError","possibleConstructorReturn","getPrototypeOf","activationMode","startActive","groupSelectStyle","getGroupSelectStyle","mapListeners","hiddenClassName","isTouchDevice_","shownClassName","panel","enableTouchScroll_","this_","onclick","hidePanel","showPanel","onmouseover","onmouseout","toElement","relatedTarget","subClass","superClass","inherits","receiver","Function","desc","getOwnPropertyDescriptor","renderPanel","render_event","ensureTopVisibleBaseLayerShown_","forEachRecursive","idx","setGroupVisibility","setChildVisibility","ul","renderLayers_","changedLyr","rendercomplete_event","lyr","lyrs","getGroupsAndLayers","isBaseGroup","descendantVisibility","every","v","groupVisible","groupIndeterminate","lastVisibleBaseLyr","setVisible_","filterFn","li","lyrTitle","checkboxId","uuid","btn","toggleFold_","_input","checked","indeterminate","onchange","htmlFor","rsl","elm","renderLayer_","random","scrollStartPos","scrollTop","touches","pageY","createEvent","ol","require$$0","require$$1","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","equivalentProjection","decimals","power_1","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertySetter","opt_property","localName","makeChildAppender","nodeWriter","makeSimpleNodeFactory","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","pushSerializeAndPop","serializersNS","nodeFactory","opt_keys","serialize","xmlSerializer_","document_","implementation","createDocument","XMLFeature","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readDecimal","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","string","toPrecision","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_NO_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","TEXTAREA","GX_NAMESPACE_URIS","NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","LINK_PARSERS","href","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","getAttribute","sharedStyles","drawName","multiGeometryPoints","featureStyle","findStyle","styleValue","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","baseURI","location","URL","fs","readName","readNameFromDocument","readNameFromNode","name_1","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","setAttributeNS","readColor","hexColor","readFlatCoordinates","re","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","flatLinearRing","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","test","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","supportedExtensions","CONTEXT_IDS","opt_attributes","BufferUsage","WebGLArrayBuffer","opt_usage","usage","ofSize","getArrayClassForType","fromArray","from","fromArrayBuffer","getUsage","Float32Array","Uint32Array","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","texture","uniform3f","uniform4f","uniform1f","fromTransform","mat4","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","bufferCache_","currentProgram_","getSupportedExtensions","getExtension","ContextEventType","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","postProcessPasses_","postProcesses","shaderCompileErrors_","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","prepareDraw","getCanvas","applyFrameState","prepareDrawToRenderTarget","renderTarget","opt_disableAlphaBlend","getFramebuffer","getTexture","ZERO","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","resetTransform","scaleTransform","offsetRotateMatrix","rotateTransform","setUniformMatrixValue","setUniformFloatValue","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderInfoLog","getShaderCompileErrors","getAttributeLocation","makeProjectionTransform","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attributes","attr","getByteSizeFromType","computeAttributesStride","opt_data","opt_texture","BYTES_PER_ELEMENT","Uint16Array","WebGLWorkerMessageType","WebGLLayerRenderer","helper","tmpArray4","WebGLRenderTarget","helper_","texture_","framebuffer_","data_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","blob","Blob","createObjectURL","WebGLPointsLayerRenderer","projectionMatrixTransform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitProgram_","customAttributes","attribute","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","worker_","Worker","received","projectionTransform","hitDetection","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","renderCount","renderHitDetection","viewNotMoving","extentChanged","sourceChanged","BaseVector","rebuildBuffers_","multiplyTransform","featureCache","totalInstructionsCount","totalHitInstructionsCount","hitColor","tmpCoords","tmpColor","renderIndex","hitIndex","featureUid","radix","customAttributesCount","postMessage","hitMessage","colorDecodeId","terminate","DEFAULT_GRADIENT","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","u_size","u_blurSlope","u_gradientTexture","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageExtent","imageResolution","imagePixelRatio","viewCenter","size_1","dw","dh","previousAlpha","ImageLayer","CanvasTileLayerRenderer","tileLayer","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getTile","getPreload","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","postRenderFunction","preload","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","tmpTileCoord","TileGrid","opt_strict","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","createOrUpdateTileRange","getTileRangeExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","createOrUpdateTileCoord","getTileCoordResolution","getFullTileRange","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","opt_maxResolution","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","scaleSize","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTileUrlFunctions","tileUrlFunctions","tileCoordHash","brokenDiagonalRendering_","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","templates","createFromTemplates","BaseTileLayer","setPreload","setUseInterimTilesOnError","TileProperty","TileLayer","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","IMAGE_SMOOTHING_DISABLED","msImageSmoothingEnabled","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","renderReprojected","leftToLoad_1","sourceListenKey_1","unlistenSources_","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","ValueTypes","Operators","getValueType","valueArr","operator","getReturnType","numberToGlsl","arrayToGlsl","getStringNumberEquivalent","stringLiteralsMap","expressionToGlsl","typeHint","toGlsl","stringToGlsl","assertNumber","assertNumbers","assertString","assertBoolean","assertArgsCount","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","assertUniqueInferredType","types","valueType","getEqualOperator","getDecisionOperator","arg","inFragmentShader","variables","parsedArgs","opt_typeHint","interpolation","outputType","stop1","output1","stop2","fallback","assertArgsOdd","ShaderBuilder","varyings","sizeExpression","rotationExpression","offsetExpression","colorExpression","texCoordExpression","discardExpression","addUniform","addAttribute","addVarying","expression","setSizeExpression","setRotationExpression","setSymbolOffsetExpression","setColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","setSymbolRotateWithView","getSizeExpression","getOffsetExpression","getColorExpression","getTextureCoordinateExpression","getFragmentDiscardExpression","getSymbolVertexShader","forHitDetection","offsetMatrix","varying","getSymbolFragmentShader","hitDetectionBypass","WebGLPointsLayer","parseResult_","symbStyle","symbol","texCoord","textureCoord","vertContext","parsedSize","parsedOffset","parsedTexCoord","parsedRotation","fragContext","parsedColor","parsedOpacity","opacityFilter","visibleSize","symbolType","st","builder","parsedFilter","varName","attrName","attributeName","parseLiteralStyle","hitDetectionDisabled_","disableHitDetection","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","requestJSONP","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","XYZ","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","defaultImageLoadFunction","appendParams","uri","params","keyParams","encodeURIComponent","qs","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","params_","v13_","updateV13_","serverType_","ratio_","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","VERSION","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getLegendUrl","LAYERS","getParams","viewExtent","requestExtent","getImageLoadFunction","WMSServerType","setImageLoadFunction","updateParams","version","OSM","TileWMS","transparent","tmpExtent_","getKeyForParams_","tileExtent","bufferSize","transformExtent","Group","Vector","WebGLPoints","toLonLat","lonLat","lon","fromLonLat"],"mappings":"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"}